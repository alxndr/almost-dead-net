{"version":3,"sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xfind.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_reduced.js","webpack://almost-dead-net/./node_modules/ramda/es/find.js","webpack://almost-dead-net/./node_modules/ramda/es/includes.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_includes.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_indexOf.js","webpack://almost-dead-net/./node_modules/ramda/es/where.js","webpack://almost-dead-net/./src/components/helpers/setlist-helper.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./node_modules/ramda/es/groupWith.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_map.js","webpack://almost-dead-net/./node_modules/ramda/es/curryN.js","webpack://almost-dead-net/./node_modules/ramda/es/max.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xmap.js","webpack://almost-dead-net/./node_modules/ramda/es/map.js","webpack://almost-dead-net/./node_modules/ramda/es/pluck.js","webpack://almost-dead-net/./node_modules/ramda/es/reduce.js","webpack://almost-dead-net/./node_modules/ramda/es/converge.js","webpack://almost-dead-net/./node_modules/ramda/es/juxt.js","webpack://almost-dead-net/./node_modules/ramda/es/reject.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_complement.js","webpack://almost-dead-net/./node_modules/ramda/es/partition.js","webpack://almost-dead-net/./src/components/segue.js","webpack://almost-dead-net/./src/components/perf_note.js","webpack://almost-dead-net/./src/components/teases_note.js","webpack://almost-dead-net/./src/components/setlist.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","XFind","f","xf","this","found","_xfBase","result","input","x","_curry2","_dispatchable","fn","list","idx","len","includes","_includes","a","inf","item","indexOf","equals","_indexOf","where","spec","testObj","prop","normalizeSetlist","rawSetlistValue","split","children","state","rest","Location","location","previousUrl","href","res","nextidx","slice","_map","functor","_curry1","_arity","_curryN","b","XMap","_reduce","acc","keys","p","after","fns","args","context","pred","filterable","filter","Segue","className","type","cssClasses","classnames","PerfNote","notes","Tooltip","title","trigger","aria-label","role","TeasesNote","text","map","song_name","findById","id","find","propEq","SetlistEntry","performanceData","songData","segues","teases","displayName","segueData","teasesArray","url","song_id","highlight","endsWith","to","variation","isDebut","Setlist","props","setlist","performances","songs","isEncore","which","showId","allSets","allShows","showIdInt","Number","groupedBySuite","groupWith","suite","perfId","showsForThoseSets","perfData","set","setData","show","soundcheck","set1","set2","set3","encore1","encore2","earlierShows","partition","showData","songOrSuite","lastSong"],"mappings":"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","file":"9ab79bf890f074d6f569416dc948f330044f1710-6a357e85549d499a371e.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XFind = /*#__PURE__*/function () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes = /*#__PURE__*/_curry2(_includes);\n\nexport default includes;","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where = /*#__PURE__*/_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","export function normalizeSetlist(rawSetlistValue) {\n  return typeof rawSetlistValue === \"number\"\n    ? [rawSetlistValue]\n    : typeof rawSetlistValue === \"string\"\n      ? rawSetlistValue.split(':')\n      : []\n}\n","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith = /*#__PURE__*/_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XMap = /*#__PURE__*/function () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\n\nexport default reduce;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge = /*#__PURE__*/_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt = /*#__PURE__*/_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition = /*#__PURE__*/juxt([filter, reject]);\nexport default partition;","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({className = '', type}) {\n  const cssClasses = classnames(className, 'segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\nimport {filter, find, groupWith, partition, propEq} from 'ramda'\nimport classnames from 'classnames'\nimport {Tooltip} from 'react-tippy'\n\nimport Segue from './segue'\n//import BustOutBadge from './bust_out_badge'\n//import TimePlayedBadge from './time_played_badge'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\nimport Link from './link-with-previous-url'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findById = (id) => find(propEq('id', id))\nconst filterBySongId = (id) => filter(propEq('song_id', id))\n\nfunction SetlistEntry({performanceData, songData, segues, teases, previousUrl}) {\n  const displayName = songData.title\n  const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n  const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n  const url = `/song/${performanceData.song_id}`\n  return <li className={classnames('setlist__track', {highlight: previousUrl?.endsWith(url)})}>\n    <Link to={url}>\n      {displayName}\n    </Link>\n    {' '}\n    {performanceData.variation || false}\n    {segueData && <Segue {...segueData} />}\n    {performanceData.isDebut && <Tooltip title=\"first time played\" trigger=\"mouseenter focus click\">\n      <span className=\"setlist__track__badge setlist__track__badge--ftp\" aria-label=\"notes\" role=\"img\">🆕\n        <span className=\"hidden\">first time played</span>\n      </span>\n    </Tooltip>}\n    {/*<BustOutBadge showgap={Number(performanceData.showgap)} />*/}\n    {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n    {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n  </li>\n}\n\nexport default function Setlist(props) {\n  const {\n    setlist,\n    performances,\n    segues,\n    songs,\n    teases,\n    isEncore,\n    which,\n    showId,\n    allSets = [],\n    allShows = [],\n    previousUrl\n  } = props\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const showIdInt = Number(showId)\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    setlist.map((perfId) => {\n      const performanceData = findById(perfId)(performances)\n      const songData = findById(performanceData.song_id)(songs)\n      const allPerfsOfThisSong = filterBySongId(songData.id)(performances)\n      const setsForAllPerfsOfThisSong = allPerfsOfThisSong.map(perfData => allSets.find(set => set.setlist.split(':').includes(perfData.id)))\n      const showsForThoseSets = setsForAllPerfsOfThisSong.map(setData => allShows.find(show => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id)))\n      const [earlierShows] = partition(showData => Number(showData?.id) < showIdInt, showsForThoseSets)\n      if (allShows.length && !earlierShows.length)\n        performanceData.isDebut = true\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <div className={`setlist__set setlist__set-${isEncore ? 'encore' : which}`}>\n    <h3 className=\"setlist__setlabel\">\n      {which === 'soundcheck'\n        ? 'Soundcheck'\n        : isEncore\n          ? `Encore ${which > 1 ? which : ''}`\n          : `Set ${which}`\n      }\n    </h3>\n    <ol className=\"setlist__tracks\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          const lastSong = songOrSuite[songOrSuite.length - 1]\n          return <li key={songOrSuite[0].performanceData.id} className=\"suite\">\n            {songOrSuite[0].suite} suite\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                return <SetlistEntry\n                  key={performanceData.id}\n                  performanceData={performanceData}\n                  songData={songData}\n                  segues={segues}\n                  teases={teases}\n                  previousUrl={previousUrl}\n                />\n              })}\n            </ul>\n            {lastSong && lastSong.performanceData &&\n              <Segue {...find(propEq('from_perf_id', lastSong.performanceData.id))(segues)} className=\"suite__segue\" />}\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        return <SetlistEntry\n          key={performanceData.id}\n          performanceData={performanceData}\n          songData={songData}\n          segues={segues}\n          teases={teases}\n          previousUrl={previousUrl}\n        />\n      })}\n    </ol>\n  </div>\n}\n"],"sourceRoot":""}