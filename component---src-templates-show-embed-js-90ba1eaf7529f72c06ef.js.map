{"version":3,"file":"component---src-templates-show-embed-js-90ba1eaf7529f72c06ef.js","mappings":"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","sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./src/components/helpers/setlist-helper.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./src/components/segue.js","webpack://almost-dead-net/./src/components/perf_note.js","webpack://almost-dead-net/./src/components/teases_note.js","webpack://almost-dead-net/./src/components/setlist.js","webpack://almost-dead-net/./src/templates/show-embed.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  function classNames() {\n    var classes = '';\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (arg) {\n        classes = appendClass(classes, parseValue(arg));\n      }\n    }\n    return classes;\n  }\n  function parseValue(arg) {\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      return arg;\n    }\n    if (typeof arg !== 'object') {\n      return '';\n    }\n    if (Array.isArray(arg)) {\n      return classNames.apply(null, arg);\n    }\n    if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n      return arg.toString();\n    }\n    var classes = '';\n    for (var key in arg) {\n      if (hasOwn.call(arg, key) && arg[key]) {\n        classes = appendClass(classes, key);\n      }\n    }\n    return classes;\n  }\n  function appendClass(value, newClass) {\n    if (!newClass) {\n      return value;\n    }\n    if (value) {\n      return value + ' ' + newClass;\n    }\n    return value + newClass;\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","export function normalizeSetlist(rawSetlistValue) {\n  return typeof rawSetlistValue === \"number\"\n    ? [rawSetlistValue]\n    : typeof rawSetlistValue === \"string\"\n      ? rawSetlistValue.split(':')\n      : []\n}\n","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({className = '', type}) {\n  const cssClasses = classnames(className, 'segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\nimport {filter, find, groupWith, partition, propEq} from 'ramda'\nimport classnames from 'classnames'\nimport {Tooltip} from 'react-tippy'\n\nimport Segue from './segue'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\nimport Link from './link-with-previous-url'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findById = (id) => find(propEq('id', id))\nconst filterBySongId = (id) => filter(propEq('song_id', id))\n\nfunction SetlistEntry({inSuite, performanceData, songData, segues, teases, previousUrl}) {\n  const displayName = songData.title\n  const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n  const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n  const url = `/song/${performanceData.song_id}`\n  const classes = classnames('setlist__track', {\n    highlight: previousUrl?.endsWith(url),\n    [`stars-${performanceData.stars}`]: !!performanceData.stars,\n  })\n  return <li className={classes}>\n    <Link to={url}>\n      {!inSuite && songData.suite && `(${songData.suite} suite) ` || ''}\n      {displayName}\n    </Link>\n    {' '}\n    {performanceData.variation || false}\n    {segueData && <Segue {...segueData} />}\n    {performanceData.isDebut && <Tooltip title=\"first time played\" trigger=\"mouseenter focus click\">\n      <span className=\"setlist__track__badge setlist__track__badge--ftp\" aria-label=\"notes\" role=\"img\">🆕\n        <span className=\"hidden\">first time played</span>\n      </span>\n    </Tooltip>}\n    {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n    {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n  </li>\n}\n\nexport default function Setlist(props) {\n  const {\n    allSets = [],\n    allShows = [],\n    isEncore,\n    performances,\n    previousUrl,\n    segues,\n    setlist,\n    showId,\n    songs,\n    teases,\n    which,\n  } = props\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const showIdInt = Number(showId)\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    setlist.map((perfId) => {\n      const performanceData = findById(perfId)(performances)\n      const songData = findById(performanceData.song_id)(songs)\n      const allPerfsOfThisSong = filterBySongId(songData.id)(performances)\n      const setsForAllPerfsOfThisSong = allPerfsOfThisSong.map(perfData => allSets.find(set => set.setlist.split(':').includes(perfData.id)))\n      const showsForThoseSets = setsForAllPerfsOfThisSong.map(setData => allShows.find(show => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData?.id)))\n      const [earlierShows] = partition(showData => Number(showData?.id) < showIdInt, showsForThoseSets)\n      if (allShows.length && !earlierShows.length)\n        performanceData.isDebut = true\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <div className={`setlist__set setlist__set-${isEncore ? 'encore' : which}`}>\n    <h3 className=\"setlist__setlabel\">\n      {which === 'soundcheck'\n        ? 'Soundcheck'\n        : isEncore\n          ? `Encore ${which > 1 ? which : ''}`\n          : `Set ${which}`\n      }\n    </h3>\n    <ol className=\"setlist__tracks\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          const firstSong = songOrSuite[0]\n          const suiteName = firstSong.suite\n          const lastSong = songOrSuite[songOrSuite.length - 1]\n          const mostStarsInConstituentSongs = Math.max(...songOrSuite.map(song => Number(song.performanceData.stars)))\n          return <li key={firstSong.performanceData.id} className={`setlist__suite ${mostStarsInConstituentSongs ? `stars-${mostStarsInConstituentSongs}` : ''}`}>\n            {suiteName} suite\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                return <SetlistEntry\n                  key={performanceData.id}\n                  inSuite={true}\n                  performanceData={performanceData}\n                  songData={songData}\n                  segues={segues}\n                  teases={teases}\n                  previousUrl={previousUrl}\n                />\n              })}\n            </ul>\n            {lastSong?.performanceData &&\n              <Segue {...find(propEq('from_perf_id', lastSong.performanceData.id))(segues)} className=\"setlist__suite__segue\" />\n            }\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        return <SetlistEntry\n          key={performanceData.id}\n          inSuite={false}\n          performanceData={performanceData}\n          songData={songData}\n          segues={segues}\n          teases={teases}\n          previousUrl={previousUrl}\n        />\n      })}\n    </ol>\n  </div>\n}\n","import React from 'react'\nimport {filter, find, includes, propEq, where} from 'ramda'\nimport {graphql} from 'gatsby'\nimport {Helmet} from 'react-helmet'\n\nimport SEO from \"../components/seo\"\nimport Setlist from '../components/setlist'\n\nimport {normalizeSetlist} from '../components/helpers/setlist-helper'\n\nimport './show-embed.css'\n\nfunction Guests({guests}) {\n  if (guests.length) {\n    return <p>With {guests.map((guest) => guest.name).join(', ')}</p>\n  }\n  return false\n}\n\nfunction Set({show, which, isEncore = false, sets, performances, segues, teases, songs}) {\n  const what = which === 'soundcheck'\n    ? 'soundcheck'\n    : `${isEncore ? 'encore' : 'set'}${which}`\n  const setId = show[what]\n  if (!setId || !sets || !sets.length) {\n    return false\n  }\n  const setData = find(propEq('id', setId))(sets)\n  const setlist = normalizeSetlist(setData.setlist)\n  return <Setlist\n    isEncore={isEncore}\n    which={which}\n    key={setData.id}\n    setlist={setlist}\n    performances={performances}\n    segues={segues}\n    songs={songs}\n    teases={teases}\n  />\n}\n\nexport default function ShowEmbed({data: {\n  showsCsv: show,\n  venuesCsv: venue,\n  allSetsCsv: {nodes: sets},\n  allGuestsCsv: {nodes: guests},\n  allSongperformancesCsv: {nodes: performances},\n  allSeguesCsv: {nodes: segues},\n  allSongsCsv: {nodes: songs},\n  allTeasesCsv: {nodes: teases},\n}}) {\n  if (!show) {\n    console.error('Show page, missing show..............')\n    return false\n  }\n\n  const {date, event, notes} = show\n\n  const guestsWithSplitShows = guests.map((guestData) => {\n    if (!guestData) {\n      return null\n    }\n    if (!guestData.shows) {\n      return null\n    }\n    if (Number.isInteger(guestData.shows)) {\n      return {\n        ...guestData,\n        shows: [guestData.shows.toString()]\n      }\n    }\n    return {\n      ...guestData,\n      shows: guestData.shows.split(':')\n    }\n  }).filter((data) => !!data)\n  const showGuests = filter(where({shows: includes(show.id)}))(guestsWithSplitShows)\n\n  const setlist = [1, 2, 3].reduce((setlists, which) => setlists.concat(\n    <Set which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n  const encores = [1, 2].reduce((encores, which) => encores.concat(\n    <Set isEncore={true} which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n\n  const showName = `${event ? `${event}, ` : ``}${venue.name} (${venue.location})`\n\n  return <div className=\"showpage-embed\">\n    <SEO\n      title={`JRAD ${date} @ ${showName}`}\n      description={`Joe Russo's Almost Dead${showGuests.length ? ` with ${showGuests.map((guest) => guest.name).join(' and ')}` : ''} at ${showName} ${date} — setlist, teases, recordings`}\n    />\n    <Helmet>\n      <link rel=\"canonical\" href={`/show/${show.id}`} />\n    </Helmet>\n    <h1 className=\"showpage__pagetitle\">\n      <span className=\"showpage__pagetitle--date\">{date}</span>\n      {' '}\n      {event && <span className=\"showpage__pagetitle--event\">{event}</span>}\n      {' '}\n      {venue && <span className=\"showpage__pagetitle--venue\">{venue.name}, {venue.location}</span>}\n    </h1>\n    <section className=\"showpage__setlist\">\n      <Guests guests={showGuests} />\n      {show.soundcheck && <Set which=\"soundcheck\" show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />}\n      {setlist.length ? setlist : <p>Uh oh, no sets found.</p>}\n      {encores.length && encores}\n      {notes && <div className=\"showpage__notes\">{notes}</div>}\n    </section>\n  </div>\n}\n\nexport const query = graphql`\n  query($showId: String!, $venueId: String!) {\n    showsCsv(id: {eq: $showId}) {\n      id\n      date\n      encore1\n      encore2\n      event\n      notes\n      set1\n      set2\n      set3\n    }\n    venuesCsv(id: {eq: $venueId}) {\n      id\n      location\n      name\n    }\n    allSetsCsv { nodes {\n      id\n      setlist\n    }}\n    allGuestsCsv { nodes {\n      id\n      name\n      shows\n    } }\n    allSongperformancesCsv { nodes {\n      id\n      next_perfid\n      notes\n      prev_perfid\n      showgap\n      song_id\n      variation\n    } }\n    allSongsCsv { nodes {\n      id\n      author\n      core_gd\n      core_jrad\n      suite\n      title\n    } }\n    allSeguesCsv { nodes {\n      id\n      from_perf_id\n      type\n    } }\n    allTeasesCsv { nodes {\n      id\n      performance_id\n      song_name\n    } }\n  }\n`\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","appendClass","parseValue","Array","isArray","apply","toString","Object","prototype","includes","key","call","value","newClass","module","exports","default","normalizeSetlist","rawSetlistValue","split","_ref","children","state","rest","React","Location","_ref2","location","Link","assign","previousUrl","href","Segue","className","type","cssClasses","classnames","PerfNote","notes","Tooltip","title","trigger","role","TeasesNote","list","text","map","song_name","join","findById","id","find","propEq","filterBySongId","filter","SetlistEntry","inSuite","performanceData","songData","segues","teases","displayName","segueData","teasesArray","url","song_id","highlight","endsWith","stars","to","suite","variation","isDebut","Setlist","props","allSets","allShows","isEncore","performances","setlist","showId","songs","which","showIdInt","Number","groupedBySuite","groupWith","a","b","perfId","showsForThoseSets","perfData","set","setData","show","soundcheck","set1","set2","set3","encore1","encore2","earlierShows","partition","showData","songOrSuite","firstSong","suiteName","lastSong","mostStarsInConstituentSongs","Math","max","_toConsumableArray","song","Guests","guests","guest","name","Set","sets","setId","ShowEmbed","_ref3","data","showsCsv","venuesCsv","venue","allSetsCsv","nodes","allGuestsCsv","allSongperformancesCsv","allSeguesCsv","allSongsCsv","allTeasesCsv","console","error","date","event","guestsWithSplitShows","guestData","shows","isInteger","showGuests","where","reduce","setlists","concat","encores","showName","SEO","description","Helmet","rel"],"sourceRoot":""}