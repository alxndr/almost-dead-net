{"version":3,"sources":["release-stages.js","pages/error.js","data.js","fetch.helpers.js","fetch.js","routes.js","components/song_finder.js","components/shows_by_year.js","pages/home.js","components/segue.js","components/perf_note.js","components/teases_note.js","components/setlist.js","components/show_paginator.js","pages/show.js","pages/song.js","App.js","serviceWorker.js","index.js"],"names":["STAGES","releaseStage","document","location","hostname","determineRelease","process","GIT_SHA","length","console","log","Error","className","URL_BASE","GUESTS_URL","SEGUES_URL","SETS_URL","SHOWS_URL","SONG_PERFORMANCES_URL","SONGS_URL","TEASES_URL","VENUES_URL","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","urlToKeyCSV","url","split","slice","join","urlToKey","fetchWithCache","a","transformer","text","localStorage","urlPath","rawStoredPayload","getItem","fetch","data","ok","parseWithCache","callback","papaParseOptions","Papa","parse","dynamicTyping","header","complete","response","errors","parseIntoObjectWithCache","transform","reduce","transformed","elem","isValidEntry","id","_","key","objectString","JSON","rawText","transformedData","stringify","route","params","urlcat","anyPath","home","show","song","songWithName","REGEX_NON_ALNUMSPACE","REGEX_WORD_SEPARATING_PUNCTUATION","sanitizeString","string","toLowerCase","replace","trim","SongFinder","props","useState","songs","setSongs","value","setValue","suggestions","setSuggestions","redirect","setRedirect","useEffect","push","to","highlightFirstSuggestion","onSuggestionsClearRequested","onSuggestionsFetchRequested","searchString","searchRegex","RegExp","filter","title","author","test","getSuggestions","getSuggestionValue","songData","renderSuggestion","inputProps","onChange","newValue","placeholder","onSuggestionSelected","suggestion","routes","ShowEntry","children","date","event","venue","ShowsByYear","rawShows","rawVenues","showsByYear","Object","values","acc","m","d","y","venue_id","entries","reverse","map","year","showsInYear","monthAndDay","Home","shows","setShows","venues","setVenues","rowData","Segue","cssClasses","classnames","PerfNote","notes","trigger","aria-label","role","TeasesNote","list","teases","song_name","SetlistEntry","performanceData","segues","displayName","segueData","find","propEq","teasesArray","song_id","variation","Setlist","performances","setPerformances","setSegues","setTeases","groupedBySuite","groupWith","b","suite","setlist","perfId","Number","isEncore","which","songOrSuite","ShowPaginator","prev","next","normalizeSetlist","rawSetlistValue","Show","match","sets","setSets","guests","setGuests","inputId","showData","nextShow","prevShow","venueData","findVenue","guestsWithSplitShows","guestData","isInteger","bind","showGuests","where","includes","setlists","setData","concat","encores","guest","flatMap","word","startsWith","href","rel","target","dompurify","sanitize","SET_MAPPING","set1","set2","set3","encore1","encore2","Song","showsObject","setsObject","songsObject","performancesObject","teasesObject","songNameSlug","songId","performancesData","performancesComponent","performanceIdStr","toString","set","warn","whichSet","col_name","sort","perfA","perfB","dateA","Date","dateB","teasesData","teasesComponent","teaseData","performance_id","within","authorInfo","App","src","alt","path","exact","component","Boolean","LogRocket","init","Sentry","dsn","environment","release","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2fb896c6.chunk.js","sourcesContent":["export const STAGES = {\n  CANARY: 'canary',\n  DEV: 'dev',\n  PROD: 'prod',\n  UNKNOWN: 'unknown',\n}\n\nexport function releaseStage() {\n  if (!document || !document.location || !document.location.hostname)\n    return STAGES.UNKNOWN\n  switch (document.location.hostname) {\n    case 'almost-dead.net':\n      return STAGES.PROD\n    case 'alxndr.github.io':\n      return STAGES.CANARY\n    case 'localhost':\n      return STAGES.DEV\n    default:\n      return STAGES.UNKNOWN\n  }\n}\n\nexport function determineRelease() {\n  if (process.env.GIT_SHA && process.env.GIT_SHA.length) {\n    // TODO this doesn't work when served from gh-pages...\n    return process.env.GIT_SHA\n  }\n  if (process.env.NODE_ENV === 'development') {\n    return 'develop'\n  }\n  return 'unknown'\n}\nconsole.log('release...', determineRelease())\n\n","import React from 'react'\n\nimport './error.css'\n\nexport default function Error() {\n  return <section className=\"errorpage\">\n    <h1>Uh oh! Error</h1>\n  </section>\n}\n","const URL_BASE = 'https://gist.githubusercontent.com/alxndr/5f64cf477d5202c004856772ad2222db/raw/e31840406e96bcaa900a35feacf29c175d69a04b'\n\nconst GUESTS_URL = `${URL_BASE}/guests.csv`\nconst SEGUES_URL = `${URL_BASE}/segues.csv`\nconst SETS_URL = `${URL_BASE}/sets.csv`\nconst SHOWS_URL = `${URL_BASE}/shows.csv`\nconst SONG_PERFORMANCES_URL = `${URL_BASE}/songperformances.csv`\nconst SONGS_URL = `${URL_BASE}/songs.csv`\nconst TEASES_URL = `${URL_BASE}/teases.csv`\nconst VENUES_URL = `${URL_BASE}/venues.csv`\n\nexport {\n  GUESTS_URL,\n  SEGUES_URL,\n  SETS_URL,\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n  VENUES_URL,\n}\n","/* eslint-disable semi */\n\n/**\n * Determine whether localStorage is available and behaves to spec.\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n *\n * @returns {boolean} whether or not the current environment correctly implements localStorage\n */\nexport function storageAvailable(type) {\n  var storage;\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  }\n  catch(e) {\n    return e instanceof DOMException && (\n      // everything except Firefox\n      e.code === 22 ||\n      // Firefox\n      e.code === 1014 ||\n      // test name field too, because code might not be present\n      // everything except Firefox\n      e.name === 'QuotaExceededError' ||\n      // Firefox\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      (storage && storage.length !== 0);\n  }\n}\n\nexport function urlToKeyCSV(url) {\n  // assumes the URL is a raw Gist URL\n  return url.split('/').slice(-2).join('/')\n}\n\nexport function urlToKey(url) {\n  // assumes the URL is a raw Gist URL\n  return url.split('/').slice(-2).join('/').split('.')[0]\n}\n\n","import Papa from 'papaparse'\nimport {\n  storageAvailable,\n  urlToKey,\n  urlToKeyCSV,\n} from './fetch.helpers'\n\nexport function getCsv(csvUrl, callback, papaParseOptions = {}) {\n  throw new Error('getCsv has been deprecated... check out the new hotness: fetchWithCache')\n}\n\n/**\n * Retrieve data for the given URL, either from localStorage (if available) or the network.\n * TODO:\n * - store & check age of data in localStorage\n * - versioning the data??\n */\nexport async function fetchWithCache(url, transformer = (text) => text) {\n  if (!localStorage) {\n    // TODO handle if no localStorage\n    throw new Error(\"Ruh roh, no localStorage\")\n  }\n  if (!storageAvailable('localStorage')) {\n    throw new Error(\"Ruh roh, localStorage doesn't look healthy...\") // ...or return Promise.reject(new Error()) ?\n  }\n  const urlPath = urlToKeyCSV(url)\n  const rawStoredPayload = localStorage.getItem(urlPath)\n  if (rawStoredPayload) {\n    return rawStoredPayload\n  }\n  const data = await fetch(url)\n  if (!data.ok) {\n    throw new Error('Uh oh, could not fetch...', {url, data}) // ...or return Promise.reject(new Error()) ?\n  }\n  const text = await data.text()\n  localStorage.setItem(urlPath, transformer(text))\n  return text\n}\n\nexport async function parseWithCache(url, callback, papaParseOptions) {\n  const data = await fetchWithCache(url)\n  return Papa.parse(data, {\n    dynamicTyping: true, // TODO remove this... gonna do some conversions ourselves though\n    header: true,\n    complete: (response) => {\n      if (!response)\n        throw new Error('getCsvWithCache: No response when fetching', {url})\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('getCsvWithCache: Error fetching', {url, response})\n      return callback(data)\n    },\n    ...papaParseOptions,\n  })\n}\n\nexport async function parseIntoObjectWithCache(url, callback, papaParseOptions = {}, isValidEntry = (_) => true) {\n  if (!localStorage) {\n    // TODO handle if no localStorage\n    throw new Error(\"Ruh roh, no localStorage\")\n  }\n  if (!storageAvailable('localStorage')) {\n    throw new Error(\"Ruh roh, localStorage doesn't look healthy...\") // ...or return Promise.reject(new Error()) ?\n  }\n  const key = `${urlToKey(url)}.obj.str`\n  const objectString = localStorage.getItem(key)\n  if (objectString) {\n    return callback(JSON.parse(objectString)) // TODO handle if this throws\n  }\n  const data = await fetch(url)\n  if (!data.ok) {\n    throw new Error('Uh oh, could not fetch...', {url, data}) // ...or return Promise.reject(new Error()) ?\n  }\n  const rawText = await data.text()\n  /* Return an object containing the data within the CSV rows, using each row's `id` value as the key\n   * within the object. This is ideal for accessing values when the ID is known.\n   */\n  function transform(data) {\n    return data.reduce((transformed, elem) => {\n      if (isValidEntry(elem)) {\n        transformed[elem.id] = elem\n      }\n      return transformed\n    }, {})\n  }\n  return Papa.parse(rawText, {\n    dynamicTyping: true, // TODO remove this... gonna do some conversions ourselves though\n    header: true,\n    complete: (response) => {\n      if (!response)\n        throw new Error('parseIntoObjectWithCache: No response when fetching', {url})\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('parseIntoObjectWithCache: Error fetching', {url, response})\n      const transformedData = transform(data)\n      localStorage.setItem(key, JSON.stringify(transformedData))\n      return callback(transformedData)\n    },\n    ...papaParseOptions,\n  })\n}\n","import urlcat from 'urlcat'\n\nconst anyPath = `/:path`\nconst home = `/`\nconst show = `/show/:id`\nconst song = `/song/:id`\nconst songWithName = `/song/:id/:name`\n\nexport function url(route, params) {\n  return urlcat('', route, params)\n}\n\nexport default {\n  anyPath,\n  home,\n  show,\n  song,\n  songWithName,\n}\n","import React, {useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport Autosuggest from 'react-autosuggest'\n\nimport {\n  SONGS_URL,\n} from '../data'\nimport {parseWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport './song_finder.css'\n\nconst REGEX_NON_ALNUMSPACE = /[^a-z0-9 ]+/g\nconst REGEX_WORD_SEPARATING_PUNCTUATION = /[-—/–+,()[\\]{}…]+/g\nfunction sanitizeString(string) {\n  return string\n    .toLowerCase()\n    .replace(REGEX_WORD_SEPARATING_PUNCTUATION, ' ')\n    .replace(REGEX_NON_ALNUMSPACE, '')\n    .trim()\n}\n\nexport default function SongFinder(props) {\n  const [songs, setSongs] = useState(null)\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState([])\n  const [redirect, setRedirect] = useState(null)\n  useEffect(() => {\n    parseWithCache(SONGS_URL, setSongs)\n  }, [])\n  if (redirect) {\n    return <Redirect push to={redirect} />\n  }\n  if (!songs || !songs.length) {\n    return <p>Loading...</p>\n  }\n  const getSuggestions = (string) => {\n    if (!string) {\n      return []\n    }\n    const searchString = sanitizeString(string)\n    if (!searchString || searchString.length < 2) {\n      return []\n    }\n    const searchRegex = new RegExp(`\\\\b${searchString}`)\n    return songs.filter(({title = '', author = ''}) => {\n      if (title && searchRegex.test(sanitizeString(title))) {\n        return true\n      }\n      if (author && searchRegex.test(sanitizeString(author))) {\n        return true\n      }\n      return false\n    })\n  }\n  const renderSuggestion = (songData) => {\n    const author = songData.author\n      ? <span className=\"songfinder__suggestion--author\">{songData.author}</span>\n      : false\n    return <span className=\"songfinder__suggestion\">\n      {songData.title}\n      {author}\n    </span>\n  }\n  return <div className=\"songfinder\">\n    <Autosuggest\n      suggestions={suggestions}\n      highlightFirstSuggestion={true}\n      onSuggestionsClearRequested={() => setSuggestions([])}\n      onSuggestionsFetchRequested={({value}) => {\n        setValue(value)\n        setSuggestions(getSuggestions(value))\n      }}\n      getSuggestionValue={(songData) => songData.title}\n      renderSuggestion={renderSuggestion}\n      inputProps={{\n        onChange: (_, {newValue}) => setValue(newValue),\n        placeholder: 'type a song name',\n        value,\n      }}\n      onSuggestionSelected={(_, {suggestion}) => {\n        setRedirect(url(routes.song, {id: suggestion.id}))\n      }}\n    />\n  </div>\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport './shows_by_year.css'\n\nfunction ShowEntry({children, show}) {\n  const {date, event, id, venue} = show\n  const title = `#${id}: ${date}${event ? ` ${event}` : ''} @ ${venue.name} (${venue.location})`\n  return <Link to={routes.show.replace(':id', id)} title={title}>{children || date}</Link>\n}\n\nexport default function ShowsByYear({rawShows, rawVenues}) {\n  const showsByYear = Object.values(rawShows).reduce((acc, show) => {\n    const [m, d, y] = show.date.split('/') // e.g. === ['1', '26', '2013']\n    if (!acc[y]) acc[y] = {}\n    const venue = rawVenues[show.venue_id]\n    acc[y][`${m}/${d}`] = {\n      ...show,\n      venue\n    }\n    return acc\n  }, {})\n  return <ul className=\"showslist__years\">\n    {Object.entries(showsByYear).reverse().map(([year, showsInYear]) => {\n      return <li className={`showslist__years--${year}`} key={year}>\n        <h3>{year}</h3>\n        <ul className=\"showslist__years__shows\">\n          {Object.entries(showsInYear).map(([monthAndDay, show]) => {\n            return <li className={`showslist__years__shows__${monthAndDay}`} key={monthAndDay}>\n              <ShowEntry key={show.id} show={show}>{monthAndDay}</ShowEntry>\n            </li>\n          })}\n        </ul>\n      </li>\n    })}\n  </ul>\n}\n","import React, {useState, useEffect} from 'react'\n\nimport SongFinder from '../components/song_finder'\nimport ShowsByYear from '../components/shows_by_year'\n\nimport {\n  SHOWS_URL,\n  VENUES_URL,\n} from '../data'\nimport {parseIntoObjectWithCache} from '../fetch'\n\nimport './home.css'\n\nexport default function Home(props) {\n  const [shows, setShows] = useState(null)\n  const [venues, setVenues] = useState(null)\n  useEffect(() => {\n    parseIntoObjectWithCache(SHOWS_URL, setShows, null, (rowData) => !!rowData.date)\n    parseIntoObjectWithCache(VENUES_URL, setVenues, null, (rowData) => !!rowData.name && !!rowData.location)\n  }, [])\n  if (!shows || !venues) {\n    return <p>Loading...</p>\n  }\n  return <section className=\"homepage\">\n    <h1>JRAD Setlists</h1>\n    <p>Find a song:</p>\n    <SongFinder />\n    <hr />\n    <p>Pick a date to view the setlist and/or notes:</p>\n    <ShowsByYear rawShows={shows} rawVenues={venues} />\n    <hr />\n    <p>Coming eventually...</p>\n    <ul>\n      <li>easier navigation??</li>\n      <li>more teases!</li>\n      <li>more links to Archive.org & Youtube</li>\n      <li>fun stats</li>\n    </ul>\n  </section>\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({type}) {\n  const cssClasses = classnames('segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {filter, find, groupWith, propEq} from 'ramda'\n\nimport {\n  SEGUES_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n} from '../data'\nimport {parseWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport Segue from './segue'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findByIntegerId = (id) => find(propEq('id', Number(id)))\n\nfunction SetlistEntry({performanceData, songData, segues, teases}) {\n  const displayName = /*songData.nicknames ? songData.nicknames.split(';', 1) :*/ songData.title\n  const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n  const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n  return <li>\n    <Link to={url(routes.song, {id: performanceData.song_id})}>\n      {displayName}\n    </Link>\n    {' '}\n    {performanceData.variation || false}\n    {segueData && <Segue {...segueData} />}\n    {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n    {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n  </li>\n}\n\nexport default function Setlist(props) {\n  const [performances, setPerformances] = useState(null)\n  const [segues, setSegues] = useState(null)\n  const [songs, setSongs] = useState(null)\n  const [teases, setTeases] = useState(null)\n  useEffect(() => {\n    parseWithCache(SONG_PERFORMANCES_URL, setPerformances)\n    parseWithCache(SEGUES_URL, setSegues)\n    parseWithCache(SONGS_URL, setSongs)\n    parseWithCache(TEASES_URL, setTeases)\n  }, [])\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    props.setlist.map((perfId) => {\n      const performanceData = findByIntegerId(perfId)(performances)\n      const songData = find(propEq('id', performanceData.song_id))(songs)\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <>\n    <p className=\"setlist__label\">\n      {props.isEncore\n        ? `Encore ${props.which > 1 ? props.which : ''}`\n        : `Set ${props.which}`\n      }\n    </p>\n    <ol className=\"setlist\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          return <li key={songOrSuite[0].performanceData.id} className=\"suite\">\n            {songOrSuite[0].suite} suite:\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                return <SetlistEntry\n                  key={performanceData.id}\n                  performanceData={performanceData}\n                  songData={songData}\n                  segues={segues}\n                  teases={teases}\n                />\n              })}\n            </ul>\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        return <SetlistEntry key={performanceData.id} performanceData={performanceData} songData={songData} segues={segues} teases={teases} />\n      })}\n    </ol>\n  </>\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport routes, {url} from '../routes'\n\nimport './show_paginator.css'\n\nexport default function ShowPaginator({prev, next}) {\n  return <ul className=\"showpaginator\">\n    {prev && prev.date && <li className=\"showpaginator__prev\">\n      <Link to={url(routes.show, {id: prev.id})}>\n        Previous show: {prev.date}\n      </Link>\n    </li>}\n    {next && next.date && <li className=\"showpaginator__next\">\n      <Link to={url(routes.show, {id: next.id})}>\n        Next show: {next.date}\n      </Link>\n    </li>}\n  </ul>\n}\n","import React, {useEffect, useState} from 'react'\nimport {filter, find, includes, propEq, where} from 'ramda'\nimport dompurify from 'dompurify'\n\nimport {\n  GUESTS_URL,\n  SETS_URL,\n  SHOWS_URL,\n  VENUES_URL\n} from '../data'\nimport {parseWithCache} from '../fetch'\n\nimport Setlist from '../components/setlist'\nimport ShowPaginator from '../components/show_paginator'\n\nimport './show.css'\n\nfunction linkShowNotes(text) {\n  return <>{text.split(/\\s/g).flatMap(word => word.startsWith('https://')\n    ? [<a href={word} rel=\"noopener noreferrer\" target=\"_blank\">{dompurify.sanitize(word)}</a>, ' ']\n    : [dompurify.sanitize(word), ' '])\n    }\n  </>\n}\n\nfunction normalizeSetlist(rawSetlistValue) {\n  return typeof rawSetlistValue === \"number\"\n    ? [rawSetlistValue]\n    : typeof rawSetlistValue === \"string\"\n      ? rawSetlistValue.split(':')\n      : []\n}\n\nexport default function Show({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [venues, setVenues] = useState(null)\n  const [guests, setGuests] = useState(null)\n  useEffect(() => {\n    parseWithCache(SHOWS_URL, setShows)\n    parseWithCache(SETS_URL, setSets)\n    parseWithCache(VENUES_URL, setVenues)\n    parseWithCache(GUESTS_URL, setGuests)\n  }, [])\n  if (!shows || !venues || !sets || !guests) {\n    return <p>Loading...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!venues.length) {\n    return <p>Uh oh, no venues found...</p>\n  }\n  if (!sets.length) {\n    return <p>No sets yet.</p>\n  }\n  if (!guests.length) {\n    return <p>Uh oh, no guests found...</p>\n  }\n  const inputId = Number(params.id)\n  const showData = find(propEq('id', inputId))(shows)\n  if (!showData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const nextShow = find(propEq('id', inputId + 1))(shows)\n  const prevShow = find(propEq('id', inputId - 1))(shows)\n  const {date, event, notes, venue_id} = showData\n  const findVenue = find(propEq('id', Number(venue_id)))\n  const venueData = findVenue(venues)\n  if (!venueData) {\n    return <p>Uh oh, no venue data found...</p>\n  }\n  const {name, location} = venueData\n\n  const guestsWithSplitShows = guests.map((guestData) => {\n    if (!guestData) {\n      return null\n    }\n    if (!guestData.shows) {\n      return null\n    }\n    if (Number.isInteger(guestData.shows)) {\n      return {\n        ...guestData,\n        shows: [guestData.shows]\n      }\n    }\n    return {\n      ...guestData,\n      shows: guestData.shows.split(':').map(Number.bind(null))\n    }\n  }).filter((data) => !!data)\n  const showGuests = filter(where({shows: includes(inputId)}))(guestsWithSplitShows)\n\n  const setlists = [1, 2, 3].reduce((setlists, which) => {\n    if (!showData[`set${which}`]) {\n      return setlists\n    }\n    const setData = find(propEq('id', Number(showData[`set${which}`])))(sets)\n    const setlist = normalizeSetlist(setData.setlist)\n    return setlists.concat([<Setlist isEncore={false} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  const encores = [1, 2].reduce((encores, which) => {\n    if (!showData[`encore${which}`]) {\n      return encores\n    }\n    const setData = find(propEq('id', Number(showData[`encore${which}`])))(sets)\n    const setlist = normalizeSetlist(setData.setlist)\n    return encores.concat([<Setlist isEncore={true} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  return <div className=\"showpage\">\n    <section>\n      <h1 className=\"showpage__pagetitle\">\n        <span className=\"showpage__pagetitle--band\">Joe Russo's Almost Dead</span>\n        <span className=\"showpage__pagetitle--date\">{date}</span>\n        <span className=\"showpage__pagetitle--event\">{event || false}</span>\n        <span className=\"showpage__pagetitle--venue\">{name}, {location}</span>\n        <span className=\"showpage__pagetitle--number\">show #{showData.id}</span>\n      </h1>\n      {showGuests.length\n        ? <p>With {showGuests.map((guest) => guest.name).join(', ')}</p>\n        : false\n      }\n      {setlists.length\n        ? setlists\n        : <p>Uh oh, no sets found.</p>\n      }\n      {encores.length\n        ? encores\n        : false\n      }\n      {notes && <div className=\"showpage__notes\">{linkShowNotes(notes)}</div>}\n    </section>\n    <ShowPaginator prev={prevShow} next={nextShow} />\n  </div>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link, Redirect, Route, Switch } from 'react-router-dom'\nimport {filter, find, propEq} from 'ramda'\n\nimport {\n  SHOWS_URL,\n  SETS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n} from '../data'\nimport {parseIntoObjectWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport './song.css'\n\nfunction authorInfo(author = null) {\n  switch (author) {\n    case null:\n      return false\n    case 'traditional':\n      return <p>(traditional)</p>\n    default:\n      return <p>by {author}</p>\n  }\n}\n\nconst SET_MAPPING = { // 'show table column name' to 'human readable set name'\n  set1: 'set 1',\n  set2: 'set 2',\n  set3: 'set 3',\n  encore1: 'encore',\n  encore2: 'double encore',\n}\n\nexport default function Song({match: {params}}) {\n  const [showsObject, setShows] = useState(null)\n  const [setsObject, setSets] = useState(null)\n  const [songsObject, setSongs] = useState(null)\n  const [performancesObject, setPerformances] = useState(null)\n  const [teasesObject, setTeases] = useState(null)\n  useEffect(() => {\n    parseIntoObjectWithCache(SHOWS_URL, setShows)\n    parseIntoObjectWithCache(SETS_URL, setSets)\n    parseIntoObjectWithCache(SONGS_URL, setSongs)\n    parseIntoObjectWithCache(SONG_PERFORMANCES_URL, setPerformances, null, (rowData) => !!rowData.song_id)\n    parseIntoObjectWithCache(TEASES_URL, setTeases)\n  }, [])\n\n  if (!(songsObject && performancesObject && showsObject && teasesObject && setsObject)) {\n    return <p>Loading...</p>\n  }\n\n  const songData = songsObject[params.id]\n  if (!songData) {\n    return <p>Uh oh, no song data found...</p>\n  }\n  const songNameSlug = songData.title.toLowerCase().replace(/[\"'()]+/g, '').replace(/[^a-z0-9]+/g, '-')\n  if (!params.name || params.name !== songNameSlug) {\n    return <Redirect to={`/song/${songData.id}/${songNameSlug}`} />\n  }\n  const songId = Number(songData.id)\n\n  const performancesData = filter(propEq('song_id', songId))(Object.values(performancesObject))\n  const performancesComponent = performancesData.length > 0\n    ?  <>\n      <h2>Performances</h2>\n      <ul>\n        {performancesData\n          .map(performanceData => {\n            const performanceIdStr = performanceData.id.toString()\n            const setData = find((set) => {\n              return set.setlist && set.setlist.toString().split(':').includes(performanceIdStr)\n            })(Object.values(setsObject))\n            if (!setData || !setData.id) {\n              console.warn(`missing setData...`, {performanceData, setsObject})\n              return false\n            }\n            const showData = find((show) => [show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(Object.values(showsObject))\n            if (!showData || !showData.id) {\n              console.warn(`missing showData...`, {performanceData, setData})\n              return false\n            }\n            const whichSet = Object.entries(SET_MAPPING).find(([col_name, readable_name]) => showData[col_name] === setData.id)[1]\n            const variation = performanceData.variation\n              ? `(${performanceData.variation})`\n              : false\n            return {performanceData, showData, variation, whichSet}\n          })\n          .sort((perfA, perfB) => {\n            const dateA = new Date(perfA.showData.date.split('/'))\n            const dateB = new Date(perfB.showData.date.split('/'))\n            if (dateA > dateB) {\n              return -1\n            }\n            if (dateA < dateB) {\n              return 1\n            }\n            return 0\n          })\n          .map(({performanceData, showData, variation, whichSet}) => {\n            return <li key={performanceData.id}>\n              <Link to={url(routes.show, {id: showData.id})}>\n                {showData.date} {variation} in {whichSet}\n              </Link>\n            </li>\n          })\n        }\n      </ul>\n    </>\n    : false\n\n  const teasesData = filter(propEq('song_id', songId))(Object.values(teasesObject))\n  const teasesComponent = teasesData.length > 0\n    ? <>\n      <h2>Teases</h2>\n      <ul>\n        {teasesData.map(teaseData => {\n          const performanceData = performancesObject[teaseData.performance_id] //find(propEq('id', Number(teaseData.performance_id)))(performances)\n          const setData = find((set) => set.setlist.toString().split(':').includes(performanceData.id.toString()))(Object.values(setsObject))\n          const showData = find((show) => [show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(Object.values(showsObject))\n          return <li key={teaseData.id}>\n            within <Link to={url(routes.show, {id: showData.id})}>{teaseData.within} — {showData.date}</Link>\n          </li>\n        })}\n      </ul>\n    </>\n    : false\n\n  return <section className=\"songpage\">\n    <h1 className=\"songpage__name\">{songData.title}</h1>\n    <div className=\"songpage__info\">\n      {authorInfo(songData.author)}\n      {songData.suite && <p>Part of the {songData.suite} suite</p>}\n    </div>\n    <div className=\"songpage__performances\">{performancesComponent}</div>\n    <div className=\"songpage__teases\">{teasesComponent}</div>\n  </section>\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport {releaseStage} from './release-stages'\nimport {Error, Home, Show, Song} from './pages'\nimport routes from './routes'\n\nimport './App.css'\n\nfunction App() {\n  return <>\n    <div className={`App ${releaseStage()}`}>\n      <a id=\"logo\" href=\"?#\" title=\"return to home page\"><img src=\"https://i.imgur.com/tvtgYVY.png\" alt=\"Good Ol' Almost Dead\" /></a>\n      <HashRouter>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.show} exact component={Show} />\n          <Route path={routes.songWithName} component={Song} />\n          <Route path={routes.song} exact   component={Song} />\n          <Route path={routes.anyPath} component={Error} />\n        </Switch>\n      </HashRouter>\n    </div>\n    <footer id=\"site-footer\">\n      Corrections? Contributions?\n      <br />\n      Contact: <a href=\"https://twitter.com/AlmostDeadNet\" target=\"_new\" rel=\"noopener noreferrer\">@AlmostDeadNet on Twitter</a>\n    </footer>\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\n// serviceWorker provides hot reloading...\nimport * as serviceWorker from './serviceWorker'\n\nimport {determineRelease, releaseStage} from './release-stages'\nimport * as Sentry from '@sentry/browser'\nimport LogRocket from 'logrocket'\n\nLogRocket.init('wi3hyr/a-dn')\n\nSentry.init({\n  dsn: 'https://174349d7133f4877ba279f589bf54642@o412799.ingest.sentry.io/5293476',\n  environment: releaseStage(),\n  release: determineRelease(),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}