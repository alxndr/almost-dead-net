{"version":3,"sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./src/components/helpers/setlist-helper.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./src/components/segue.js","webpack://almost-dead-net/./src/components/perf_note.js","webpack://almost-dead-net/./src/components/teases_note.js","webpack://almost-dead-net/./src/components/setlist.js","webpack://almost-dead-net/./src/templates/show-embed.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","normalizeSetlist","rawSetlistValue","split","children","state","rest","Location","location","previousUrl","href","Segue","className","type","cssClasses","classnames","PerfNote","notes","Tooltip","title","trigger","aria-label","role","TeasesNote","list","text","map","song_name","findById","id","find","propEq","SetlistEntry","inSuite","performanceData","songData","segues","teases","displayName","segueData","teasesArray","filter","url","song_id","highlight","endsWith","stars","to","suite","variation","isDebut","Setlist","props","allSets","allShows","isEncore","performances","setlist","showId","songs","which","showIdInt","Number","groupedBySuite","groupWith","a","b","perfId","showsForThoseSets","perfData","set","includes","setData","show","soundcheck","set1","set2","set3","encore1","encore2","earlierShows","partition","showData","songOrSuite","firstSong","suiteName","lastSong","mostStarsInConstituentSongs","Math","max","song","Guests","guests","guest","name","Set","sets","setId","ShowEmbed","data","showsCsv","venue","venuesCsv","allSetsCsv","nodes","allGuestsCsv","allSongperformancesCsv","allSeguesCsv","allSongsCsv","allTeasesCsv","console","error","date","event","guestsWithSplitShows","guestData","shows","isInteger","showGuests","where","reduce","setlists","concat","encores","showName","description","rel"],"mappings":";sGAAA,OAOA,WACE,aAEA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAID,OAAQ,CACd,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIG,KAAOV,EACVP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAC/Bd,EAAQM,KAAKQ,QAIjBd,EAAQM,KAAKF,EAAIO,aAKvB,OAAOX,EAAQgB,KAAK,KAGeC,EAAOC,SAC1CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL,I,kCCPO,SAASqB,EAAiBC,GAC/B,MAAkC,iBAApBA,EACV,CAACA,GAC0B,iBAApBA,EACLA,EAAgBC,MAAM,KACtB,G,sICSR,IAVwB,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,MAAUC,GAAtB,mBACtB,gBAAC,EAAAC,SAAD,MACG,gBAAEC,EAAF,EAAEA,SAAF,OACC,gBAAC,KAAD,iBAAUF,EAAV,CAAgBD,MAAK,eAAGI,YAAaD,EAASE,MAASL,KACpDD,Q,+HCCM,SAASO,EAAT,GAAwC,IAAD,IAAvBC,iBAAuB,MAAX,GAAW,EAAPC,EAAO,EAAPA,KACvCC,EAAaC,IAAWH,EAAW,QAAS,CAChD,aAAuB,MAATC,EACd,gBAA0B,OAATA,IAGnB,OAAO,wBAAMD,UAAWE,GAAaD,GCZxB,SAASG,EAAT,GAA4B,IAATC,EAAQ,EAARA,MAChC,OAAO,gBAAC,EAAAC,QAAD,CAASC,MAAOF,EAAOG,QAAQ,0BACpC,wBAAMR,UAAU,oBAAoBS,aAAW,QAAQC,KAAK,OAA5D,KACE,wBAAMV,UAAU,UAAUK,KCFjB,SAASM,EAAT,GAA6B,IAARC,EAAO,EAAPA,KAE5BC,EADSD,EAAKE,KAAI,qBAAEC,aAA0B9B,KAAK,MAC/C,UAAqB2B,EAAKxC,OAAS,EAAI,IAAM,IACvD,OAAO,gBAAC,EAAAkC,QAAD,CAASC,MAAOM,EAAML,QAAQ,0BACnC,wBAAMR,UAAU,sBAAsBS,aAAW,QAAQC,KAAK,OAA9D,KACE,wBAAMV,UAAU,UAAUa,K,cCI1BG,EAAW,SAACC,GAAD,OAAQC,UAAKC,SAAO,KAAMF,KAG3C,SAASG,EAAT,GAA0F,IAAD,EAAlEC,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,gBAAiBC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQ5B,EAAc,EAAdA,YACnE6B,EAAcH,EAAShB,MACvBoB,GAAYT,UAAKC,SAAO,eAAgBG,EAAgBL,IAA5CC,CAAiDM,GAC7DI,GAAcC,UAAOV,SAAO,iBAAkBG,EAAgBL,IAAhDY,CAAqDJ,GACnEK,EAAG,SAAYR,EAAgBS,QAC/B9D,EAAUkC,IAAW,mBAAD,GACxB6B,UAAWnC,aAAF,EAAEA,EAAaoC,SAASH,KADT,SAEdR,EAAgBY,SAAYZ,EAAgBY,MAF9B,IAI1B,OAAO,sBAAIlC,UAAW/B,GACpB,gBAAC,IAAD,CAAMkE,GAAIL,IACNT,GAAWE,EAASa,OAArB,IAAkCb,EAASa,MAA3C,YAA8D,GAC9DV,GAEF,IACAJ,EAAgBe,YAAa,EAC7BV,GAAa,gBAAC5B,EAAU4B,GACxBL,EAAgBgB,SAAW,gBAAC,EAAAhC,QAAD,CAASC,MAAM,oBAAoBC,QAAQ,0BACrE,wBAAMR,UAAU,mDAAmDS,aAAW,QAAQC,KAAK,OAA3F,KACE,wBAAMV,UAAU,UAAhB,uBAGHsB,EAAgBjB,OAAS,gBAACD,EAAD,CAAUC,MAAOiB,EAAgBjB,UAC1DuB,EAAYxD,QAAS,gBAACuC,EAAD,CAAYC,KAAMgB,KAI7B,SAASW,EAAQC,GAC9B,MAYIA,EAXFC,eADF,MACY,GADZ,IAYID,EAVFE,gBAFF,MAEa,GAFb,EAGEC,EASEH,EATFG,SACAC,EAQEJ,EARFI,aACA/C,EAOE2C,EAPF3C,YACA2B,EAMEgB,EANFhB,OACAqB,EAKEL,EALFK,QACAC,EAIEN,EAJFM,OACAC,EAGEP,EAHFO,MACAtB,EAEEe,EAFFf,OACAuB,EACER,EADFQ,MAEF,KAAMJ,GAAgBG,GAASvB,GAAUC,GACvC,OAAO,uCAET,IAAKmB,EAAaxE,OAChB,OAAO,oDAET,IAAK2E,EAAM3E,OACT,OAAO,qDAET,IAAKoD,EAAOpD,OACV,OAAO,sDAET,IAAKqD,EAAOrD,OACV,OAAO,sDAET,IAAM6E,EAAYC,OAAOJ,GACnBK,GAAiBC,UACrB,SAACC,EAAGC,GAAJ,OAAUD,EAAEjB,OAASiB,EAAEjB,QAAUkB,EAAElB,QACnCS,EAAQ/B,KAAI,SAACyC,GACX,IA9DkBtC,EA8DZK,EAAkBN,EAASuC,EAATvC,CAAiB4B,GACnCrB,EAAWP,EAASM,EAAgBS,QAAzBf,CAAkC+B,GAG7CS,GAlEYvC,EAgEwBM,EAASN,IAhE1BY,UAAOV,SAAO,UAAWF,KAgEK2B,GACF9B,KAAI,SAAA2C,GAAQ,OAAIhB,EAAQvB,MAAK,SAAAwC,GAAG,OAAIA,EAAIb,QAAQtD,MAAM,KAAKoE,SAASF,EAASxC,UAC9EH,KAAI,SAAA8C,GAAO,OAAIlB,EAASxB,MAAK,SAAA2C,GAAI,MAAI,CAACA,EAAKC,WAAYD,EAAKE,KAAMF,EAAKG,KAAMH,EAAKI,KAAMJ,EAAKK,QAASL,EAAKM,SAASR,SAASC,aAAxF,EAAwFA,EAAS3C,UACnLmD,GAAgBC,UAAU,SAAAC,GAAQ,OAAIpB,OAAOoB,aAAD,EAACA,EAAUrD,IAAMgC,IAAWO,GAA/E,GAGA,OAFId,EAAStE,SAAWgG,EAAahG,SACnCkD,EAAgBgB,SAAU,GACrB,CACLF,MAAOb,EAASa,MAChBb,WACAD,uBAIN,OAAO,uBAAKtB,UAAS,8BAA+B2C,EAAW,SAAWK,IACxE,sBAAIhD,UAAU,qBACD,eAAVgD,EACG,aACAL,EAAQ,WACIK,EAAQ,EAAIA,EAAQ,IADxB,OAECA,GAGf,sBAAIhD,UAAU,mBACXmD,EAAerC,KAAI,SAACyD,GACnB,GAAIA,EAAYnG,OAAS,EAAG,CAC1B,IAAMoG,EAAYD,EAAY,GACxBE,EAAYD,EAAUpC,MACtBsC,EAAWH,EAAYA,EAAYnG,OAAS,GAC5CuG,EAA8BC,KAAKC,IAAL,MAAAD,MAAI,OAAQL,EAAYzD,KAAI,SAAAgE,GAAI,OAAI5B,OAAO4B,EAAKxD,gBAAgBY,YACpG,OAAO,sBAAInD,IAAKyF,EAAUlD,gBAAgBL,GAAIjB,UAAS,mBAAoB2E,EAA2B,SAAYA,EAAgC,KAC/IF,EADI,SAEL,0BACGF,EAAYzD,KAAI,YAAkC,IAAhCS,EAA+B,EAA/BA,SAAUD,EAAqB,EAArBA,gBAC3B,OAAO,gBAACF,EAAD,CACLrC,IAAKuC,EAAgBL,GACrBI,SAAS,EACTC,gBAAiBA,EACjBC,SAAUA,EACVC,OAAQA,EACRC,OAAQA,EACR5B,YAAaA,SAIlB6E,aAAA,EAAAA,EAAUpD,kBACT,gBAACvB,EAAD,kBAAWmB,UAAKC,SAAO,eAAgBuD,EAASpD,gBAAgBL,IAArDC,CAA0DM,GAArE,CAA8ExB,UAAU,4BAK9F,MAAsCuE,EAAtC,GAAQjD,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,SACzB,OAAO,gBAACH,EAAD,CACLrC,IAAKuC,EAAgBL,GACrBI,SAAS,EACTC,gBAAiBA,EACjBC,SAAUA,EACVC,OAAQA,EACRC,OAAQA,EACR5B,YAAaA,W,+IC5HvB,SAASkF,EAAT,GAA2B,IAAVC,EAAS,EAATA,OACf,QAAIA,EAAO5G,QACF,iCAAS4G,EAAOlE,KAAI,SAACmE,GAAD,OAAWA,EAAMC,QAAMjG,KAAK,OAK3D,SAASkG,EAAT,GAA0F,IAA5EtB,EAA2E,EAA3EA,KAAMb,EAAqE,EAArEA,MAAqE,IAA9DL,gBAA8D,SAA5CyC,EAA4C,EAA5CA,KAAMxC,EAAsC,EAAtCA,aAAcpB,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQsB,EAAQ,EAARA,MAIzEsC,EAAQxB,EAHS,eAAVb,EACT,cACGL,EAAW,SAAW,OAAQK,GAErC,IAAKqC,IAAUD,IAASA,EAAKhH,OAC3B,OAAO,EAET,IAAMwF,GAAU1C,UAAKC,SAAO,KAAMkE,GAAlBnE,CAA0BkE,GACpCvC,GAAUxD,OAAiBuE,EAAQf,SACzC,OAAO,gBAAC,IAAD,CACLF,SAAUA,EACVK,MAAOA,EACPjE,IAAK6E,EAAQ3C,GACb4B,QAASA,EACTD,aAAcA,EACdpB,OAAQA,EACRuB,MAAOA,EACPtB,OAAQA,IAIG,SAAS6D,EAAT,GASV,IAAD,IAT+BC,KACvB1B,EAQR,EARF2B,SACWC,EAOT,EAPFC,UACoBN,EAMlB,EANFO,WAAaC,MACSZ,EAKpB,EALFa,aAAeD,MACiBhD,EAI9B,EAJFkD,uBAAyBF,MACHpE,EAGpB,EAHFuE,aAAeH,MACM7C,EAEnB,EAFFiD,YAAcJ,MACQnE,EACpB,EADFwE,aAAeL,MAEf,IAAK/B,EAEH,OADAqC,QAAQC,MAAM,0CACP,EAGT,IAAOC,EAAsBvC,EAAtBuC,KAAMC,EAAgBxC,EAAhBwC,MAAOhG,EAASwD,EAATxD,MAEdiG,EAAuBtB,EAAOlE,KAAI,SAACyF,GACvC,OAAKA,GAGAA,EAAUC,MAGXtD,OAAOuD,UAAUF,EAAUC,OACtB,OAAP,UACKD,EADL,CAEEC,MAAO,CAACD,EAAUC,MAAM5H,cAGrB,OAAP,UACK2H,EADL,CAEEC,MAAOD,EAAUC,MAAMjH,MAAM,OAbtB,QAeRsC,QAAO,SAAC0D,GAAD,QAAYA,KAChBmB,GAAa7E,UAAO8E,SAAM,CAACH,OAAO7C,SAASE,EAAK5C,MAAnCY,CAA0CyE,GAEvDzD,EAAU,CAAC,EAAG,EAAG,GAAG+D,QAAO,SAACC,EAAU7D,GAAX,OAAqB6D,EAASC,OAC7D,gBAAC3B,EAAD,CAAKnC,MAAOA,EAAOa,KAAMA,EAAMjB,aAAcA,EAAcwC,KAAMA,EAAM5D,OAAQA,EAAQC,OAAQA,EAAQsB,MAAOA,OAC7G,IACGgE,EAAU,CAAC,EAAG,GAAGH,QAAO,SAACG,EAAS/D,GAAV,OAAoB+D,EAAQD,OACxD,gBAAC3B,EAAD,CAAKxC,UAAU,EAAMK,MAAOA,EAAOa,KAAMA,EAAMjB,aAAcA,EAAcwC,KAAMA,EAAM5D,OAAQA,EAAQC,OAAQA,EAAQsB,MAAOA,OAC7H,IAEGiE,GAAcX,EAAWA,EAAN,SAAuBZ,EAAMP,KAAxC,KAAiDO,EAAM7F,SAAvD,IAEd,OAAO,uBAAKI,UAAU,kBACpB,gBAAC,IAAD,CACEO,MAAK,QAAU6F,EAAV,MAAoBY,EACzBC,YAAW,2BAA4BP,EAAWtI,OAAX,SAA6BsI,EAAW5F,KAAI,SAACmE,GAAD,OAAWA,EAAMC,QAAMjG,KAAK,SAAa,IAAjH,OAA0H+H,EAA1H,IAAsIZ,EAAtI,mCAEb,gBAAC,IAAD,KACE,wBAAMc,IAAI,YAAYpH,KAAI,SAAW+D,EAAK5C,MAE5C,sBAAIjB,UAAU,uBACZ,wBAAMA,UAAU,6BAA6BoG,GAC5C,IACAC,GAAS,wBAAMrG,UAAU,8BAA8BqG,GACvD,IACAZ,GAAS,wBAAMzF,UAAU,8BAA8ByF,EAAMP,KAApD,KAA4DO,EAAM7F,WAE9E,2BAASI,UAAU,qBACjB,gBAAC+E,EAAD,CAAQC,OAAQ0B,IACf7C,EAAKC,YAAc,gBAACqB,EAAD,CAAKnC,MAAM,aAAaa,KAAMA,EAAMjB,aAAcA,EAAcwC,KAAMA,EAAM5D,OAAQA,EAAQC,OAAQA,EAAQsB,MAAOA,IACtIF,EAAQzE,OAASyE,EAAU,kDAC3BkE,EAAQ3I,QAAU2I,EAClB1G,GAAS,uBAAKL,UAAU,mBAAmBK","file":"component---src-templates-show-embed-js-37736b0fc1d761b72252.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","export function normalizeSetlist(rawSetlistValue) {\n  return typeof rawSetlistValue === \"number\"\n    ? [rawSetlistValue]\n    : typeof rawSetlistValue === \"string\"\n      ? rawSetlistValue.split(':')\n      : []\n}\n","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({className = '', type}) {\n  const cssClasses = classnames(className, 'segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\nimport {filter, find, groupWith, partition, propEq} from 'ramda'\nimport classnames from 'classnames'\nimport {Tooltip} from 'react-tippy'\n\nimport Segue from './segue'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\nimport Link from './link-with-previous-url'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findById = (id) => find(propEq('id', id))\nconst filterBySongId = (id) => filter(propEq('song_id', id))\n\nfunction SetlistEntry({inSuite, performanceData, songData, segues, teases, previousUrl}) {\n  const displayName = songData.title\n  const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n  const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n  const url = `/song/${performanceData.song_id}`\n  const classes = classnames('setlist__track', {\n    highlight: previousUrl?.endsWith(url),\n    [`stars-${performanceData.stars}`]: !!performanceData.stars,\n  })\n  return <li className={classes}>\n    <Link to={url}>\n      {!inSuite && songData.suite && `(${songData.suite} suite) ` || ''}\n      {displayName}\n    </Link>\n    {' '}\n    {performanceData.variation || false}\n    {segueData && <Segue {...segueData} />}\n    {performanceData.isDebut && <Tooltip title=\"first time played\" trigger=\"mouseenter focus click\">\n      <span className=\"setlist__track__badge setlist__track__badge--ftp\" aria-label=\"notes\" role=\"img\">🆕\n        <span className=\"hidden\">first time played</span>\n      </span>\n    </Tooltip>}\n    {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n    {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n  </li>\n}\n\nexport default function Setlist(props) {\n  const {\n    allSets = [],\n    allShows = [],\n    isEncore,\n    performances,\n    previousUrl,\n    segues,\n    setlist,\n    showId,\n    songs,\n    teases,\n    which,\n  } = props\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const showIdInt = Number(showId)\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    setlist.map((perfId) => {\n      const performanceData = findById(perfId)(performances)\n      const songData = findById(performanceData.song_id)(songs)\n      const allPerfsOfThisSong = filterBySongId(songData.id)(performances)\n      const setsForAllPerfsOfThisSong = allPerfsOfThisSong.map(perfData => allSets.find(set => set.setlist.split(':').includes(perfData.id)))\n      const showsForThoseSets = setsForAllPerfsOfThisSong.map(setData => allShows.find(show => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData?.id)))\n      const [earlierShows] = partition(showData => Number(showData?.id) < showIdInt, showsForThoseSets)\n      if (allShows.length && !earlierShows.length)\n        performanceData.isDebut = true\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <div className={`setlist__set setlist__set-${isEncore ? 'encore' : which}`}>\n    <h3 className=\"setlist__setlabel\">\n      {which === 'soundcheck'\n        ? 'Soundcheck'\n        : isEncore\n          ? `Encore ${which > 1 ? which : ''}`\n          : `Set ${which}`\n      }\n    </h3>\n    <ol className=\"setlist__tracks\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          const firstSong = songOrSuite[0]\n          const suiteName = firstSong.suite\n          const lastSong = songOrSuite[songOrSuite.length - 1]\n          const mostStarsInConstituentSongs = Math.max(...songOrSuite.map(song => Number(song.performanceData.stars)))\n          return <li key={firstSong.performanceData.id} className={`setlist__suite ${mostStarsInConstituentSongs ? `stars-${mostStarsInConstituentSongs}` : ''}`}>\n            {suiteName} suite\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                return <SetlistEntry\n                  key={performanceData.id}\n                  inSuite={true}\n                  performanceData={performanceData}\n                  songData={songData}\n                  segues={segues}\n                  teases={teases}\n                  previousUrl={previousUrl}\n                />\n              })}\n            </ul>\n            {lastSong?.performanceData &&\n              <Segue {...find(propEq('from_perf_id', lastSong.performanceData.id))(segues)} className=\"setlist__suite__segue\" />\n            }\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        return <SetlistEntry\n          key={performanceData.id}\n          inSuite={false}\n          performanceData={performanceData}\n          songData={songData}\n          segues={segues}\n          teases={teases}\n          previousUrl={previousUrl}\n        />\n      })}\n    </ol>\n  </div>\n}\n","import React from 'react'\nimport {filter, find, includes, propEq, where} from 'ramda'\nimport {graphql} from 'gatsby'\nimport {Helmet} from 'react-helmet'\n\nimport SEO from \"../components/seo\"\nimport Setlist from '../components/setlist'\n\nimport {normalizeSetlist} from '../components/helpers/setlist-helper'\n\nimport './show-embed.css'\n\nfunction Guests({guests}) {\n  if (guests.length) {\n    return <p>With {guests.map((guest) => guest.name).join(', ')}</p>\n  }\n  return false\n}\n\nfunction Set({show, which, isEncore = false, sets, performances, segues, teases, songs}) {\n  const what = which === 'soundcheck'\n    ? 'soundcheck'\n    : `${isEncore ? 'encore' : 'set'}${which}`\n  const setId = show[what]\n  if (!setId || !sets || !sets.length) {\n    return false\n  }\n  const setData = find(propEq('id', setId))(sets)\n  const setlist = normalizeSetlist(setData.setlist)\n  return <Setlist\n    isEncore={isEncore}\n    which={which}\n    key={setData.id}\n    setlist={setlist}\n    performances={performances}\n    segues={segues}\n    songs={songs}\n    teases={teases}\n  />\n}\n\nexport default function ShowEmbed({data: {\n  showsCsv: show,\n  venuesCsv: venue,\n  allSetsCsv: {nodes: sets},\n  allGuestsCsv: {nodes: guests},\n  allSongperformancesCsv: {nodes: performances},\n  allSeguesCsv: {nodes: segues},\n  allSongsCsv: {nodes: songs},\n  allTeasesCsv: {nodes: teases},\n}}) {\n  if (!show) {\n    console.error('Show page, missing show..............')\n    return false\n  }\n\n  const {date, event, notes} = show\n\n  const guestsWithSplitShows = guests.map((guestData) => {\n    if (!guestData) {\n      return null\n    }\n    if (!guestData.shows) {\n      return null\n    }\n    if (Number.isInteger(guestData.shows)) {\n      return {\n        ...guestData,\n        shows: [guestData.shows.toString()]\n      }\n    }\n    return {\n      ...guestData,\n      shows: guestData.shows.split(':')\n    }\n  }).filter((data) => !!data)\n  const showGuests = filter(where({shows: includes(show.id)}))(guestsWithSplitShows)\n\n  const setlist = [1, 2, 3].reduce((setlists, which) => setlists.concat(\n    <Set which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n  const encores = [1, 2].reduce((encores, which) => encores.concat(\n    <Set isEncore={true} which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n\n  const showName = `${event ? `${event}, ` : ``}${venue.name} (${venue.location})`\n\n  return <div className=\"showpage-embed\">\n    <SEO\n      title={`JRAD ${date} @ ${showName}`}\n      description={`Joe Russo's Almost Dead${showGuests.length ? ` with ${showGuests.map((guest) => guest.name).join(' and ')}` : ''} at ${showName} ${date} — setlist, teases, recordings`}\n    />\n    <Helmet>\n      <link rel=\"canonical\" href={`/show/${show.id}`} />\n    </Helmet>\n    <h1 className=\"showpage__pagetitle\">\n      <span className=\"showpage__pagetitle--date\">{date}</span>\n      {' '}\n      {event && <span className=\"showpage__pagetitle--event\">{event}</span>}\n      {' '}\n      {venue && <span className=\"showpage__pagetitle--venue\">{venue.name}, {venue.location}</span>}\n    </h1>\n    <section className=\"showpage__setlist\">\n      <Guests guests={showGuests} />\n      {show.soundcheck && <Set which=\"soundcheck\" show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />}\n      {setlist.length ? setlist : <p>Uh oh, no sets found.</p>}\n      {encores.length && encores}\n      {notes && <div className=\"showpage__notes\">{notes}</div>}\n    </section>\n  </div>\n}\n\nexport const query = graphql`\n  query($showId: String!, $venueId: String!) {\n    showsCsv(id: {eq: $showId}) {\n      id\n      date\n      encore1\n      encore2\n      event\n      notes\n      set1\n      set2\n      set3\n    }\n    venuesCsv(id: {eq: $venueId}) {\n      id\n      location\n      name\n    }\n    allSetsCsv { nodes {\n      id\n      setlist\n    }}\n    allGuestsCsv { nodes {\n      id\n      name\n      shows\n    } }\n    allSongperformancesCsv { nodes {\n      id\n      next_perfid\n      notes\n      prev_perfid\n      showgap\n      song_id\n      variation\n    } }\n    allSongsCsv { nodes {\n      id\n      author\n      core_gd\n      core_jrad\n      suite\n      title\n    } }\n    allSeguesCsv { nodes {\n      id\n      from_perf_id\n      type\n    } }\n    allTeasesCsv { nodes {\n      id\n      performance_id\n      song_name\n    } }\n  }\n`\n"],"sourceRoot":""}