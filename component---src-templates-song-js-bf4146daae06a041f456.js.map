{"version":3,"file":"component---src-templates-song-js-bf4146daae06a041f456.js","mappings":"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","sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./src/helpers/string_helpers.js","webpack://almost-dead-net/./src/templates/song.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  var nativeCodeString = '[native code]';\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          classes.push(arg.toString());\n          continue;\n        }\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","/* Appends an \"s\" to the end of `word` if warranted by the value of `number` */\nexport function pluralize(number, word) {\n  return `${number} ${word}${number !== 1 ? 's' : ''}`\n}\n","import React, {useMemo} from 'react'\nimport {useSortBy, useTable} from 'react-table'\nimport {graphql} from 'gatsby'\nimport {find, propEq} from 'ramda'\nimport classnames from 'classnames'\n\nimport {pluralize} from '../helpers/string_helpers'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Link from '../components/link-with-previous-url'\n\nimport './song.css'\n\nfunction authorInfo(author = null) {\n  switch (author) {\n    case null:\n    case '':\n      return false\n    case 'traditional':\n      return <p>(traditional)</p>\n    default:\n      return <p>by {author}</p>\n  }\n}\n\nfunction sortSets(a,b) {\n  if (a.values.whichSet === 'soundcheck')\n    return -1;\n  if (b.values.whichSet === 'soundcheck')\n    return 1;\n  if (a.values.whichSet === 'set 1')\n    return -1;\n  if (b.values.whichSet === 'set 1')\n    return 1;\n  if (a.values.whichSet === 'set 2')\n    return -1;\n  if (b.values.whichSet === 'set 2')\n    return 1;\n  if (a.values.whichSet === 'set 3')\n    return -1;\n  if (b.values.whichSet === 'set 3')\n    return 1;\n  if (a.values.whichSet === 'encore')\n    return -1;\n  if (b.values.whichSet === 'encore')\n    return 1;\n  if (a.values.whichSet === 'double encore')\n    return -1;\n  if (b.values.whichSet === 'double encore')\n    return 1;\n}\n\nconst SET_MAPPING = { // 'show table column name' to 'human readable set name'\n  soundcheck: 'soundcheck',\n  set1: 'set 1',\n  set2: 'set 2',\n  set3: 'set 3',\n  encore1: 'encore',\n  encore2: 'double encore',\n}\n\nexport const query = graphql`\n  query SongTemplate($songId: String!) {\n    songsCsv(id: {eq: $songId}) {\n      id\n      author\n      suite\n      title\n      nicknames\n      performances\n    }\n    allSeguesCsv { nodes {\n      id\n      from_perf_id\n      to_perf_id\n      type\n    }}\n    allSetsCsv { nodes {\n      id\n      setlist\n    } }\n    allShowsCsv { nodes {\n      id\n      date\n      encore1\n      encore2\n      set1\n      set2\n      set3\n      soundcheck\n    } }\n    allSongperformancesCsv { nodes {\n      id\n      song_id\n      song_name\n      stars\n    } }\n    allTeasesCsv(filter: {song_id: {eq: $songId}}) { nodes {\n      id\n      performance_id\n      within\n    } }\n  }\n`\n\nfunction renderCell({column, render, row}, previousUrl='') {\n  let url;\n  if (column.id === 'show')\n    url = `/show/${row.original.fullData.showData.id}`\n  else if (column.id === 'prior' && row.original.fullData.prior.song_id)\n    url = `/song/${row.original.fullData.prior.song_id}`\n  else if (column.id ===  'after' && row.original.fullData.after.song_id)\n    url = `/song/${row.original.fullData.after.song_id}`\n  if (url)\n    return <Link to={url} className={classnames({highlight: previousUrl.endsWith(url)})}>{render('Cell')}</Link>;\n  return render('Cell')\n}\n\nfunction SortableTable({columns, data, previousUrl=''}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({columns, data}, useSortBy)\n  return <table {...getTableProps()} className=\"sortable\">\n    <thead>\n      {headerGroups.map(headerGroup =>\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map(column =>\n            <th {...column.getHeaderProps(column.getSortByToggleProps())}\n                className={`sortable__cell-${column.id} ${column.isSorted ? column.isSortedDesc ? 'sorted-desc' : 'sorted-asc' : ''}`}>\n              {column.render('Header')}\n            </th>\n          )}\n        </tr>\n      )}\n    </thead>\n    <tbody {...getTableBodyProps()}>\n      {rows.map(row => {\n        prepareRow(row) // no return value; mutates `row`?\n        return <tr {...row.getRowProps()} className={classnames({[`stars-${row.original.stars}`]: row.original.stars})}>\n          {row.cells.map(cell => {\n            const classNameTd = classnames({\n              blank: cell.value === '[opener]' || cell.value === '[closer]',\n              [`sortable__cell-${cell.column.id}`]: true,\n            })\n            return <td {...cell.getCellProps()} className={classNameTd}>{renderCell(cell, previousUrl)}</td>\n          })}\n        </tr>\n      })}\n    </tbody>\n  </table>\n}\n\nexport default function Song({data: {\n  songsCsv: song,\n  allSeguesCsv: {nodes: allSegues},\n  allSetsCsv: {nodes: allSets},\n  allShowsCsv: {nodes: allShows},\n  allSongperformancesCsv: {nodes: allSongPerformances},\n  allTeasesCsv: {nodes: teases},\n}, location}) {\n  if (!song) {\n    return <p>Uh oh, no song data found...</p>\n  }\n  const onlyThisSongsPerformanceIds = song.performances.split(':')\n  if (!allSongPerformances.length) {\n    throw new Error('No data for allSongPerformances')\n  }\n  if (!allShows.length) {\n    throw new Error('No data for allShows')\n  }\n  if (!allSets.length) {\n    throw new Error('No data for allSets')\n  }\n  if (!allSegues.length) {\n    throw new Error('No data for allSegues')\n  }\n  const onlyThisSongsPerformancesData = allSongPerformances\n    .filter((songPerformance) => onlyThisSongsPerformanceIds.includes(songPerformance.id))\n    .map((performanceData) => {\n      const performanceIdStr = performanceData.id.toString()\n      const setData = find((set) =>\n        set.setlist && set.setlist.toString().split(':').includes(performanceIdStr)\n      )(allSets)\n      if (!setData)\n        throw new Error('No setData', {song, performanceData, allSets})\n      const showData = find((show) => [\n        show.soundcheck,\n        show.set1,\n        show.set2,\n        show.set3,\n        show.encore1,\n        show.encore2\n      ].includes(setData.id))(allShows)\n      if (!showData) {\n        throw new Error('No showData', {song, performanceData, setData, allShows})\n      }\n      const setIdsInts = String(setData.setlist).split(':')\n      const perfPositionInSet = setIdsInts.indexOf(performanceIdStr)\n      let prior;\n      if (perfPositionInSet > 0) {\n        const perfPriorId = setIdsInts[perfPositionInSet - 1]\n        prior = allSongPerformances.find(songPerf => songPerf.id === perfPriorId) // TODO refactor to use an object lookup\n        prior.segue = find(propEq('to_perf_id', performanceIdStr))(allSegues)?.type || ','\n      } else prior = {song_name: '[opener]'}\n      let after;\n      if (perfPositionInSet < setIdsInts.length - 1) {\n        after = allSongPerformances.find(songPerf => songPerf.id === setIdsInts[perfPositionInSet + 1])\n        after.segue = find(propEq('from_perf_id', performanceIdStr))(allSegues)?.type || ','\n      } else after = {song_name: '[closer]'}\n      const whichSet = Object.entries(SET_MAPPING)\n        .find(([col_name, _readable_name]) => showData[col_name] === setData.id)[1]\n      const variation = performanceData.variation\n        ? `(${performanceData.variation})`\n        : false\n      return {\n        show: showData.date,\n        prior: prior?.song_name,\n        'segue_prior': prior?.segue,\n        title: song.nicknames.split('; ')[0] || song.title,\n        stars: performanceData.stars,\n        'segue_after': after?.segue,\n        after: after?.song_name,\n        whichSet,\n        fullData: {performanceData, showData, variation, whichSet, prior, after}\n      }\n    })\n\n  const performancesData = useMemo(() => onlyThisSongsPerformancesData, [])\n  const performancesColumns = useMemo(\n    () => [\n      {accessor: 'show', Header: 'show', sortType: (a,b) => new Date(a.values.show).getTime() - new Date(b.values.show).getTime()}, // TODO memoize this fn\n      {accessor: 'whichSet', Header: 'where', sortType: sortSets},\n      {accessor: 'prior', Header: 'prior song'}, // TODO Filter out the/a\n      {accessor: 'segue_prior', Header: '>'},\n      {accessor: 'title', disableSortBy: true},\n      {accessor: 'segue_after', Header: '>'},\n      {accessor: 'after', Header: 'following song'}, // TODO Filter out the/a\n    ],\n    []\n  )\n\n  return <Layout className=\"songpage\">\n    <SEO\n      title={`\"${song.title}\" performed or teased by JRAD`}\n      description={`List of each time Joe Russo's Almost Dead has performed or teased the song \"${song.title}\" ${song.author && song.author !== 'traditional' ? `by ${song.author}` : ''}`}\n    />\n\n    <h1 className=\"songpage__name\">{song.title}</h1>\n    <div className=\"songpage__info\">\n      {authorInfo(song.author)}\n      {song.suite && <p>Part of the {song.suite} suite</p>}\n    </div>\n\n    {Boolean(performancesData.length) && // TODO verify that this count is accurate if a song is played twice in one show...\n      <div className=\"songpage__performances\">\n        <h2>Performed at {pluralize(performancesData.length, 'Show')}</h2>\n        <SortableTable\n          data={performancesData}\n          columns={performancesColumns}\n          previousUrl={location?.state?.previousUrl}\n        />\n      </div>\n    }\n\n    {Boolean(teases.length) &&\n      <div className=\"songpage__teases\">\n        <h2>Teases / Jams</h2>\n        <ul>\n          {teases.map(teaseData => {\n            const performanceData = find(propEq('id', teaseData.performance_id))(allSongPerformances)\n            if (!(performanceData?.id)) {\n              return false\n            }\n            const setData = find((set) => set.setlist.toString().split(':').includes(performanceData.id.toString()))(allSets)\n            const showData = find((show) => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(allShows)\n            const url = `/show/${showData.id}`\n            return <li key={teaseData.id} className={classnames({highlight: location?.state?.previousUrl?.endsWith(url)})}>\n              <Link to={url}>{showData.date} within {teaseData.within} {performanceData.variation && `(${performanceData.variation})`}</Link>\n            </li>\n          })}\n        </ul>\n      </div>\n    }\n  </Layout>\n}\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","_ref","children","state","rest","_objectWithoutPropertiesLoose","_excluded","React","Location","_ref2","location","Link","assign","previousUrl","href","pluralize","number","word","sortSets","a","b","values","whichSet","SET_MAPPING","soundcheck","set1","set2","set3","encore1","encore2","SortableTable","columns","data","_ref2$previousUrl","_useTable","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","id","isSorted","isSortedDesc","render","row","_classnames","getRowProps","classnames","original","stars","cells","cell","_classnames2","classNameTd","blank","value","getCellProps","url","fullData","showData","prior","song_id","after","to","highlight","endsWith","renderCell","Song","_ref3","_location$state","_ref3$data","song","songsCsv","allSegues","allSeguesCsv","nodes","allSets","allSetsCsv","allShows","allShowsCsv","allSongPerformances","allSongperformancesCsv","teases","allTeasesCsv","onlyThisSongsPerformanceIds","performances","split","Error","onlyThisSongsPerformancesData","filter","songPerformance","performanceData","_prior","_prior2","_after","_after2","performanceIdStr","setData","find","set","setlist","show","_find2","setIdsInts","String","perfPositionInSet","indexOf","_find","perfPriorId","songPerf","segue","propEq","type","song_name","entries","_ref4","col_name","variation","date","title","nicknames","performancesData","useMemo","performancesColumns","accessor","Header","sortType","Date","getTime","disableSortBy","Layout","SEO","description","author","authorInfo","suite","Boolean","teaseData","_location$state2","_location$state2$prev","performance_id","within"],"sourceRoot":""}