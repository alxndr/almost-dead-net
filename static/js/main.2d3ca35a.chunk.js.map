{"version":3,"sources":["data.js","components/setlist.js","release-stages.js","pages/show.js","fetch.js","routes.js","components/shows_list.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["URL_BASE","SETS_URL","SHOWS_URL","SONG_PERFORMANCES_URL","VENUES_URL","papaOptions","download","dynamicTyping","header","worker","Setlist","props","console","log","useState","performances","setPerformances","useEffect","Papa","parse","complete","data","errors","meta","length","Error","global","isEncore","which","setlist","map","perf_id","id","perf","find","propEq","song_name","STAGES","releaseStage","document","location","hostname","Show","params","match","shows","setShows","sets","setSets","venues","setVenues","showData","Number","findShow","date","venue_id","venueData","findVenue","name","setlists","set1","setData","push","set2","set3","encore1","encore2","encores","className","defaultPapaParseOptions","URL_ROUTING_BASE_WITH_SLASH","anyPath","home","show","ShowEntry","href","routes","replace","ShowsList","undefined","csvUrl","callback","papaParseOptions","response","getCsv","key","Home","App","src","alt","path","exact","component","target","Boolean","window","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2d3ca35a.chunk.js","sourcesContent":["const URL_BASE = 'https://gist.githubusercontent.com/alxndr/5f64cf477d5202c004856772ad2222db/raw/76739a12f10c011c46b4c9c654383f31a6fb5e1e'\nconst SEGUES_URL = `${URL_BASE}/segues.csv`\nconst SETS_URL = `${URL_BASE}/sets.csv`\nconst SHOWS_URL = `${URL_BASE}/shows.csv`\nconst SONG_PERFORMANCES_URL = `${URL_BASE}/songperformances.csv`\nconst SONGS_URL = `${URL_BASE}/songs.csv`\nconst VENUES_URL = `${URL_BASE}/venues.csv`\n\nexport {\n  SEGUES_URL,\n  SETS_URL,\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  VENUES_URL,\n}\n","import React, {useEffect, useState} from 'react'\nimport Papa from 'papaparse'\nimport {find, propEq} from 'ramda'\n\nimport {SONG_PERFORMANCES_URL} from '../data'\n\nconst findById = (id) => find(propEq('id', id))\n\nconst papaOptions = {\n  download: true,\n  dynamicTyping: true,\n  header: true,\n  worker: true,\n}\n\nexport default function Setlist(props) {\n  console.log('setlist seeing...', props)\n  const [performances, setPerformances] = useState(null)\n  useEffect(() => {\n    Papa.parse(SONG_PERFORMANCES_URL, { ...papaOptions,\n      complete: ({data, errors, meta}) => {\n        if (errors.length)\n          throw new Error('Ruh roh', {data, errors, meta})\n        setPerformances(data)\n      },\n    })\n  }, [])\n  if (!performances) {\n    return <p>Loading sets...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  global.console.log({performances})\n  return <>\n    {props.isEncore\n      ? <p>Encore {props.which > 1 && props.which}</p>\n      : <p>Set {props.which}</p>\n    }\n    <ol>\n      {props.setlist.map(perf_id => {\n        const perf = findById(perf_id)(performances)\n        global.console.log({perf})\n        return <li>{perf.song_name}</li>\n      })}\n    </ol>\n  </>\n}\n","export const STAGES = {\n  CANARY: 'canary',\n  DEV: 'dev',\n  PROD: 'prod',\n  UNKNOWN: 'unknown',\n}\n\nexport function releaseStage() {\n  if (!document || !document.location || !document.location.hostname)\n    return STAGES.UNKNOWN\n  switch (document.location.hostname) {\n    case 'almost-dead.net':\n      return STAGES.PROD\n    case 'alxndr.github.io':\n      return STAGES.CANARY\n    case 'localhost':\n      return STAGES.DEV\n    default:\n      return STAGES.UNKNOWN\n  }\n}\n\n","import React, {useEffect, useState} from 'react'\nimport Papa from 'papaparse'\nimport {find, propEq} from 'ramda'\n\nimport {SETS_URL, SHOWS_URL, VENUES_URL} from '../data'\n\nimport Setlist from '../components/setlist.js'\n\nimport './show.css'\n\nconst papaOptions = {\n  download: true,\n  dynamicTyping: true,\n  header: true,\n  worker: true,\n}\n\nexport default function Show({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [venues, setVenues] = useState(null)\n  useEffect(() => {\n    Papa.parse(SHOWS_URL, { ...papaOptions,\n      complete: ({data, errors, meta}) => {\n        if (errors.length)\n          throw new Error('Ruh roh', {data, errors, meta})\n        setShows(data)\n      },\n    })\n    Papa.parse(SETS_URL, { ...papaOptions,\n      complete: ({data, errors, meta}) => {\n        if (errors.length)\n          throw new Error('Ruh roh', {data, errors, meta})\n        setSets(data)\n      },\n    })\n    Papa.parse(VENUES_URL, { ...papaOptions,\n      complete: ({data, errors, meta}) => {\n        if (errors.length)\n          throw new Error('Ruh roh', {data, errors, meta})\n        setVenues(data)\n      },\n    })\n  }, [])\n  if (!shows) {\n    return <p>Loading shows...</p>\n  }\n  if (!venues) {\n    return <p>Loading venues...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!venues.length) {\n    return <p>Uh oh, no venues found...</p>\n  }\n  if (!sets) {\n    return <p>Loading sets...</p>\n  }\n  if (!sets.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  const findShow = find(propEq('id', Number(params.id)))\n  const showData = findShow(shows)\n  if (!showData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const {date, venue_id} = showData\n  const findVenue = find(propEq('id', venue_id))\n  const venueData = findVenue(venues)\n  const {name, location} = venueData\n  const setlists = []\n  if (showData.set1) {\n    const setData = find(propEq('id', Number(showData.set1)))(sets)\n    console.log('raw set data!!', setData)\n    const setlist = <Setlist isEncore={false} which={1} id={setData.id} setlist={[setData['song performances']]} />\n    setlists.push(setlist)\n  }\n  if (showData.set2) {\n    const setData = find(propEq('id', Number(showData.set2)))(sets)\n    const setlist = <Setlist isEncore={false} which={2} id={setData.id} setlist={[setData['song performances']]} />\n    setlists.push(setlist)\n  }\n  if (showData.set3) {\n    const setData = find(propEq('id', Number(showData.set3)))(sets)\n    const setlist = <Setlist isEncore={false} which={2} id={setData.id} setlist={[setData['song performances']]} />\n    setlists.push(setlist)\n  }\n  const encores = []\n  if (showData.encore1) {\n    const setData = find(propEq('id', Number(showData.encore1)))(sets)\n    const setlist = <Setlist isEncore={true} which={1} id={setData.id} setlist={[setData['song performances']]} />\n    setlists.push(setlist)\n  }\n  if (showData.encore2) {\n    const setData = find(propEq('id', Number(showData.encore2)))(sets)\n    const setlist = <Setlist isEncore={true} which={2} id={setData.id} setlist={[setData['song performances']]} />\n    setlists.push(setlist)\n  }\n  console.log({sets, encores})\n  return <>\n    <h1 className=\"pagetitle\">\n      <span className=\"pagetitle--number\">{showData.id}</span>\n      <span className=\"pagetitle--date\">{date}</span>\n      <span className=\"pagetitle--venue\">{name}, {location}</span>\n    </h1>\n    <section>\n      {setlists.length\n        ? setlists\n        : <p>Uh oh, no sets found.</p>\n      }\n    </section>\n  </>\n}\n","import Papa from 'papaparse'\n\nconst defaultPapaParseOptions = {\n  download: true,\n  header: true,\n  worker: true,\n}\n\nexport function getCsv(csvUrl, callback, papaParseOptions = {}) {\n  return Papa.parse(csvUrl, {\n    ...papaParseOptions,\n    ...defaultPapaParseOptions,\n    complete: (response) => {\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('Error fetching', {csvUrl, response})\n      return callback(data)\n    },\n  })\n}\n","import {STAGES, releaseStage} from './release-stages'\n\nconst URL_ROUTING_BASE_WITH_SLASH = releaseStage() === STAGES.CANARY\n  ? '/almost-dead-net/' // https://alxndr.github.io/almost-dead-net\n  : '/'\n\nexport const anyPath = `${URL_ROUTING_BASE_WITH_SLASH}:path`\nexport const home = `${URL_ROUTING_BASE_WITH_SLASH}`\nexport const show = `${URL_ROUTING_BASE_WITH_SLASH}show/:id`\n\nconsole.log({URL_ROUTING_BASE_WITH_SLASH})\n\nexport default {\n  anyPath,\n  home,\n  show,\n}\n","import React, {useState, useEffect} from 'react'\n\nimport {getCsv} from '../fetch'\nimport routes from '../routes';\n\nimport {SHOWS_URL} from '../data'\n\nfunction ShowEntry({date, id}) {\n  return <li>\n    <a href={routes.show.replace(':id', id)}>{date}</a>\n  </li>\n}\n\nconst UNDEF = undefined\n\nexport default function ShowsList() {\n  const [shows, setShows] = useState(UNDEF)\n  useEffect(() => {\n    getCsv(SHOWS_URL, setShows)\n  }, [])\n  console.log(shows)\n  if (shows === UNDEF) {\n    return <p>Loading...</p>\n  }\n  return <ul className=\"shows\">\n    {shows.length\n      ? shows.map(show => <ShowEntry key={show.id} date={show.date} id={show.id} />)\n      : <li>Uh oh, no shows found...</li>\n    }\n  </ul>\n}\n","import React from 'react'\n\nimport ShowsList from '../components/shows_list'\n\nexport default function Home(props) {\n  return <>\n    <h1>Almost-Dead.net</h1>\n    <p>JRAD setlists:</p>\n    <ShowsList />\n    <hr />\n    <p>Coming eventually...</p>\n    <ul>\n      <li>links to Archive.org</li>\n      <li>videos</li>\n      <li>tease notations</li>\n    </ul>\n  </>;\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport {releaseStage} from './release-stages'\nimport {Home, Show} from './pages'\nimport routes from './routes'\n\nimport './App.css'\n\nfunction Error() {\n  return <>\n    <h1>Uh oh! Error</h1>\n  </>\n}\n\nfunction App() {\n  console.log({routes})\n  return <>\n    <div className={`App ${releaseStage()}`}>\n      <a id=\"logo\" href={routes.home}><img src=\"https://i.imgur.com/tvtgYVY.png\" alt=\"Good Ol' Almost Dead\" /></a>\n      <BrowserRouter>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.show}       component={Show} />\n          <Route path={routes.anyPath}    component={Error} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n    <footer id=\"site-footer\">Contributions / corrections: <a href=\"https://twitter.com/AlmostDeadNet\" target=\"_new\">@AlmostDeadNet on Twitter</a></footer>\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}