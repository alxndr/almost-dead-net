{"version":3,"file":"component---src-templates-show-embed-js-02664d8b8b090b34dc14.js","mappings":"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","sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./src/components/helpers/setlist-helper.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./src/components/segue.js","webpack://almost-dead-net/./src/components/perf_note.js","webpack://almost-dead-net/./src/components/teases_note.js","webpack://almost-dead-net/./src/components/setlist.js","webpack://almost-dead-net/./src/templates/show-embed.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  var nativeCodeString = '[native code]';\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          classes.push(arg.toString());\n          continue;\n        }\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","export function normalizeSetlist(rawSetlistValue) {\n  return typeof rawSetlistValue === \"number\"\n    ? [rawSetlistValue]\n    : typeof rawSetlistValue === \"string\"\n      ? rawSetlistValue.split(':')\n      : []\n}\n","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({className = '', type}) {\n  const cssClasses = classnames(className, 'segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\nimport {filter, find, groupWith, partition, propEq} from 'ramda'\nimport classnames from 'classnames'\nimport {Tooltip} from 'react-tippy'\n\nimport Segue from './segue'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\nimport Link from './link-with-previous-url'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findById = (id) => find(propEq('id', id))\nconst filterBySongId = (id) => filter(propEq('song_id', id))\n\nfunction SetlistEntry({inSuite, performanceData, songData, segues, teases, previousUrl}) {\n  const displayName = songData.title\n  const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n  const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n  const url = `/song/${performanceData.song_id}`\n  const classes = classnames('setlist__track', {\n    highlight: previousUrl?.endsWith(url),\n    [`stars-${performanceData.stars}`]: !!performanceData.stars,\n  })\n  return <li className={classes}>\n    <Link to={url}>\n      {!inSuite && songData.suite && `(${songData.suite} suite) ` || ''}\n      {displayName}\n    </Link>\n    {' '}\n    {performanceData.variation || false}\n    {segueData && <Segue {...segueData} />}\n    {performanceData.isDebut && <Tooltip title=\"first time played\" trigger=\"mouseenter focus click\">\n      <span className=\"setlist__track__badge setlist__track__badge--ftp\" aria-label=\"notes\" role=\"img\">🆕\n        <span className=\"hidden\">first time played</span>\n      </span>\n    </Tooltip>}\n    {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n    {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n  </li>\n}\n\nexport default function Setlist(props) {\n  const {\n    allSets = [],\n    allShows = [],\n    isEncore,\n    performances,\n    previousUrl,\n    segues,\n    setlist,\n    showId,\n    songs,\n    teases,\n    which,\n  } = props\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const showIdInt = Number(showId)\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    setlist.map((perfId) => {\n      const performanceData = findById(perfId)(performances)\n      const songData = findById(performanceData.song_id)(songs)\n      const allPerfsOfThisSong = filterBySongId(songData.id)(performances)\n      const setsForAllPerfsOfThisSong = allPerfsOfThisSong.map(perfData => allSets.find(set => set.setlist.split(':').includes(perfData.id)))\n      const showsForThoseSets = setsForAllPerfsOfThisSong.map(setData => allShows.find(show => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData?.id)))\n      const [earlierShows] = partition(showData => Number(showData?.id) < showIdInt, showsForThoseSets)\n      if (allShows.length && !earlierShows.length)\n        performanceData.isDebut = true\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <div className={`setlist__set setlist__set-${isEncore ? 'encore' : which}`}>\n    <h3 className=\"setlist__setlabel\">\n      {which === 'soundcheck'\n        ? 'Soundcheck'\n        : isEncore\n          ? `Encore ${which > 1 ? which : ''}`\n          : `Set ${which}`\n      }\n    </h3>\n    <ol className=\"setlist__tracks\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          const firstSong = songOrSuite[0]\n          const suiteName = firstSong.suite\n          const lastSong = songOrSuite[songOrSuite.length - 1]\n          const mostStarsInConstituentSongs = Math.max(...songOrSuite.map(song => Number(song.performanceData.stars)))\n          return <li key={firstSong.performanceData.id} className={`setlist__suite ${mostStarsInConstituentSongs ? `stars-${mostStarsInConstituentSongs}` : ''}`}>\n            {suiteName} suite\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                return <SetlistEntry\n                  key={performanceData.id}\n                  inSuite={true}\n                  performanceData={performanceData}\n                  songData={songData}\n                  segues={segues}\n                  teases={teases}\n                  previousUrl={previousUrl}\n                />\n              })}\n            </ul>\n            {lastSong?.performanceData &&\n              <Segue {...find(propEq('from_perf_id', lastSong.performanceData.id))(segues)} className=\"setlist__suite__segue\" />\n            }\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        return <SetlistEntry\n          key={performanceData.id}\n          inSuite={false}\n          performanceData={performanceData}\n          songData={songData}\n          segues={segues}\n          teases={teases}\n          previousUrl={previousUrl}\n        />\n      })}\n    </ol>\n  </div>\n}\n","import React from 'react'\nimport {filter, find, includes, propEq, where} from 'ramda'\nimport {graphql} from 'gatsby'\nimport {Helmet} from 'react-helmet'\n\nimport SEO from \"../components/seo\"\nimport Setlist from '../components/setlist'\n\nimport {normalizeSetlist} from '../components/helpers/setlist-helper'\n\nimport './show-embed.css'\n\nfunction Guests({guests}) {\n  if (guests.length) {\n    return <p>With {guests.map((guest) => guest.name).join(', ')}</p>\n  }\n  return false\n}\n\nfunction Set({show, which, isEncore = false, sets, performances, segues, teases, songs}) {\n  const what = which === 'soundcheck'\n    ? 'soundcheck'\n    : `${isEncore ? 'encore' : 'set'}${which}`\n  const setId = show[what]\n  if (!setId || !sets || !sets.length) {\n    return false\n  }\n  const setData = find(propEq('id', setId))(sets)\n  const setlist = normalizeSetlist(setData.setlist)\n  return <Setlist\n    isEncore={isEncore}\n    which={which}\n    key={setData.id}\n    setlist={setlist}\n    performances={performances}\n    segues={segues}\n    songs={songs}\n    teases={teases}\n  />\n}\n\nexport default function ShowEmbed({data: {\n  showsCsv: show,\n  venuesCsv: venue,\n  allSetsCsv: {nodes: sets},\n  allGuestsCsv: {nodes: guests},\n  allSongperformancesCsv: {nodes: performances},\n  allSeguesCsv: {nodes: segues},\n  allSongsCsv: {nodes: songs},\n  allTeasesCsv: {nodes: teases},\n}}) {\n  if (!show) {\n    console.error('Show page, missing show..............')\n    return false\n  }\n\n  const {date, event, notes} = show\n\n  const guestsWithSplitShows = guests.map((guestData) => {\n    if (!guestData) {\n      return null\n    }\n    if (!guestData.shows) {\n      return null\n    }\n    if (Number.isInteger(guestData.shows)) {\n      return {\n        ...guestData,\n        shows: [guestData.shows.toString()]\n      }\n    }\n    return {\n      ...guestData,\n      shows: guestData.shows.split(':')\n    }\n  }).filter((data) => !!data)\n  const showGuests = filter(where({shows: includes(show.id)}))(guestsWithSplitShows)\n\n  const setlist = [1, 2, 3].reduce((setlists, which) => setlists.concat(\n    <Set which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n  const encores = [1, 2].reduce((encores, which) => encores.concat(\n    <Set isEncore={true} which={which} show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />\n  ), [])\n\n  const showName = `${event ? `${event}, ` : ``}${venue.name} (${venue.location})`\n\n  return <div className=\"showpage-embed\">\n    <SEO\n      title={`JRAD ${date} @ ${showName}`}\n      description={`Joe Russo's Almost Dead${showGuests.length ? ` with ${showGuests.map((guest) => guest.name).join(' and ')}` : ''} at ${showName} ${date} — setlist, teases, recordings`}\n    />\n    <Helmet>\n      <link rel=\"canonical\" href={`/show/${show.id}`} />\n    </Helmet>\n    <h1 className=\"showpage__pagetitle\">\n      <span className=\"showpage__pagetitle--date\">{date}</span>\n      {' '}\n      {event && <span className=\"showpage__pagetitle--event\">{event}</span>}\n      {' '}\n      {venue && <span className=\"showpage__pagetitle--venue\">{venue.name}, {venue.location}</span>}\n    </h1>\n    <section className=\"showpage__setlist\">\n      <Guests guests={showGuests} />\n      {show.soundcheck && <Set which=\"soundcheck\" show={show} performances={performances} sets={sets} segues={segues} teases={teases} songs={songs} />}\n      {setlist.length ? setlist : <p>Uh oh, no sets found.</p>}\n      {encores.length && encores}\n      {notes && <div className=\"showpage__notes\">{notes}</div>}\n    </section>\n  </div>\n}\n\nexport const query = graphql`\n  query($showId: String!, $venueId: String!) {\n    showsCsv(id: {eq: $showId}) {\n      id\n      date\n      encore1\n      encore2\n      event\n      notes\n      set1\n      set2\n      set3\n    }\n    venuesCsv(id: {eq: $venueId}) {\n      id\n      location\n      name\n    }\n    allSetsCsv { nodes {\n      id\n      setlist\n    }}\n    allGuestsCsv { nodes {\n      id\n      name\n      shows\n    } }\n    allSongperformancesCsv { nodes {\n      id\n      next_perfid\n      notes\n      prev_perfid\n      showgap\n      song_id\n      variation\n    } }\n    allSongsCsv { nodes {\n      id\n      author\n      core_gd\n      core_jrad\n      suite\n      title\n    } }\n    allSeguesCsv { nodes {\n      id\n      from_perf_id\n      type\n    } }\n    allTeasesCsv { nodes {\n      id\n      performance_id\n      song_name\n    } }\n  }\n`\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","normalizeSetlist","rawSetlistValue","split","_ref","children","state","rest","_objectWithoutPropertiesLoose","_excluded","React","Location","_ref2","location","Link","assign","previousUrl","href","Segue","_ref$className","className","type","cssClasses","classnames","PerfNote","notes","Tooltip","title","trigger","role","TeasesNote","list","text","map","song_name","findById","id","find","propEq","filterBySongId","filter","SetlistEntry","_classnames","inSuite","performanceData","songData","segues","teases","displayName","segueData","teasesArray","url","song_id","highlight","endsWith","stars","to","suite","variation","isDebut","Setlist","props","_props$allSets","allSets","_props$allShows","allShows","isEncore","performances","setlist","showId","songs","which","showIdInt","Number","groupedBySuite","groupWith","a","b","perfId","showsForThoseSets","perfData","set","setData","show","soundcheck","set1","set2","set3","encore1","encore2","earlierShows","partition","showData","songOrSuite","firstSong","suiteName","lastSong","mostStarsInConstituentSongs","Math","max","_toConsumableArray","song","_songOrSuite$","Guests","guests","guest","name","Set","_ref2$isEncore","sets","setId","ShowEmbed","_ref3","_ref3$data","data","showsCsv","venue","venuesCsv","allSetsCsv","nodes","allGuestsCsv","allSongperformancesCsv","allSeguesCsv","allSongsCsv","allTeasesCsv","console","error","date","event","guestsWithSplitShows","guestData","shows","isInteger","showGuests","where","reduce","setlists","concat","encores","showName","SEO","description","Helmet","rel"],"sourceRoot":""}