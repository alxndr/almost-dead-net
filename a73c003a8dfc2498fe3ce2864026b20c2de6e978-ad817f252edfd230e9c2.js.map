{"version":3,"sources":["webpack://almost-dead-net/./node_modules/ramda/es/__.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isPlaceholder.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_curry1.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_curry2.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isArray.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isTransformer.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_dispatchable.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_reduced.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xfBase.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_map.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isString.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isArrayLike.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xwrap.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_arity.js","webpack://almost-dead-net/./node_modules/ramda/es/bind.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_reduce.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xmap.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_curryN.js","webpack://almost-dead-net/./node_modules/ramda/es/curryN.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_has.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isArguments.js","webpack://almost-dead-net/./node_modules/ramda/es/keys.js","webpack://almost-dead-net/./node_modules/ramda/es/map.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isInteger.js","webpack://almost-dead-net/./node_modules/ramda/es/nth.js","webpack://almost-dead-net/./node_modules/ramda/es/prop.js","webpack://almost-dead-net/./node_modules/ramda/es/pluck.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_curry3.js","webpack://almost-dead-net/./node_modules/ramda/es/reduce.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_includesWith.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_objectIs.js","webpack://almost-dead-net/./node_modules/ramda/es/type.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_equals.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_functionName.js","webpack://almost-dead-net/./node_modules/ramda/es/equals.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_includes.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_indexOf.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_toISOString.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xfilter.js","webpack://almost-dead-net/./node_modules/ramda/es/filter.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isObject.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_filter.js","webpack://almost-dead-net/./node_modules/ramda/es/reject.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_complement.js","webpack://almost-dead-net/./node_modules/ramda/es/toString.js","webpack://almost-dead-net/./node_modules/ramda/es/max.js","webpack://almost-dead-net/./node_modules/ramda/es/converge.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_clone.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/reduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_Set.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xfind.js","webpack://almost-dead-net/./node_modules/ramda/es/find.js","webpack://almost-dead-net/./node_modules/ramda/es/groupBy.js","webpack://almost-dead-net/./node_modules/ramda/es/groupWith.js","webpack://almost-dead-net/./node_modules/ramda/es/includes.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_identity.js","webpack://almost-dead-net/./node_modules/ramda/es/identity.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xuniqBy.js","webpack://almost-dead-net/./node_modules/ramda/es/uniqBy.js","webpack://almost-dead-net/./node_modules/ramda/es/uniq.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_objectAssign.js","webpack://almost-dead-net/./node_modules/ramda/es/into.js","webpack://almost-dead-net/./node_modules/ramda/es/juxt.js","webpack://almost-dead-net/./node_modules/ramda/es/otherwise.js","webpack://almost-dead-net/./node_modules/ramda/es/partition.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xpromap.js","webpack://almost-dead-net/./node_modules/ramda/es/propEq.js","webpack://almost-dead-net/./node_modules/ramda/es/sort.js","webpack://almost-dead-net/./node_modules/ramda/es/sortBy.js","webpack://almost-dead-net/./node_modules/ramda/es/trim.js","webpack://almost-dead-net/./node_modules/ramda/es/where.js"],"names":["_isPlaceholder","a","fn","f1","arguments","length","apply","this","f2","b","_b","_a","Array","isArray","val","Object","prototype","toString","call","obj","_dispatchable","methodNames","transducerCreator","idx","slice","transducer","x","init","xf","result","_result","functor","len","hasOwnProperty","XWrap","f","Error","acc","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","bind","thisObj","_iterableReduce","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","list","_arrayReduce","reduce","TypeError","XMap","_xfBase","input","received","combined","argsIdx","left","combinedIdx","prop","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","key","Number","isInteger","offset","charAt","p","f3","c","_c","methodname","_arrayFromIterator","push","_includesWith","pred","is","undefined","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","aItem","match","typeA","equals","constructor","String","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","inf","indexOf","pad","Date","toISOString","XFilter","filterable","converge","after","fns","args","context","refFrom","refTo","deep","pattern","copy","copiedValue","create","getPrototypeOf","RegExp","XReduceBy","valueFn","valueAcc","keyFn","inputs","elt","hasOrAdd","shouldAdd","set","prevSize","type","Infinity","_items","_nativeSet","add","has","bIdx","_Set","Set","XFind","found","res","nextidx","_identity","XUniqBy","appliedItem","assign","juxt","comparator","sort","aa","bb","ws","trim","spec","testObj"],"mappings":"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","file":"a73c003a8dfc2498fe3ce2864026b20c2de6e978-ad817f252edfd230e9c2.js","sourcesContent":["/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","export default function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}","import _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nexport default Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import _isArray from \"./_isArray.js\";\nimport _isTransformer from \"./_isTransformer.js\";\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer created by [transducerCreator] to return a new transformer\n * (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} transducerCreator transducer factory if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, transducerCreator, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var obj = arguments[arguments.length - 1];\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, Array.prototype.slice.call(arguments, 0, -1));\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = transducerCreator.apply(null, Array.prototype.slice.call(arguments, 0, -1));\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","export default {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}","export default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from \"./_curry1.js\";\nimport _isArray from \"./_isArray.js\";\nimport _isString from \"./_isString.js\";\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n *      _isArrayLike({nodeType: 1, length: 1}) // => false\n */\n\nvar _isArrayLike = /*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nexport default _isArrayLike;","var XWrap = /*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n  return XWrap;\n}();\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","import _arity from \"./internal/_arity.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind = /*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nexport default bind;","import _isArrayLike from \"./_isArrayLike.js\";\nimport _xwrap from \"./_xwrap.js\";\nimport bind from \"../bind.js\";\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n  throw new TypeError('reduce: list must be array or iterable');\n}","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XMap = /*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n  return XMap;\n}();\nvar _xmap = /*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nexport default _xmap;","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _arity from \"./internal/_arity.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _curryN from \"./internal/_curryN.js\";\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN = /*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nexport default curryN;","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _has from \"./_has.js\";\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\nexport default _isArguments;","import _curry1 from \"./internal/_curry1.js\";\nimport _has from \"./internal/_has.js\";\nimport _isArguments from \"./internal/_isArguments.js\"; // cover IE < 9 keys issues\n\nvar hasEnumBug = ! /*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug = /*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values, R.toPairs\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nexport default keys;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _map from \"./internal/_map.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xmap from \"./internal/_xmap.js\";\nimport curryN from \"./curryN.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex, R.pluck, R.project\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nexport default map;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth = /*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.props, R.pluck, R.project, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/\n_curry2(function prop(p, obj) {\n  if (obj == null) {\n    return;\n  }\n  return _isInteger(p) ? nth(p, obj) : obj[p];\n});\nexport default prop;","import _curry2 from \"./internal/_curry2.js\";\nimport map from \"./map.js\";\nimport prop from \"./prop.js\";\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.project, R.prop, R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck = /*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nexport default pluck;","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce = /*#__PURE__*/\n_curry3(_reduce);\nexport default reduce;","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type = /*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;","import _arrayFromIterator from \"./_arrayFromIterator.js\";\nimport _includesWith from \"./_includesWith.js\";\nimport _functionName from \"./_functionName.js\";\nimport _has from \"./_has.js\";\nimport _objectIs from \"./_objectIs.js\";\nimport keys from \"../keys.js\";\nimport type from \"../type.js\";\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparison of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n  var typeA = type(a);\n  if (typeA !== type(b)) {\n    return false;\n  }\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}","export default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from \"./internal/_curry2.js\";\nimport _equals from \"./internal/_equals.js\";\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals = /*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nexport default equals;","import _indexOf from \"./_indexOf.js\";\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import equals from \"../equals.js\";\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } // non-zero numbers can utilise Set\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  } // anything else not covered above, defer to R.equals\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\nexport default _toISOString;","import _curry2 from \"./_curry2.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XFilter = /*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n  return XFilter;\n}();\nvar _xfilter = /*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nexport default _xfilter;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _filter from \"./internal/_filter.js\";\nimport _isObject from \"./internal/_isObject.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xfilter from \"./internal/_xfilter.js\";\nimport keys from \"./keys.js\";\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_dispatchable(['fantasy-land/filter', 'filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nexport default filter;","export default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}","import _complement from \"./internal/_complement.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport filter from \"./filter.js\";\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 !== 0;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject = /*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nexport default reject;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _toString from \"./internal/_toString.js\";\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString = /*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\nexport default toString;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max = /*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;","import _curry2 from \"./internal/_curry2.js\";\nimport _map from \"./internal/_map.js\";\nimport curryN from \"./curryN.js\";\nimport max from \"./max.js\";\nimport pluck from \"./pluck.js\";\nimport reduce from \"./reduce.js\";\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge = /*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\nexport default converge;","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n      idx += 1;\n    }\n    refFrom[idx] = value;\n    refTo[idx] = copiedValue;\n    for (var key in value) {\n      if (value.hasOwnProperty(key)) {\n        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n      }\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XReduceBy = /*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n  return XReduceBy;\n}();\nvar _xreduceBy = /*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nexport default _xreduceBy;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy = /*#__PURE__*/\n_curryN(4, [], /*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n    acc[key] = value;\n    return acc;\n  }, {}, list);\n}));\nexport default reduceBy;","import _includes from \"./_includes.js\";\nvar _Set = /*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n  return _Set;\n}();\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      } // scan through all previously applied items\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\nexport default _Set;","import _curry2 from \"./_curry2.js\";\nimport _reduce from \"./_reduce.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XDropLastWhile = /*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n  return XDropLastWhile;\n}();\nvar _xdropLastWhile = /*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\nexport default _xdropLastWhile;","import _curry2 from \"./_curry2.js\";\nimport _reduced from \"./_reduced.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XFind = /*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n  return XFind;\n}();\nvar _xfind = /*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nexport default _xfind;","import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xfind from \"./internal/_xfind.js\";\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nexport default find;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_checkForMethod('groupBy', /*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * const isVowel = R.test(/^[aeiou]$/i);\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith = /*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    var nextidx = idx + 1;\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n  return res;\n});\nexport default groupWith;","import _includes from \"./internal/_includes.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Also works with strings.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes = /*#__PURE__*/\n_curry2(_includes);\nexport default includes;","export default function _identity(x) {\n  return x;\n}","import _curry1 from \"./internal/_curry1.js\";\nimport _identity from \"./internal/_identity.js\";\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity = /*#__PURE__*/\n_curry1(_identity);\nexport default identity;","import _curry2 from \"./_curry2.js\";\nimport _Set from \"./_Set.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XUniqBy = /*#__PURE__*/\nfunction () {\n  function XUniqBy(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.set = new _Set();\n  }\n  XUniqBy.prototype['@@transducer/init'] = _xfBase.init;\n  XUniqBy.prototype['@@transducer/result'] = _xfBase.result;\n  XUniqBy.prototype['@@transducer/step'] = function (result, input) {\n    return this.set.add(this.f(input)) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n  return XUniqBy;\n}();\nvar _xuniqBy = /*#__PURE__*/\n_curry2(function _xuniqBy(f, xf) {\n  return new XUniqBy(f, xf);\n});\nexport default _xuniqBy;","import _Set from \"./internal/_Set.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xuniqBy from \"./internal/_xuniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_dispatchable([], _xuniqBy, function (fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n    idx += 1;\n  }\n  return result;\n}));\nexport default uniqBy;","import identity from \"./identity.js\";\nimport uniqBy from \"./uniqBy.js\";\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq = /*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import _has from \"./_has.js\"; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _clone from \"./internal/_clone.js\";\nimport _curry3 from \"./internal/_curry3.js\";\nimport _isTransformer from \"./internal/_isTransformer.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _stepCat from \"./internal/_stepCat.js\";\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into = /*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\nexport default into;","import _curry1 from \"./internal/_curry1.js\";\nimport converge from \"./converge.js\";\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt = /*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\nexport default juxt;","import _curry2 from \"./internal/_curry2.js\";\nimport _assertPromise from \"./internal/_assertPromise.js\";\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.andThen\n * @example\n *\n *      const failedFetch = id => Promise.reject('bad ID');\n *      const useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' });\n *\n *      //recoverFromFailure :: String -> Promise ({ firstName, lastName })\n *      const recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.andThen(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log);\n */\n\nvar otherwise = /*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n  return p.then(null, f);\n});\nexport default otherwise;","import filter from \"./filter.js\";\nimport juxt from \"./juxt.js\";\nimport reject from \"./reject.js\";\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition = /*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from \"./_curry3.js\";\nimport _xfBase from \"./_xfBase.js\";\nimport _promap from \"./_promap.js\";\nvar XPromap = /*#__PURE__*/\nfunction () {\n  function XPromap(f, g, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.g = g;\n  }\n  XPromap.prototype['@@transducer/init'] = _xfBase.init;\n  XPromap.prototype['@@transducer/result'] = _xfBase.result;\n  XPromap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, _promap(this.f, this.g, input));\n  };\n  return XPromap;\n}();\nvar _xpromap = /*#__PURE__*/\n_curry3(function _xpromap(f, g, xf) {\n  return new XPromap(f, g, xf);\n});\nexport default _xpromap;","import _curry3 from \"./internal/_curry3.js\";\nimport prop from \"./prop.js\";\nimport equals from \"./equals.js\";\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq = /*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, prop(name, obj));\n});\nexport default propEq;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @see R.ascend, R.descend\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort = /*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\nexport default sort;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy = /*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import _curry1 from \"./internal/_curry1.js\";\nvar ws = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u2000\\u2001\\u2002\\u2003\" + \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" + \"\\u2029\\uFEFF\";\nvar zeroWidth = \"\\u200B\";\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim || /*#__PURE__*/\nws.trim() || ! /*#__PURE__*/\nzeroWidth.trim() ? /*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) : /*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _curry2 from \"./internal/_curry2.js\";\nimport _has from \"./internal/_has.js\";\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where = /*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n  return true;\n});\nexport default where;"],"sourceRoot":""}