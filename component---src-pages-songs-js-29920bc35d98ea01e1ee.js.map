{"version":3,"sources":["webpack://almost-dead-net/./src/components/header.js","webpack://almost-dead-net/./src/components/layout.js","webpack://almost-dead-net/./src/pages/songs.js"],"names":["Header","className","to","title","src","alt","defaultProps","children","href","Author","name","PerformanceCount","perfIds","text","length","message","Tooltip","trigger","aria-label","role","SongLink","data","author","core_gd","cover_gd","id","suite","performances","SongsComponent","songs","allSongsCsv","nodes","teases","allTeasesCsv","songsClean","filter","songData","groupedByPerformedVsTeased","groupBy","Boolean","performedSongs","teasedSongs","description","sortBy","prop","map","sections","key","String","split","teasePerfIds","propEq","row","performance_id","query","render"],"mappings":"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","file":"component---src-pages-songs-js-29920bc35d98ea01e1ee.js","sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = () => (\n  <header>\n    <Link className=\"App__banner\" to=\"/\" title=\"Almost-Dead.net home page\">\n      <img src=\"https://i.imgur.com/q5cBEHG.png\" alt=\"Almost-Dead.net banner\" />\n    </Link>\n  </header>\n)\n\nHeader.propTypes = {\n}\n\nHeader.defaultProps = {\n}\n\nexport default Header\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"gatsby\"\n\nimport Header from './header'\n\nimport './reset.css'\nimport './layout.css'\n\nconst Layout = ({children, className = ''}) => {\n  return (\n    <div className={`layout ${className}`}>\n\n      <Header />\n\n      <main>\n        {children}\n      </main>\n\n      <footer>\n        <Link className=\"footer__home\" to=\"/\" title=\"return to home page\">\n          Home\n        </Link>\n        <Link className=\"footer__link-about\" to=\"/about\" title=\"About the Site\">\n          About\n        </Link>\n        <a href=\"https://lot.almost-dead.net\" className=\"footer__forum\" title=\"JRAD Forum — The Lot\">\n          Forum\n        </a>\n      </footer>\n\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport {graphql, Link, StaticQuery} from 'gatsby'\n\nimport {filter, groupBy, prop, propEq, sortBy} from 'ramda'\nimport {Tooltip} from 'react-tippy'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport './songs.css'\n\nfunction Author({name}) {\n  if (!name || name === 'traditional') {\n    return false\n  }\n  return <span className=\"song__author\">\n    {name}\n  </span>\n}\nfunction PerformanceCount({perfIds, text = 'performed'}) {\n  if (!perfIds || !perfIds.length) {\n    return false\n  }\n  const message = `${text} ${perfIds.length} time${perfIds.length === 1 ? '' : 's'}`\n  return <Tooltip title={message} trigger=\"mouseenter focus click\">\n    <span className=\"song__perfcount\" aria-label=\"notes\" role=\"img\">×{perfIds.length}\n      <span className=\"hidden\">{message}</span>\n    </span>\n  </Tooltip>\n}\nfunction SongLink({data: {author, core_gd, cover_gd, id, suite, title, performances, ...rest}}) {\n  return <Link to={`/song/${id}`}>\n    \"{title}\"\n    {' '}\n    {suite && <span className=\"song__suite\">{suite} suite</span>}\n    {' '}\n    {(!core_gd || cover_gd) && <Author name={author} />}\n  </Link>\n}\n\nfunction SongsComponent({data: {allSongsCsv: {nodes: songs}, allTeasesCsv: {nodes: teases}}}) {\n  const songsClean = songs.filter(songData => songData.title && songData.title !== '[unknown]')\n  const groupedByPerformedVsTeased = groupBy(\n    (songData) => Boolean(songData.performances),\n    songsClean\n  )\n  const performedSongs = groupedByPerformedVsTeased[true]\n  const teasedSongs = groupedByPerformedVsTeased[false]\n\n  //const groupedBySuite = groupBy(\n  //  (songData) => songData.suite,\n  //  performedSongs\n  //)\n  //const songsAndSuites = [\n  //  ...groupedBySuite[''],\n  //  {title: 'Terrapin Suite',       sections: groupedBySuite['Terrapin']},\n  //  {title: 'Weather Report Suite', sections: groupedBySuite['Weather Report']},\n  //]\n\n  return <Layout className=\"songs\">\n    <SEO\n      title=\"JRAD — all songs played or teased\"\n      description=\"Almost-complete repertoire of Joe Russo's Almost Dead (JRAD) songs and teases\"\n    />\n    <p><a href=\"#songs__headline--teased\">Jump down to \"Teases Only\"</a></p>\n    <h1>Songs Performed / Jammed</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(performedSongs)\n        .map(songData =>\n          songData.sections\n          ? songData.title\n          : <li key={songData.id}>\n            <SongLink data={songData} />\n            <PerformanceCount perfIds={String(songData.performances).split(':')} />\n          </li>\n        )\n      }\n    </ul>\n    <h1 id=\"songs__headline--teased\">Songs Teased</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(teasedSongs)\n          .map(songData => {\n            const teaseRows = filter(propEq('song_id', songData.id))(teases)\n            const teasePerfIds = teaseRows.map((row) => row.performance_id)\n            return songData.sections\n                ? songData.title\n                : <li key={songData.id}>\n                  <SongLink data={songData} />\n                  <PerformanceCount text=\"teased\" perfIds={teasePerfIds} />\n                </li>\n          }\n      )}\n    </ul>\n  </Layout>\n}\n\nconst SongsPage = () => <StaticQuery\n  query={graphql`\n    query SongsPageData {\n      allSongsCsv { nodes {\n        author\n        core_gd\n        core_jrad\n        cover_gd\n        id\n        performances\n        suite\n        title\n      } }\n      allTeasesCsv { nodes {\n        id\n        by\n        notes\n        performance_id\n        song_id\n        song_name\n        within\n      } }\n    }\n  `}\n  render={data => <SongsComponent data={data} />}\n/>\nexport default SongsPage\n"],"sourceRoot":""}