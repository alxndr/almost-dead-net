{"version":3,"sources":["data.js","fetch.js","components/setlist.js","components/segue.js","release-stages.js","pages/error.js","pages/show.js","routes.js","components/shows_list.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["URL_BASE","SEGUES_URL","SETS_URL","SHOWS_URL","SONG_PERFORMANCES_URL","VENUES_URL","defaultPapaParseOptions","download","dynamicTyping","header","worker","getCsv","csvUrl","callback","papaParseOptions","Papa","parse","complete","response","data","errors","length","Error","Setlist","props","useState","performances","setPerformances","segues","setSegues","useEffect","global","console","log","isEncore","which","setlist","map","perf_id","id","performanceData","find","propEq","Number","segueData","key","song_name","Segue","type","cssClasses","classnames","className","STAGES","releaseStage","document","location","hostname","Show","params","match","shows","setShows","sets","setSets","venues","setVenues","showData","findShow","date","venue_id","venueData","findVenue","name","setlists","reduce","setData","split","concat","encores","anyPath","home","show","ShowEntry","to","routes","replace","ShowsList","undefined","Home","Sentry","dsn","App","href","src","alt","path","exact","component","target","rel","Boolean","window","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yHAAA,8KAAMA,EAAW,0HACXC,EAAU,UAAMD,EAAN,eACVE,EAAQ,UAAMF,EAAN,aACRG,EAAS,UAAMH,EAAN,cACTI,EAAqB,UAAMJ,EAAN,yBAErBK,GADS,UAAML,EAAN,cACC,UAAMA,EAAN,iB,+FCJVM,EAA0B,CAC9BC,UAAU,EACVC,eAAe,EACfC,QAAQ,EACRC,QAAQ,GAGH,SAASC,EAAOC,EAAQC,GAAkC,IAAxBC,EAAuB,uDAAJ,GAC1D,OAAOC,IAAKC,MAAMJ,EAAX,uCACFE,GACAR,GAFE,IAGLW,SAAU,SAACC,GAAc,IAChBC,EAAgBD,EAAhBC,KACP,GADuBD,EAAVE,OACFC,OACT,MAAM,IAAIC,MAAM,iBAAkB,CAACV,SAAQM,aAC7C,OAAOL,EAASM,S,mJCJP,SAASI,EAAQC,GAAQ,IAAD,EACGC,mBAAS,MADZ,mBAC9BC,EAD8B,KAChBC,EADgB,OAETF,mBAAS,MAFA,mBAE9BG,EAF8B,KAEtBC,EAFsB,KAOrC,OAJAC,qBAAU,WACRnB,YAAOP,IAAuBuB,GAC9BhB,YAAOV,IAAY4B,KAClB,IACEH,EAGAE,EAGAF,EAAaL,OAGbO,EAAOP,QAGZU,EAAOC,QAAQC,IAAI,CAACP,eAAcE,WAC3B,oCACJJ,EAAMU,SACH,qCAAWV,EAAMW,MAAQ,GAAKX,EAAMW,OACpC,kCAAQX,EAAMW,OAElB,4BACGX,EAAMY,QAAQC,KAAI,SAAAC,GACjB,IA7BiBC,EA6BXC,GA7BWD,EA6BuBD,EA7BhBG,YAAKC,YAAO,KAAMC,OAAOJ,MA6BAb,GAC3CkB,EAAYH,YAAKC,YAAO,eAAgBC,OAAOH,EAAgBD,KAAnDE,CAAyDb,GAE3E,OADAI,QAAQC,IAAI,CAACO,kBAAiBI,cACvB,wBAAIC,IAAKL,EAAgBD,IAC7BC,EAAgBM,UAChBF,GAAa,kBAAC,IAAUA,UAfxB,wDAHA,sDAHA,gDAHA,iD,kDCrBX,6EASe,SAASG,EAAT,GAAwB,IAARC,EAAO,EAAPA,KACvBC,EAAaC,IAAW,QAAS,CACrC,aAAuB,MAATF,EACd,gBAA0B,OAATA,IAGnB,OAAO,0BAAMG,UAAWF,GAAaD,K,kSCf1BI,EACH,SADGA,EAEN,MAFMA,EAGL,OAHKA,EAIF,UAGJ,SAASC,IACd,IAAKC,WAAaA,SAASC,WAAaD,SAASC,SAASC,SACxD,OAAOJ,EACT,OAAQE,SAASC,SAASC,UACxB,IAAK,kBACH,OAAOJ,EACT,IAAK,mBACH,OAAOA,EACT,IAAK,YACH,OAAOA,EACT,QACE,OAAOA,G,MCdE,SAAS9B,IACtB,OAAO,6BAAS6B,UAAU,aACxB,6C,0DCIW,SAASM,EAAT,GAAkC,IAAXC,EAAU,EAAlBC,MAAQD,OAAU,EACpBjC,mBAAS,MADW,mBACvCmC,EADuC,KAChCC,EADgC,OAEtBpC,mBAAS,MAFa,mBAEvCqC,EAFuC,KAEjCC,EAFiC,OAGlBtC,mBAAS,MAHS,mBAGvCuC,EAHuC,KAG/BC,EAH+B,KAS9C,GALAnC,qBAAU,WACRnB,YAAOR,IAAW0D,GAClBlD,YAAOT,IAAU6D,GACjBpD,YAAON,IAAY4D,KAClB,KACEL,EACH,OAAO,+CAET,IAAKI,EACH,OAAO,gDAET,IAAKF,EACH,OAAO,8CAET,IAAKF,EAAMvC,OACT,OAAO,uDAET,IAAK2C,EAAO3C,OACV,OAAO,wDAET,IAAKyC,EAAKzC,OACR,OAAO,sDAET,IACM6C,EADWzB,YAAKC,YAAO,KAAMC,OAAOe,EAAOnB,KAChC4B,CAASP,GAC1B,IAAKM,EACH,OAAO,2DA9BqC,IAgCvCE,EAAkBF,EAAlBE,KAAMC,EAAYH,EAAZG,SAEPC,EADY7B,YAAKC,YAAO,KAAMC,OAAO0B,IACzBE,CAAUP,GAC5B,IAAKM,EACH,OAAO,4DApCqC,IAsCvCE,EAAkBF,EAAlBE,KAAMjB,EAAYe,EAAZf,SACPkB,EAAW,CAAC,EAAG,EAAG,GAAGC,QAAO,SAACD,EAAUtC,GAC3C,IAAK+B,EAAS,MAAD,OAAO/B,IAClB,OAAOsC,EAET,IAAME,EAAUlC,YAAKC,YAAO,KAAMC,OAAOuB,EAAS,MAAD,OAAO/B,MAAxCM,CAAoDqB,GAC9D1B,EAAqC,kBAApBuC,EAAQvC,QAC3B,CAACuC,EAAQvC,SACTuC,EAAQvC,QAAQwC,MAAM,KAC1B,OAAOH,EAASI,OAAO,CAAC,kBAAC,IAAD,CAAS3C,UAAU,EAAOC,MAAOA,EAAOU,IAAK8B,EAAQpC,GAAIH,QAASA,QACzF,IACG0C,EAAU,CAAC,EAAG,GAAGJ,QAAO,SAACI,EAAS3C,GACtC,IAAK+B,EAAS,SAAD,OAAU/B,IACrB,OAAO2C,EAET,IAAMH,EAAUlC,YAAKC,YAAO,KAAMC,OAAOuB,EAAS,SAAD,OAAU/B,MAA3CM,CAAuDqB,GACjE1B,EAAqC,kBAApBuC,EAAQvC,QAC3B,CAACuC,EAAQvC,SACTuC,EAAQvC,QAAQwC,MAAM,KAC1B,OAAOE,EAAQD,OAAO,CAAC,kBAAC,IAAD,CAAS3C,UAAU,EAAMC,MAAOA,EAAOU,IAAK8B,EAAQpC,GAAIH,QAASA,QACvF,IACH,OAAO,6BAASe,UAAU,YACxB,wBAAIA,UAAU,uBACZ,0BAAMA,UAAU,+BAA+Be,EAAS3B,IACxD,0BAAMY,UAAU,6BAA6BiB,GAC7C,0BAAMjB,UAAU,8BAA8BqB,EAA9C,KAAsDjB,IAEvDkB,EAASpD,OACNoD,EACA,oDAEHK,EAAQzD,OACLyD,EACA,2CCjFD,IAIQ,GACbC,QALkB,SAMlBC,KALe,IAMfC,KALe,a,MCQjB,SAASC,EAAT,GAAgC,IAAZd,EAAW,EAAXA,KAAM7B,EAAK,EAALA,GACxB,OAAO,4BACL,kBAAC,IAAD,CAAM4C,GAAIC,EAAOH,KAAKI,QAAQ,MAAO9C,IAAM6B,IAMhC,SAASkB,IAAa,IAAD,EACR7D,wBAHd8D,GAEsB,mBAC3B3B,EAD2B,KACpBC,EADoB,KAMlC,OAJA/B,qBAAU,WACRnB,YAAOR,IAAW0D,KACjB,IACH7B,QAAQC,IAAI2B,QAPA2B,IAQR3B,EACK,yCAEF,wBAAIT,UAAU,aAClBS,EAAMvC,OACHuC,EAAMvB,KAAI,SAAA4C,GAAI,OAAI,kBAACC,EAAD,CAAWrC,IAAKoC,EAAK1C,GAAI6B,KAAMa,EAAKb,KAAM7B,GAAI0C,EAAK1C,QACrE,yD,MCxBO,SAASiD,EAAKhE,GAC3B,OAAO,6BAAS2B,UAAU,YACxB,6CACA,kBAACmC,EAAD,MACA,6BACA,mDACA,4BACE,oDACA,sCACA,iD,MCLNG,IAAY,CAACC,IAAK,8EAsBHC,MApBf,WACE,OAAO,oCACL,yBAAKxC,UAAS,cAASE,MACrB,uBAAGd,GAAG,OAAOqD,KAAK,KAAI,yBAAKC,IAAI,kCAAkCC,IAAI,0BACrE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMX,EAAOJ,KAAMgB,OAAK,EAACC,UAAWT,IAC3C,kBAAC,IAAD,CAAOO,KAAMX,EAAOH,KAAYgB,UAAWxC,IAC3C,kBAAC,IAAD,CAAOsC,KAAMX,EAAOL,QAAYkB,UAAW3E,OAIjD,4BAAQiB,GAAG,eAAX,+BAEE,6BACA,uBAAGqD,KAAK,oCAAoCM,OAAO,OAAOC,IAAI,uBAA9D,gCCfcC,QACW,cAA7BC,OAAO9C,SAASC,UAEe,UAA7B6C,OAAO9C,SAASC,UAEhB6C,OAAO9C,SAASC,SAASG,MACvB,2DCZN2C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlD,SAASmD,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,c","file":"static/js/main.e7489fb1.chunk.js","sourcesContent":["const URL_BASE = 'https://gist.githubusercontent.com/alxndr/5f64cf477d5202c004856772ad2222db/raw/012c70a946d7446eccb2e24375813b5bb4aa9ee9'\nconst SEGUES_URL = `${URL_BASE}/segues.csv`\nconst SETS_URL = `${URL_BASE}/sets.csv`\nconst SHOWS_URL = `${URL_BASE}/shows.csv`\nconst SONG_PERFORMANCES_URL = `${URL_BASE}/songperformances.csv`\nconst SONGS_URL = `${URL_BASE}/songs.csv`\nconst VENUES_URL = `${URL_BASE}/venues.csv`\n\nexport {\n  SEGUES_URL,\n  SETS_URL,\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  VENUES_URL,\n}\n","import Papa from 'papaparse'\n\nconst defaultPapaParseOptions = {\n  download: true,\n  dynamicTyping: true, // TODO remove this... gonna do some conversions ourselves though\n  header: true,\n  worker: true,\n}\n\nexport function getCsv(csvUrl, callback, papaParseOptions = {}) {\n  return Papa.parse(csvUrl, {\n    ...papaParseOptions,\n    ...defaultPapaParseOptions,\n    complete: (response) => {\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('Error fetching', {csvUrl, response})\n      return callback(data)\n    },\n  })\n}\n","import React, {useEffect, useState} from 'react'\nimport {find, propEq} from 'ramda'\n\nimport {getCsv} from '../fetch'\nimport Segue from './segue'\n\nimport {\n  SEGUES_URL,\n  SONG_PERFORMANCES_URL,\n} from '../data'\n\nconst findByIntegerId = (id) => find(propEq('id', Number(id)))\n\nexport default function Setlist(props) {\n  const [performances, setPerformances] = useState(null)\n  const [segues, setSegues] = useState(null)\n  useEffect(() => {\n    getCsv(SONG_PERFORMANCES_URL, setPerformances)\n    getCsv(SEGUES_URL, setSegues)\n  }, [])\n  if (!performances) {\n    return <p>Loading sets...</p>\n  }\n  if (!segues) {\n    return <p>Loading segues...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  global.console.log({performances, segues})\n  return <>\n    {props.isEncore\n      ? <p>Encore {props.which > 1 && props.which}</p>\n      : <p>Set {props.which}</p>\n    }\n    <ol>\n      {props.setlist.map(perf_id => {\n        const performanceData = findByIntegerId(perf_id)(performances)\n        const segueData = find(propEq('from_perf_id', Number(performanceData.id)))(segues)\n        console.log({performanceData, segueData})\n        return <li key={performanceData.id}>\n          {performanceData.song_name}\n          {segueData && <Segue {...segueData} />}\n          </li>\n      })}\n    </ol>\n  </>\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({type}) {\n  const cssClasses = classnames('segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... â‰¯\n  return <span className={cssClasses}>{type}</span>\n}\n","export const STAGES = {\n  CANARY: 'canary',\n  DEV: 'dev',\n  PROD: 'prod',\n  UNKNOWN: 'unknown',\n}\n\nexport function releaseStage() {\n  if (!document || !document.location || !document.location.hostname)\n    return STAGES.UNKNOWN\n  switch (document.location.hostname) {\n    case 'almost-dead.net':\n      return STAGES.PROD\n    case 'alxndr.github.io':\n      return STAGES.CANARY\n    case 'localhost':\n      return STAGES.DEV\n    default:\n      return STAGES.UNKNOWN\n  }\n}\n\n","import React from 'react'\n\nimport './error.css'\n\nexport default function Error() {\n  return <section className=\"errorpage\">\n    <h1>Uh oh! Error</h1>\n  </section>\n}\n","import React, {useEffect, useState} from 'react'\nimport {find, propEq} from 'ramda'\n\nimport {SETS_URL, SHOWS_URL, VENUES_URL} from '../data'\nimport {getCsv} from '../fetch'\n\nimport Setlist from '../components/setlist'\n\nimport './show.css'\n\nexport default function Show({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [venues, setVenues] = useState(null)\n  useEffect(() => {\n    getCsv(SHOWS_URL, setShows)\n    getCsv(SETS_URL, setSets)\n    getCsv(VENUES_URL, setVenues)\n  }, [])\n  if (!shows) {\n    return <p>Loading shows...</p>\n  }\n  if (!venues) {\n    return <p>Loading venues...</p>\n  }\n  if (!sets) {\n    return <p>Loading sets...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!venues.length) {\n    return <p>Uh oh, no venues found...</p>\n  }\n  if (!sets.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  const findShow = find(propEq('id', Number(params.id)))\n  const showData = findShow(shows)\n  if (!showData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const {date, venue_id} = showData\n  const findVenue = find(propEq('id', Number(venue_id)))\n  const venueData = findVenue(venues)\n  if (!venueData) {\n    return <p>Uh oh, no venue data found...</p>\n  }\n  const {name, location} = venueData\n  const setlists = [1, 2, 3].reduce((setlists, which) => {\n    if (!showData[`set${which}`]) {\n      return setlists\n    }\n    const setData = find(propEq('id', Number(showData[`set${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return setlists.concat([<Setlist isEncore={false} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  const encores = [1, 2].reduce((encores, which) => {\n    if (!showData[`encore${which}`]) {\n      return encores\n    }\n    const setData = find(propEq('id', Number(showData[`encore${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return encores.concat([<Setlist isEncore={true} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  return <section className=\"showpage\">\n    <h1 className=\"showpage__pagetitle\">\n      <span className=\"showpage__pagetitle--number\">{showData.id}</span>\n      <span className=\"showpage__pagetitle--date\">{date}</span>\n      <span className=\"showpage__pagetitle--venue\">{name}, {location}</span>\n    </h1>\n    {setlists.length\n      ? setlists\n      : <p>Uh oh, no sets found.</p>\n    }\n    {encores.length\n      ? encores\n      : <p>(no encore)</p>\n    }\n  </section>\n}\n","export const anyPath = `/:path`\nexport const home = `/`\nexport const show = `/show/:id`\n\nexport default {\n  anyPath,\n  home,\n  show,\n}\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {getCsv} from '../fetch'\nimport routes from '../routes';\n\nimport {SHOWS_URL} from '../data'\n\nimport './shows_list.css'\n\nfunction ShowEntry({date, id}) {\n  return <li>\n    <Link to={routes.show.replace(':id', id)}>{date}</Link>\n  </li>\n}\n\nconst UNDEF = undefined\n\nexport default function ShowsList() {\n  const [shows, setShows] = useState(UNDEF)\n  useEffect(() => {\n    getCsv(SHOWS_URL, setShows)\n  }, [])\n  console.log(shows)\n  if (shows === UNDEF) {\n    return <p>Loading...</p>\n  }\n  return <ol className=\"showslist\">\n    {shows.length\n      ? shows.map(show => <ShowEntry key={show.id} date={show.date} id={show.id} />)\n      : <li>Uh oh, no shows found...</li>\n    }\n  </ol>\n}\n","import React from 'react'\n\nimport ShowsList from '../components/shows_list'\n\nimport './home.css'\n\nexport default function Home(props) {\n  return <section className=\"homepage\">\n    <h1>JRAD Setlists</h1>\n    <ShowsList />\n    <hr />\n    <p>Coming eventually...</p>\n    <ul>\n      <li>links to Archive.org</li>\n      <li>videos</li>\n      <li>tease notations</li>\n    </ul>\n    </section>\n}\n","import * as Sentry from '@sentry/browser';\nimport React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport {releaseStage} from './release-stages'\nimport {Error, Home, Show} from './pages'\nimport routes from './routes'\n\nimport './App.css'\n\nSentry.init({dsn: \"https://174349d7133f4877ba279f589bf54642@o412799.ingest.sentry.io/5293476\"});\n\nfunction App() {\n  return <>\n    <div className={`App ${releaseStage()}`}>\n      <a id=\"logo\" href=\"#\"><img src=\"https://i.imgur.com/tvtgYVY.png\" alt=\"Good Ol' Almost Dead\" /></a>\n      <HashRouter>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.show}       component={Show} />\n          <Route path={routes.anyPath}    component={Error} />\n        </Switch>\n      </HashRouter>\n    </div>\n    <footer id=\"site-footer\">\n      Contributions / corrections:\n      <br />\n      <a href=\"https://twitter.com/AlmostDeadNet\" target=\"_new\" rel=\"noopener noreferrer\">@AlmostDeadNet on Twitter</a>\n    </footer>\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}