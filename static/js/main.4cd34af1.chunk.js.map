{"version":3,"sources":["release-stages.js","pages/error.js","fetch.js","routes.js","data.js","components/shows_list.js","pages/home.js","components/segue.js","components/setlist.js","components/show_paginator.js","pages/show.js","pages/song.js","App.js","serviceWorker.js","index.js"],"names":["STAGES","releaseStage","document","location","hostname","Error","className","defaultPapaParseOptions","download","dynamicTyping","header","worker","getCsv","csvUrl","callback","papaParseOptions","Papa","parse","complete","response","data","errors","length","url","route","params","replace","id","anyPath","home","show","song","URL_BASE","SEGUES_URL","SETS_URL","SHOWS_URL","SONG_PERFORMANCES_URL","SONGS_URL","VENUES_URL","hasDate","filter","prop","ShowEntry","date","value","to","routes","ShowsList","useState","undefined","shows","setShows","useEffect","showData","map","key","Home","props","Segue","type","cssClasses","classnames","PerformanceNote","notes","title","trigger","aria-label","role","Setlist","performances","setPerformances","segues","setSegues","isEncore","which","setlist","perf_id","performanceData","find","propEq","Number","segueData","song_id","song_name","ShowPaginator","prev","next","Show","match","sets","setSets","venues","setVenues","nextShow","prevShow","venue_id","venueData","findVenue","text","name","setlists","reduce","setData","split","concat","encores","flatMap","word","startsWith","href","rel","target","dompurify","sanitize","SET_MAPPING","set1","set2","set3","encore1","encore2","Song","songs","setSongs","songData","performancesData","author","authorInfo","suite","show_id","whichSet","Object","entries","col_name","set_id","Sentry","dsn","environment","App","src","alt","path","exact","component","Boolean","window","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cd34af1.chunk.js","sourcesContent":["export const STAGES = {\n  CANARY: 'canary',\n  DEV: 'dev',\n  PROD: 'prod',\n  UNKNOWN: 'unknown',\n}\n\nexport function releaseStage() {\n  if (!document || !document.location || !document.location.hostname)\n    return STAGES.UNKNOWN\n  switch (document.location.hostname) {\n    case 'almost-dead.net':\n      return STAGES.PROD\n    case 'alxndr.github.io':\n      return STAGES.CANARY\n    case 'localhost':\n      return STAGES.DEV\n    default:\n      return STAGES.UNKNOWN\n  }\n}\n\n","import React from 'react'\n\nimport './error.css'\n\nexport default function Error() {\n  return <section className=\"errorpage\">\n    <h1>Uh oh! Error</h1>\n  </section>\n}\n","import Papa from 'papaparse'\n\nconst defaultPapaParseOptions = {\n  download: true,\n  dynamicTyping: true, // TODO remove this... gonna do some conversions ourselves though\n  header: true,\n  worker: true,\n}\n\nexport function getCsv(csvUrl, callback, papaParseOptions = {}) {\n  return Papa.parse(csvUrl, {\n    ...papaParseOptions,\n    ...defaultPapaParseOptions,\n    complete: (response) => {\n      if (!response)\n        throw new Error('No response when fetching', {csvUrl})\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('Error fetching', {csvUrl, response})\n      return callback(data)\n    },\n  })\n}\n","export const anyPath = `/:path`\nexport const home = `/`\nexport const show = `/show/:id`\nexport const song = `/song/:id`\n\nexport function url(route, params) {\n  // TODO support more than just {id: #}\n  return route.replace(':id', params.id)\n}\n\nexport default {\n  anyPath,\n  home,\n  show,\n  song,\n}\n","const URL_BASE = 'https://gist.githubusercontent.com/alxndr/5f64cf477d5202c004856772ad2222db/raw/0fdf98caed1637d7f11cb16febe576a58699afbb'\nconst SEGUES_URL = `${URL_BASE}/segues.csv`\nconst SETS_URL = `${URL_BASE}/sets.csv`\nconst SHOWS_URL = `${URL_BASE}/shows.csv`\nconst SONG_PERFORMANCES_URL = `${URL_BASE}/songperformances.csv`\nconst SONGS_URL = `${URL_BASE}/songs.csv`\nconst VENUES_URL = `${URL_BASE}/venues.csv`\n\nexport {\n  SEGUES_URL,\n  SETS_URL,\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  VENUES_URL,\n}\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { filter, prop } from 'ramda'\n\nimport {getCsv} from '../fetch'\nimport routes from '../routes';\n\nimport {SHOWS_URL} from '../data'\n\nimport './shows_list.css'\n\nconst hasDate = filter(prop('date'))\n\nfunction ShowEntry({date, id}) {\n  return <li value={id}>\n    <Link to={routes.show.replace(':id', id)}>{date}</Link>\n  </li>\n}\n\nconst UNDEF = undefined\n\nexport default function ShowsList() {\n  const [shows, setShows] = useState(UNDEF)\n  useEffect(() => {\n    getCsv(SHOWS_URL, (showData) => setShows(hasDate(showData)))\n  }, [])\n  if (shows === UNDEF) {\n    return <p>Loading...</p>\n  }\n  return <ol className=\"showslist\">\n    {shows.length\n      ? shows.map(show => <ShowEntry key={show.id} date={show.date} id={show.id} />)\n      : <li>Uh oh, no shows found...</li>\n    }\n  </ol>\n}\n","import React from 'react'\n\nimport ShowsList from '../components/shows_list'\n\nimport './home.css'\n\nexport default function Home(props) {\n  return <section className=\"homepage\">\n    <h1>JRAD Setlists</h1>\n    <ShowsList />\n    <hr />\n    <p>Coming eventually...</p>\n    <ul>\n      <li>links to Archive.org & Youtube</li>\n      <li>tease / feint notations</li>\n    </ul>\n    </section>\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({type}) {\n  const cssClasses = classnames('segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {Tooltip} from 'react-tippy'\nimport {find, propEq} from 'ramda'\n\nimport {\n  SEGUES_URL,\n  SONG_PERFORMANCES_URL,\n} from '../data'\nimport {getCsv} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport Segue from './segue'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nfunction PerformanceNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n\nconst findByIntegerId = (id) => find(propEq('id', Number(id)))\n\nexport default function Setlist(props) {\n  const [performances, setPerformances] = useState(null)\n  const [segues, setSegues] = useState(null)\n  useEffect(() => {\n    getCsv(SONG_PERFORMANCES_URL, setPerformances)\n    getCsv(SEGUES_URL, setSegues)\n  }, [])\n  if (!(performances && segues)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  return <>\n    {props.isEncore\n      ? <p>Encore {props.which > 1 && props.which}</p>\n      : <p>Set {props.which}</p>\n    }\n    <ol>\n      {props.setlist.map(perf_id => {\n        const performanceData = findByIntegerId(perf_id)(performances)\n        const segueData = find(propEq('from_perf_id', Number(performanceData.id)))(segues)\n        return <li key={performanceData.id}>\n          <Link to={url(routes.song, {id: performanceData.song_id})}>\n            {performanceData.song_name}\n          </Link>\n          {performanceData.notes && <PerformanceNote notes={performanceData.notes} />}\n          {segueData && <Segue {...segueData} />}\n        </li>\n      })}\n    </ol>\n  </>\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport routes, {url} from '../routes';\n\nimport './show_paginator.css'\n\nexport default function ShowPaginator({prev, next}) {\n  if (!prev && !next) {\n    return false\n  }\n  return <ul className=\"showpaginator\">\n    {prev && <li className=\"showpaginator__prev\">\n      <Link to={url(routes.show, {id: prev.id})}>\n        Previous show: {prev.date}\n      </Link>\n    </li>}\n    {next && <li className=\"showpaginator__next\">\n      <Link to={url(routes.show, {id: next.id})}>\n        Next show: {next.date}\n      </Link>\n    </li>}\n  </ul>\n}\n","import React, {useEffect, useState} from 'react'\nimport {find, propEq} from 'ramda'\nimport dompurify from 'dompurify'\n\nimport {SETS_URL, SHOWS_URL, VENUES_URL} from '../data'\nimport {getCsv} from '../fetch'\n\nimport Setlist from '../components/setlist'\nimport ShowPaginator from '../components/show_paginator'\n\nimport './show.css'\n\nfunction linkShowNotes(text) {\n  return <>{text.split(/\\s/g).flatMap(word => word.startsWith('https://')\n    ? [<a href={word} rel=\"noopener noreferrer\" target=\"_blank\">{dompurify.sanitize(word)}</a>, ' ']\n    : [dompurify.sanitize(word), ' '])\n    }\n  </>\n}\n\nexport default function Show({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [venues, setVenues] = useState(null)\n  useEffect(() => {\n    getCsv(SHOWS_URL, setShows)\n    getCsv(SETS_URL, setSets)\n    getCsv(VENUES_URL, setVenues)\n  }, [])\n  if (!shows) {\n    return <p>Loading shows...</p>\n  }\n  if (!venues) {\n    return <p>Loading venues...</p>\n  }\n  if (!sets) {\n    return <p>Loading sets...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!venues.length) {\n    return <p>Uh oh, no venues found...</p>\n  }\n  if (!sets.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  const showData = find(propEq('id', Number(params.id)))(shows)\n  if (!showData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const nextShow = find(propEq('id', Number(params.id) + 1))(shows)\n  const prevShow = find(propEq('id', Number(params.id) - 1))(shows)\n  const {date, notes, venue_id} = showData\n  const findVenue = find(propEq('id', Number(venue_id)))\n  const venueData = findVenue(venues)\n  if (!venueData) {\n    return <p>Uh oh, no venue data found...</p>\n  }\n  const {name, location} = venueData\n  const setlists = [1, 2, 3].reduce((setlists, which) => {\n    if (!showData[`set${which}`]) {\n      return setlists\n    }\n    const setData = find(propEq('id', Number(showData[`set${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return setlists.concat([<Setlist isEncore={false} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  const encores = [1, 2].reduce((encores, which) => {\n    if (!showData[`encore${which}`]) {\n      return encores\n    }\n    const setData = find(propEq('id', Number(showData[`encore${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return encores.concat([<Setlist isEncore={true} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  return <div className=\"showpage\">\n    <section>\n      <h1 className=\"showpage__pagetitle\">\n        <span className=\"showpage__pagetitle--date\">{date}</span>\n        <span className=\"showpage__pagetitle--venue\">{name}, {location}</span>\n        <span className=\"showpage__pagetitle--number\">show #{showData.id}</span>\n      </h1>\n      {notes && <div className=\"showpage__notes\">{linkShowNotes(notes)}</div>}\n      {setlists.length\n        ? setlists\n        : <p>Uh oh, no sets found.</p>\n      }\n      {encores.length\n        ? encores\n        : <p>(no encore)</p>\n      }\n    </section>\n    <ShowPaginator prev={prevShow} next={nextShow} />\n  </div>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {filter, find, propEq} from 'ramda'\n\nimport {\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n} from '../data'\nimport {getCsv} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport './song.css'\n\nfunction authorInfo(author = null) {\n  switch (author) {\n    case null:\n      return <p>(originally by the Grateful Dead)</p>\n    case 'traditional':\n      return <p>(traditional)</p>\n    default:\n      return <p>by {author}</p>\n  }\n}\n\nconst SET_MAPPING = { // 'show table column name' to 'human readable set name'\n  set1: 'set 1',\n  set2: 'set 2',\n  set3: 'set 3',\n  encore1: 'encore',\n  encore2: 'double encore',\n}\n\nexport default function Song({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [songs, setSongs] = useState(null)\n  const [performances, setPerformances] = useState(null)\n  useEffect(() => {\n    getCsv(SHOWS_URL, setShows)\n    getCsv(SONGS_URL, setSongs)\n    getCsv(SONG_PERFORMANCES_URL, setPerformances)\n  }, [])\n  if (!(songs && performances && shows)) {\n    return <p>Loading...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no performances found...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  const songData = find(propEq('id', Number(params.id)))(songs)\n  if (!songData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const performancesData = filter(propEq('song_id', Number(songData.id)))(performances)\n  return <section className=\"songpage\">\n    <h1 className=\"songpage__name\">{songData.title}</h1>\n    <div className=\"songpage__info\">\n      {authorInfo(songData.author)}\n      {songData.suite && <p>Part of the {songData.suite} suite</p>}\n    </div>\n    <div className=\"songpage__performances\">\n      {performancesData && performancesData.length\n        ? <>\n          <h2>Performances:</h2>\n          <ul>\n            {performancesData.map(performanceData => {\n              const showData = find(propEq('id', Number(performanceData.show_id)))(shows)\n              const whichSet = // ugh\n                Object.entries(SET_MAPPING)\n                .find(([col_name, readable_name]) =>\n                  showData[col_name] === performanceData.set_id\n                )[1]\n              return <li key={performanceData.id}>\n                <Link to={url(routes.show, {id: showData.id})}>\n                  {showData.date}\n                </Link> {whichSet}\n              </li>\n            })}\n          </ul>\n        </>\n        : <li>No (full) performances noted yet.</li>\n      }\n    </div>\n  </section>\n}\n","import * as Sentry from '@sentry/browser';\nimport React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport {releaseStage} from './release-stages'\nimport {Error, Home, Show, Song} from './pages'\nimport routes from './routes'\n\nimport './App.css'\n\nSentry.init({\n  dsn: \"https://174349d7133f4877ba279f589bf54642@o412799.ingest.sentry.io/5293476\",\n  environment: releaseStage()\n});\n\nfunction App() {\n  return <>\n    <div className={`App ${releaseStage()}`}>\n      <a id=\"logo\" href=\"#\"><img src=\"https://i.imgur.com/tvtgYVY.png\" alt=\"Good Ol' Almost Dead\" /></a>\n      <HashRouter>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.show}       component={Show} />\n          <Route path={routes.song}       component={Song} />\n          <Route path={routes.anyPath}    component={Error} />\n        </Switch>\n      </HashRouter>\n    </div>\n    <footer id=\"site-footer\">\n      Contributions / corrections:\n      <br />\n      <a href=\"https://twitter.com/AlmostDeadNet\" target=\"_new\" rel=\"noopener noreferrer\">@AlmostDeadNet on Twitter</a>\n    </footer>\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}