{"version":3,"sources":["webpack://almost-dead-net/./node_modules/classnames/index.js","webpack://almost-dead-net/./src/components/header.js","webpack://almost-dead-net/./src/components/layout.js","webpack://almost-dead-net/./src/components/link-with-previous-url.js","webpack://almost-dead-net/./src/helpers/string_helpers.js","webpack://almost-dead-net/./src/templates/song.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Header","className","to","title","src","alt","defaultProps","children","id","href","state","rest","Location","location","previousUrl","pluralize","number","word","SET_MAPPING","soundcheck","set1","set2","set3","encore1","encore2","ListItem","date","performancesOnDate","performanceData","showData","variation","whichSet","otherPerformances","url","classnames","highlight","endsWith","Song","data","song","songsCsv","allSets","allSetsCsv","nodes","allShows","allShowsCsv","allSongPerformances","allSongperformancesCsv","teases","allTeasesCsv","onlyThisSongsPerformanceIds","performances","split","Error","performancesGroupedByDate","filter","songPerformance","includes","map","performanceIdStr","setData","find","set","setlist","show","console","warn","entries","col_name","reduce","acc","elem","performancesSorted","sort","dateStringA","dateStringB","dateA","Date","dateB","performancesComponent","teasesComponent","teaseData","propEq","performance_id","within","description","author","authorInfo","suite"],"mappings":"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","file":"component---src-templates-song-js-c47444d2c3efa36628c5.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = () => (\n  <header>\n    <Link className=\"App__banner\" to=\"/\" title=\"Almost-Dead.net home page\">\n      <img src=\"https://i.imgur.com/q5cBEHG.png\" alt=\"Almost-Dead.net banner\" />\n    </Link>\n  </header>\n)\n\nHeader.propTypes = {\n}\n\nHeader.defaultProps = {\n}\n\nexport default Header\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"gatsby\"\n\nimport Header from './header'\n\nimport './reset.css'\nimport './layout.css'\n\nconst Layout = ({children, className = ''}) => {\n  return (\n    <div className={`layout ${className}`}>\n\n      <Header />\n\n      <main>\n        {children}\n      </main>\n\n      <footer id=\"site-footer\" className=\"footer\">\n        <Link className=\"footer__logo\" id=\"logo-bottom\" to=\"/\" title=\"return to home page\">\n          <img src=\"https://i.imgur.com/q5cBEHG.png\" alt=\"Almost-Dead.net\" />\n        </Link>\n        <Link className=\"footer__link-about\" to=\"/about\" title=\"About the Site\">\n          About\n        </Link>\n        <a href=\"https://lot.almost-dead.net\" className=\"footer__logo-lot\" title=\"JRAD Forum â€” The Lot\">\n          The Lot (forum)\n        </a>\n      </footer>\n\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport {Location} from '@reach/router'\nimport {Link} from 'gatsby'\n\nconst LinkWithPrevUrl = ({children, state, ...rest}) => (\n  <Location>\n    {({location}) =>\n      <Link {...rest} state={{previousUrl: location.href, ...state}}>\n        {children}\n      </Link>\n    }\n  </Location>\n)\n\nexport default LinkWithPrevUrl\n","/* Appends an \"s\" to the end of `word` if warranted by the value of `number` */\nexport function pluralize(number, word) {\n  return `${number} ${word}${number !== 1 ? 's' : ''}`\n}\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport {find, propEq} from 'ramda'\nimport classnames from 'classnames'\n\nimport {pluralize} from '../helpers/string_helpers'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Link from '../components/link-with-previous-url'\n\nimport './song.css'\n\nfunction authorInfo(author = null) {\n  switch (author) {\n    case null:\n    case '':\n      return false\n    case 'traditional':\n      return <p>(traditional)</p>\n    default:\n      return <p>by {author}</p>\n  }\n}\n\nconst SET_MAPPING = { // 'show table column name' to 'human readable set name'\n  soundcheck: 'soundcheck',\n  set1: 'set 1',\n  set2: 'set 2',\n  set3: 'set 3',\n  encore1: 'encore',\n  encore2: 'double encore',\n}\n\nfunction ListItem({date, performancesOnDate, previousUrl}) {\n  const [{performanceData, showData, variation, whichSet}, ...otherPerformances] = performancesOnDate\n  const url = `/show/${showData.id}`\n  return <li key={performanceData.id} className={classnames({highlight: previousUrl?.endsWith(url)})}>\n    <Link to={url}>\n      {date}\n      {' '}\n      {variation} in {whichSet}\n      {otherPerformances.length\n        ? otherPerformances[0].whichSet !== whichSet\n          ? ` & ${otherPerformances[0].whichSet}`\n          : 'â€¦'\n        : ''\n      }\n    </Link>\n  </li>\n}\n\nexport const query = graphql`\n  query SongTemplate($songId: String!) {\n    songsCsv(id: {eq: $songId}) {\n      id\n      author\n      suite\n      title\n      performances\n    }\n    allSetsCsv { nodes {\n      id\n      setlist\n    } }\n    allShowsCsv { nodes {\n      id\n      date\n      encore1\n      encore2\n      set1\n      set2\n      set3\n      soundcheck\n    } }\n    allSongperformancesCsv { nodes {\n      id\n    } }\n    allTeasesCsv(filter: {song_id: {eq: $songId}}) { nodes {\n      id\n      performance_id\n      within\n    } }\n  }\n`\n\nexport default function Song({data: {\n  songsCsv: song,\n  allSetsCsv: {nodes: allSets},\n  allShowsCsv: {nodes: allShows},\n  allSongperformancesCsv: {nodes: allSongPerformances},\n  allTeasesCsv: {nodes: teases},\n}, location}) {\n  if (!song) {\n    return <p>Uh oh, no song data found...</p>\n  }\n  const onlyThisSongsPerformanceIds = song.performances.split(':')\n  if (!allSongPerformances.length) {\n    throw new Error('No data for allSongPerformances')\n  }\n  if (!allShows.length) {\n    throw new Error('No data for allShows')\n  }\n  if (!allSets.length) {\n    throw new Error('No data for allSets')\n  }\n  const performancesGroupedByDate = allSongPerformances\n    .filter((songPerformance) => onlyThisSongsPerformanceIds.includes(songPerformance.id))\n    .map((performanceData) => {\n      const performanceIdStr = performanceData.id.toString()\n      const setData = find((set) =>\n        set.setlist && set.setlist.toString().split(':').includes(performanceIdStr)\n      )(allSets)\n      const showData = find((show) => [\n        show.soundcheck,\n        show.set1,\n        show.set2,\n        show.set3,\n        show.encore1,\n        show.encore2\n      ].includes(setData.id))(allShows)\n      if (!showData) {\n        console.warn('Missing showData...', {song, performanceData, setData})\n      }\n      const whichSet = Object.entries(SET_MAPPING)\n        .find(([col_name, readable_name]) => showData[col_name] === setData.id)[1]\n      const variation = performanceData.variation\n        ? `(${performanceData.variation})`\n        : false\n      return {performanceData, showData, variation, whichSet}\n    })\n    .filter((data) => data && data.showData)\n    .reduce((acc, elem) => {\n      if (!acc[elem.showData.date])\n        acc[elem.showData.date] = []\n      return {\n        ...acc,\n        [elem.showData.date]: [\n          ...acc[elem.showData.date],\n          elem,\n        ],\n      }\n    }, {})\n  const performancesSorted = Object.entries(performancesGroupedByDate)\n    .sort(([dateStringA], [dateStringB]) => {\n      const dateA = new Date(dateStringA.split('/'))\n      const dateB = new Date(dateStringB.split('/'))\n      if (dateA > dateB) {\n        return -1\n      }\n      if (dateA < dateB) {\n        return 1\n      }\n      return 0\n    })\n  const performances = performancesSorted\n    .map(([date, performancesOnDate]) =>\n      <ListItem\n        date={date}\n        performancesOnDate={performancesOnDate}\n        previousUrl={location?.state?.previousUrl}\n      />)\n  const performancesComponent = performancesSorted.length > 0\n    ?  <>\n      <h2>Performed at {pluralize(performancesSorted.length, 'Show')}</h2>\n      <ul>\n        {performances}\n      </ul>\n    </>\n    : false\n\n  const teasesComponent = teases.length > 0\n    ? <>\n      <h2>Teases</h2>\n      <ul>\n        {teases.map(teaseData => {\n          const performanceData = find(propEq('id', teaseData.performance_id))(allSongPerformances)\n          if (!(performanceData?.id)) {\n            return false\n          }\n          const setData = find((set) => set.setlist.toString().split(':').includes(performanceData.id.toString()))(allSets)\n          const showData = find((show) => [show.soundcheck, show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(allShows)\n          const url = `/show/${showData.id}`\n          return <li key={teaseData.id} className={classnames({highlight: location?.state?.previousUrl?.endsWith(url)})}>\n            <Link to={url}>{showData.date} within {teaseData.within} {performanceData.variation && `(${performanceData.variation})`}</Link>\n          </li>\n        })}\n      </ul>\n    </>\n    : false\n\n  return <Layout className=\"songpage\">\n    <SEO\n      title={`\"${song.title}\" performed or teased by JRAD`}\n      description={`List of each time Joe Russo's Almost Dead has performed or teased the song \"${song.title}\" ${song.author && song.author !== 'traditional' ? `by ${song.author}` : ''}`}\n    />\n\n    <h1 className=\"songpage__name\">{song.title}</h1>\n    <div className=\"songpage__info\">\n      {authorInfo(song.author)}\n      {song.suite && <p>Part of the {song.suite} suite</p>}\n    </div>\n    <div className=\"songpage__performances\">{performancesComponent}</div>\n    <div className=\"songpage__teases\">{teasesComponent}</div>\n  </Layout>\n}\n"],"sourceRoot":""}