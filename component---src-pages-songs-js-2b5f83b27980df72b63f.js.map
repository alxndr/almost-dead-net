{"version":3,"sources":["webpack://almost-dead-net/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_clone.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/reduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/groupBy.js","webpack://almost-dead-net/./src/components/header.js","webpack://almost-dead-net/./src/components/layout.js","webpack://almost-dead-net/./node_modules/ramda/es/sortBy.js","webpack://almost-dead-net/./src/pages/songs.js"],"names":["_checkForMethod","methodname","fn","length","arguments","obj","_isArray","apply","this","Array","prototype","slice","call","_clone","value","refFrom","refTo","deep","pattern","copy","copiedValue","len","idx","key","type","Date","valueOf","RegExp","source","global","ignoreCase","multiline","sticky","unicode","XReduceBy","valueFn","valueAcc","keyFn","xf","inputs","_xfBase","result","_has","input","_curryN","_dispatchable","list","_reduce","acc","elt","_curry2","item","push","Header","className","to","title","src","alt","defaultProps","children","id","href","sort","a","b","aa","bb","Author","name","PerformanceCount","perfIds","text","message","Tooltip","trigger","aria-label","role","SongLink","data","author","core_gd","cover_gd","suite","performances","SongsComponent","songs","allSongsCsv","nodes","teases","allTeasesCsv","songsClean","filter","songData","groupedByPerformedVsTeased","groupBy","Boolean","performedSongs","teasedSongs","description","sortBy","prop","map","sections","String","split","teasePerfIds","propEq","row","performance_id","query","render"],"mappings":"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","file":"component---src-pages-songs-js-2b5f83b27980df72b63f.js","sourcesContent":["import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import * as React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = () => (\n  <header>\n    <Link className=\"App__banner\" to=\"/\" title=\"Almost-Dead.net home page\">\n      <img src=\"https://i.imgur.com/q5cBEHG.png\" alt=\"Almost-Dead.net banner\" />\n    </Link>\n  </header>\n)\n\nHeader.propTypes = {\n}\n\nHeader.defaultProps = {\n}\n\nexport default Header\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"gatsby\"\n\nimport Header from './header'\n\nimport './reset.css'\nimport './layout.css'\n\nconst Layout = ({children, className = ''}) => {\n  return (\n    <div className={`layout ${className}`}>\n\n      <Header />\n\n      <main>\n        {children}\n      </main>\n\n      <footer id=\"site-footer\" className=\"footer\">\n        <Link className=\"footer__logo\" id=\"logo-bottom\" to=\"/\" title=\"return to home page\">\n          <img src=\"https://i.imgur.com/q5cBEHG.png\" alt=\"Almost-Dead.net\" />\n        </Link>\n        <Link className=\"footer__link-about\" to=\"/about\" title=\"About the Site\">\n          About\n        </Link>\n        <a href=\"https://lot.almost-dead.net\" className=\"footer__logo-lot\" title=\"JRAD Forum — The Lot\">\n          <img src=\"https://i.imgur.com/Qi2NhJO.png\" alt=\"The Lot — a forum for fans of Joe Russo's Almost Dead\" />\n        </a>\n      </footer>\n\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import React from 'react'\nimport {graphql, Link, StaticQuery} from 'gatsby'\n\nimport {filter, groupBy, prop, propEq, sortBy} from 'ramda'\nimport {Tooltip} from 'react-tippy'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport './songs.css'\n\nfunction Author({name}) {\n  if (!name || name === 'traditional') {\n    return false\n  }\n  return <span className=\"song__author\">\n    {name}\n  </span>\n}\nfunction PerformanceCount({perfIds, text = 'performed'}) {\n  if (!perfIds || !perfIds.length) {\n    return false\n  }\n  const message = `${text} ${perfIds.length} time${perfIds.length === 1 ? '' : 's'}`\n  return <Tooltip title={message} trigger=\"mouseenter focus click\">\n    <span className=\"song__perfcount\" aria-label=\"notes\" role=\"img\">×{perfIds.length}\n      <span className=\"hidden\">{message}</span>\n    </span>\n  </Tooltip>\n}\nfunction SongLink({data: {author, core_gd, cover_gd, id, suite, title, performances, ...rest}}) {\n  return <Link to={`/song/${id}`}>\n    \"{title}\"\n    {' '}\n    {suite && <span className=\"song__suite\">{suite} suite</span>}\n    {' '}\n    {(!core_gd || cover_gd) && <Author name={author} />}\n  </Link>\n}\n\nfunction SongsComponent({data: {allSongsCsv: {nodes: songs}, allTeasesCsv: {nodes: teases}}}) {\n  const songsClean = songs.filter(songData => songData.title && songData.title !== '[unknown]')\n  const groupedByPerformedVsTeased = groupBy(\n    (songData) => Boolean(songData.performances),\n    songsClean\n  )\n  const performedSongs = groupedByPerformedVsTeased[true]\n  const teasedSongs = groupedByPerformedVsTeased[false]\n\n  //const groupedBySuite = groupBy(\n  //  (songData) => songData.suite,\n  //  performedSongs\n  //)\n  //const songsAndSuites = [\n  //  ...groupedBySuite[''],\n  //  {title: 'Terrapin Suite',       sections: groupedBySuite['Terrapin']},\n  //  {title: 'Weather Report Suite', sections: groupedBySuite['Weather Report']},\n  //]\n\n  return <Layout className=\"songs\">\n    <SEO\n      title=\"JRAD — all songs played\"\n      description=\"Almost-complete repertoire of Joe Russo's Almost Dead (JRAD) songs and teases\"\n    />\n    <p><a href=\"#songs__headline--teased\">Jump down to \"Teases Only\"</a></p>\n    <h1>Songs Performed / Jammed</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(performedSongs)\n        .map(songData =>\n          songData.sections\n          ? songData.title\n          : <li key={songData.id}>\n            <SongLink data={songData} />\n            <PerformanceCount perfIds={String(songData.performances).split(':')} />\n          </li>\n        )\n      }\n    </ul>\n    <h1 id=\"songs__headline--teased\">Songs Teased</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(teasedSongs)\n          .map(songData => {\n            const teaseRows = filter(propEq('song_id', songData.id))(teases)\n            const teasePerfIds = teaseRows.map((row) => row.performance_id)\n            return songData.sections\n                ? songData.title\n                : <li key={songData.id}>\n                  <SongLink data={songData} />\n                  <PerformanceCount text=\"teased\" perfIds={teasePerfIds} />\n                </li>\n          }\n      )}\n    </ul>\n  </Layout>\n}\n\nconst SongsPage = () => <StaticQuery\n  query={graphql`\n    query SongsPageData {\n      allSongsCsv { nodes {\n        author\n        core_gd\n        core_jrad\n        cover_gd\n        id\n        performances\n        suite\n        title\n      } }\n      allTeasesCsv { nodes {\n        id\n        by\n        notes\n        performance_id\n        song_id\n        song_name\n        within\n      } }\n    }\n  `}\n  render={data => <SongsComponent data={data} />}\n/>\nexport default SongsPage\n"],"sourceRoot":""}