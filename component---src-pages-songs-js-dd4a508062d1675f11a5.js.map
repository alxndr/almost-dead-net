{"version":3,"file":"component---src-pages-songs-js-dd4a508062d1675f11a5.js","mappings":"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","sources":["webpack://almost-dead-net/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_clone.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/reduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/groupBy.js","webpack://almost-dead-net/./node_modules/ramda/es/sortBy.js","webpack://almost-dead-net/./src/pages/songs.js"],"sourcesContent":["import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implementation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, deep, map) {\n  map || (map = new _ObjectMap()); // this avoids the slower switch with a quick if decision removing some milliseconds in each run.\n\n  if (_isPrimitive(value)) {\n    return value;\n  }\n  var copy = function copy(copiedValue) {\n    // Check for circular and same references on the object graph and return its corresponding clone.\n    var cachedCopy = map.get(value);\n    if (cachedCopy) {\n      return cachedCopy;\n    }\n    map.set(value, copiedValue);\n    for (var key in value) {\n      if (Object.prototype.hasOwnProperty.call(value, key)) {\n        copiedValue[key] = deep ? _clone(value[key], true, map) : value[key];\n      }\n    }\n    return copiedValue;\n  };\n  switch (type(value)) {\n    case 'Object':\n      return copy(Object.create(Object.getPrototypeOf(value)));\n    case 'Array':\n      return copy([]);\n    case 'Date':\n      return new Date(value.valueOf());\n    case 'RegExp':\n      return _cloneRegExp(value);\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'BigInt64Array':\n    case 'BigUint64Array':\n      return value.slice();\n    default:\n      return value;\n  }\n}\nfunction _isPrimitive(param) {\n  var type = typeof param;\n  return param == null || type != 'object' && type != 'function';\n}\nvar _ObjectMap = /*#__PURE__*/\nfunction () {\n  function _ObjectMap() {\n    this.map = {};\n    this.length = 0;\n  }\n  _ObjectMap.prototype.set = function (key, value) {\n    const hashedKey = this.hash(key);\n    let bucket = this.map[hashedKey];\n    if (!bucket) {\n      this.map[hashedKey] = bucket = [];\n    }\n    bucket.push([key, value]);\n    this.length += 1;\n  };\n  _ObjectMap.prototype.hash = function (key) {\n    let hashedKey = [];\n    for (var value in key) {\n      hashedKey.push(Object.prototype.toString.call(key[value]));\n    }\n    return hashedKey.join();\n  };\n  _ObjectMap.prototype.get = function (key) {\n    /**\n     * depending on the number of objects to be cloned is faster to just iterate over the items in the map just because the hash function is so costly,\n     * on my tests this number is 180, anything above that using the hash function is faster.\n     */\n    if (this.length <= 180) {\n      for (const p in this.map) {\n        const bucket = this.map[p];\n        for (let i = 0; i < bucket.length; i += 1) {\n          const element = bucket[i];\n          if (element[0] === key) {\n            return element[1];\n          }\n        }\n      }\n      return;\n    }\n    const hashedKey = this.hash(key);\n    const bucket = this.map[hashedKey];\n    if (!bucket) {\n      return;\n    }\n    for (let i = 0; i < bucket.length; i += 1) {\n      const element = bucket[i];\n      if (element[0] === key) {\n        return element[1];\n      }\n    }\n  };\n  return _ObjectMap;\n}();","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, pattern.flags ? pattern.flags : (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : '') + (pattern.dotAll ? 's' : ''));\n}","import _clone from \"./_clone.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\nvar XReduceBy = /*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, _clone(this.valueAcc, false)];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n  return XReduceBy;\n}();\nexport default function _xreduceBy(valueFn, valueAcc, keyFn) {\n  return function (xf) {\n    return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n  };\n}","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduced from \"./internal/_reduced.js\";\nimport _xReduce from \"./internal/_xReduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\nimport _xwrap from \"./internal/_xwrap.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * The value function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to short circuit the iteration.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce, R.reduced\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy = /*#__PURE__*/\n_curryN(4, [], /*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  var xf = _xwrap(function (acc, elt) {\n    var key = keyFn(elt);\n    var value = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, false), elt);\n    if (value && value['@@transducer/reduced']) {\n      return _reduced(acc);\n    }\n    acc[key] = value;\n    return acc;\n  });\n  return _xReduce(xf, {}, list);\n}));\nexport default reduceBy;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a key-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @typedefn Idx = String | Int | Symbol\n * @sig Idx a => (b -> a) -> [b] -> {a: [b]}\n * @param {Function} fn Function :: a -> Idx\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce, R.indexBy, R.collectBy\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy = /*#__PURE__*/\n_curry2( /*#__PURE__*/\n_checkForMethod('groupBy', /*#__PURE__*/\nreduceBy(function (acc, item) {\n  acc.push(item);\n  return acc;\n}, [])));\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy = /*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\nexport default sortBy;","import React, {useMemo} from 'react'\nimport {useRowState, useSortBy, useTable} from 'react-table'\nimport {Tooltip} from 'react-tippy'\nimport {graphql, Link, StaticQuery} from 'gatsby'\nimport {filter, groupBy, prop, propEq, sortBy} from 'ramda'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport './songs.css'\n\nconst removeCertainSongs = ({title}) => title && !['[unknown]', 'Drums', 'Jam', 'Space'].includes(title)\nconst sortByTitle = sortBy(prop('title')) // TODO ignore \"A\", \"The\", etc\n\nfunction Author({name}) {\n  if (!name || name === 'traditional') {\n    return false\n  }\n  return <span className=\"song__author\">\n    {name}\n  </span>\n}\nfunction PerformanceCount({perfIds, text = 'performed'}) {\n  if (!perfIds || !perfIds.length) {\n    return false\n  }\n  const message = `${text} ${perfIds.length} time${perfIds.length === 1 ? '' : 's'}`\n  return <Tooltip title={message} trigger=\"mouseenter focus click\">\n    <span className=\"song__perfcount\" aria-label=\"notes\" role=\"img\">×{perfIds.length}\n      <span className=\"hidden\">{message}</span>\n    </span>\n  </Tooltip>\n}\nfunction SongLink({data: {author, core_gd, cover_gd, id, suite, title, performances}, full}) {\n  return <Link to={`/song/${id}`}>\n    \"{title}\"\n    {full && <>\n      {' '}\n      {suite && <span className=\"song__suite\">{suite} suite</span>}\n      {' '}\n      {(!core_gd || cover_gd) && <Author name={author} />}\n    </>}\n  </Link>\n}\n\nfunction SortableTable({columns, data, link=true}) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({columns, data}, useRowState, useSortBy)\n  return <table {...getTableProps()}>\n    <thead>\n      {headerGroups.map(headerGroup =>\n        <tr {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map(column =>\n            <th {...column.getHeaderProps(column.getSortByToggleProps())} style={{borderBottom: 'solid 3px gray', background: 'aliceblue', fontWeight: 'bold'}}>\n              {column.render('Header')}\n              <span className=\"songs__performed-table__column-sort\">\n                {column.isSorted ? column.isSortedDesc ? '⬇︎' : '⬆︎' : '⇅'}\n              </span>\n            </th>\n          )}\n        </tr>\n      )}\n    </thead>\n    <tbody {...getTableBodyProps()}>\n      {rows.map(row => {\n        prepareRow(row) // no return value; mutates `row`?\n        return <tr {...row.getRowProps()}>\n          {row.cells.map(cell =>\n            <td {...cell.getCellProps()}>\n              {cell.column?.id === 'title' && link\n                ? <SongLink data={cell.row.original} />\n                : cell.render('Cell')}\n            </td>\n          )}\n        </tr>\n      })}\n    </tbody>\n  </table>\n}\n\nfunction SongsComponent({data: {allSongsCsv: {nodes: songs}, allTeasesCsv: {nodes: teases}}}) {\n  const groupedByPerformed = groupBy((songData) => Boolean(songData.performances), songs.filter(removeCertainSongs))\n  const performedData = useMemo(\n    () => groupedByPerformed[true].map(songData => ({\n      ...songData,\n      performances: String(songData.performances).split(':').length,\n    })),\n    []\n  )\n  const performedColumns = useMemo(\n    () => [\n      { Header: \"title\", accessor: \"title\" },\n      { Header: \"author\", accessor: \"author\" },\n      { Header: \"suite\", accessor: \"suite\" },\n      { Header: \"plays\", accessor: \"performances\" },\n    ],\n    []\n  )\n\n  const allSongIdsFromTeases = teases.reduce((a,e) => a.concat(e.song_id), [])\n  const groupedByTeased = groupBy(songData => allSongIdsFromTeases.includes(songData.id), groupedByPerformed[false])\n  const teasedData = useMemo(\n    () => groupedByTeased[true].map(songData => ({\n      ...songData,\n      teases: filter(propEq(songData.id, 'song_id'))(teases).map((row) => row.performance_id).length,\n    })),\n    []\n  )\n  const teasedColumns = useMemo(\n    () => [\n      { Header: \"title\", accessor: \"title\" },\n      { Header: \"author\", accessor: \"author\" },\n      { Header: \"teases\", accessor: \"teases\" },\n    ],\n    []\n  )\n\n  return <Layout className=\"songs\">\n    <SEO\n      title=\"JRAD songs played or teased\"\n      description=\"Repertoire of songs and teases performed by Joe Russo's Almost Dead, plus setlists of each concert\"\n    />\n\n    <div id=\"songs__toc\" className=\"tableofcontents\">\n      <p>Table of Contents</p>\n      <ol>\n        <li><a href=\"#songs__performed-headline\">Songs Performed / Jammed</a></li>\n        <li><a href=\"#songs__teased-headline\">Songs Teased</a></li>\n      </ol>\n    </div>\n\n    <h1 href=\"#songs__performed-headline\">Songs Performed / Jammed</h1>\n    <p>These songs have been performed in their entirety, or played as an extended theme by the entire band.</p>\n    <SortableTable columns={performedColumns} data={performedData} />\n\n    <h1 id=\"songs__teased-headline\">Songs Teased</h1>\n    <p>These are songs which have been hinted at by one or more members of the band while playing another song.</p>\n    <SortableTable columns={teasedColumns} data={teasedData} />\n\n    {'#notyet' === global?.window?.location?.hash /* TODO this can trigger a runtime error in browser */ && <>\n      <h1 id=\"songs__notyet-headline\">Not Yet Played from the GD Repertoire</h1>\n      <p>This is an incomplete list of songs which the Grateful Dead or their members recorded or played live (either together or in other projects), but have been neither played nor teased by JRAD...</p>\n      <SortableTable\n        columns={useMemo(() => [{Header: \"title\", accessor: \"title\"}, {Header: \"author\", accessor: \"author\"}], [])}\n        data={useMemo(() => groupedByTeased[false], [])}\n        link={false}\n      />\n    </>}\n  </Layout>\n}\n\nconst SongsPage = () => <StaticQuery\n  query={graphql`\n    query SongsPageData {\n      allSongsCsv { nodes {\n        author\n        core_gd\n        core_jrad\n        cover_gd\n        id\n        performances\n        suite\n        title\n      } }\n      allTeasesCsv { nodes {\n        id\n        by\n        notes\n        performance_id\n        song_id\n        song_name\n        within\n      } }\n    }\n  `}\n  render={data => <SongsComponent data={data} />}\n/>\nexport default SongsPage\n"],"names":["_checkForMethod","methodname","fn","length","arguments","obj","_isArray","apply","this","Array","prototype","slice","call","_clone","value","deep","map","_ObjectMap","param","type","_isPrimitive","pattern","copy","copiedValue","cachedCopy","get","key","set","Object","hasOwnProperty","create","getPrototypeOf","Date","valueOf","RegExp","source","flags","global","ignoreCase","multiline","sticky","unicode","dotAll","hashedKey","hash","bucket","push","toString","join","p","i","element","XReduceBy","valueFn","valueAcc","keyFn","xf","inputs","_xfBase","init","result","_has","input","_xreduceBy","_curryN","_dispatchable","list","_xwrap","acc","elt","_reduced","_xReduce","_curry2","item","sort","a","b","aa","bb","removeCertainSongs","_ref","title","includes","sortBy","prop","Author","_ref2","name","React","className","SongLink","_ref4","data","author","core_gd","cover_gd","id","suite","performances","full","Link","to","SortableTable","_ref5","columns","link","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","useRowState","useSortBy","headerGroup","getHeaderGroupProps","headers","column","assign","getHeaderProps","getSortByToggleProps","style","borderBottom","background","fontWeight","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","_cell$column","getCellProps","original","SongsComponent","_ref6","_global","_global$window","_global$window$locati","allSongsCsv","nodes","songs","allTeasesCsv","teases","groupedByPerformed","groupBy","songData","Boolean","filter","performedData","useMemo","String","split","performedColumns","Header","accessor","allSongIdsFromTeases","reduce","e","concat","song_id","groupedByTeased","teasedData","propEq","performance_id","teasedColumns","Layout","SEO","description","href","window","location","SongsPage","StaticQuery","query"],"sourceRoot":""}