{"version":3,"sources":["webpack://almost-dead-net/./node_modules/ramda/es/internal/_checkForMethod.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_clone.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_cloneRegExp.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_curryN.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_xreduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/reduceBy.js","webpack://almost-dead-net/./node_modules/ramda/es/groupBy.js","webpack://almost-dead-net/./node_modules/ramda/es/sortBy.js","webpack://almost-dead-net/./node_modules/ramda/es/internal/_isInteger.js","webpack://almost-dead-net/./node_modules/ramda/es/nth.js","webpack://almost-dead-net/./node_modules/ramda/es/paths.js","webpack://almost-dead-net/./node_modules/ramda/es/path.js","webpack://almost-dead-net/./node_modules/ramda/es/prop.js","webpack://almost-dead-net/./src/pages/songs.js","webpack://almost-dead-net/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["_checkForMethod","methodname","fn","length","arguments","obj","_isArray","apply","this","Array","prototype","slice","call","_clone","value","refFrom","refTo","deep","pattern","copy","copiedValue","len","idx","key","type","Date","valueOf","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_curryN","received","combined","argsIdx","left","combinedIdx","result","_isPlaceholder","_arity","XReduceBy","valueFn","valueAcc","keyFn","xf","inputs","_xfBase","_has","input","_dispatchable","list","_reduce","acc","elt","_curry2","item","push","sort","a","b","aa","bb","Number","isInteger","n","offset","_isString","charAt","pathsArray","map","paths","p","val","_isInteger","pathAr","Author","name","className","PerformanceCount","perfIds","text","message","Tooltip","title","trigger","aria-label","role","SongLink","data","author","core_gd","cover_gd","id","suite","performances","excluded","i","target","sourceKeys","Object","keys","indexOf","to","SongsPage","songsClean","pageContext","songs","filter","songData","groupedByPerformedVsTeased","groupBy","Boolean","performedSongs","teasedSongs","description","href","sortBy","prop","sections","String","split"],"mappings":"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","file":"component---src-pages-songs-js-e996b58031086d558667.js","sourcesContent":["import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _cloneRegExp from \"./_cloneRegExp.js\";\nimport type from \"../type.js\";\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","export default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _arity from \"./_arity.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","import _curryN from \"./_curryN.js\";\nimport _has from \"./_has.js\";\nimport _xfBase from \"./_xfBase.js\";\n\nvar XReduceBy = /*#__PURE__*/function () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _clone from \"./internal/_clone.js\";\nimport _curryN from \"./internal/_curryN.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _has from \"./internal/_has.js\";\nimport _reduce from \"./internal/_reduce.js\";\nimport _xreduceBy from \"./internal/_xreduceBy.js\";\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : _clone(valueAcc, [], [], false), elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry2 from \"./internal/_curry2.js\";\nimport reduceBy from \"./reduceBy.js\";\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy = /*#__PURE__*/_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths = /*#__PURE__*/_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path = /*#__PURE__*/_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import React from 'react'\nimport {Link} from 'gatsby'\n\nimport {groupBy, prop, sortBy} from 'ramda'\nimport {Tooltip} from 'react-tippy'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport './songs.css'\n\nfunction Author({name}) {\n  if (!name || name === 'traditional') {\n    return false\n  }\n  return <span className=\"song__author\">\n    {name}\n  </span>\n}\nfunction PerformanceCount({perfIds, text = 'performed'}) {\n  if (!perfIds || !perfIds.length) {\n    return false\n  }\n  const message = `${text} ${perfIds.length} time${perfIds.length === 1 ? '' : 's'}`\n  return <Tooltip title={message} trigger=\"mouseenter focus click\">\n    <span className=\"song__perfcount\" aria-label=\"notes\" role=\"img\">×{perfIds.length}\n      <span className=\"hidden\">{message}</span>\n    </span>\n  </Tooltip>\n}\nfunction SongLink({data: {author, core_gd, cover_gd, id, suite, title, performances, ...rest}}) {\n  return <Link to={`/song/${id}`}>\n    \"{title}\"\n    {' '}\n    {suite && <span className=\"song__suite\">{suite} suite</span>}\n    {' '}\n    {(!core_gd || cover_gd) && <Author name={author} />}\n  </Link>\n}\n\nexport default function SongsPage({pageContext: {songs}}) {\n  const songsClean = songs.filter(songData => songData.title && songData.title !== '[unknown]')\n  const groupedByPerformedVsTeased = groupBy(\n    (songData) => Boolean(songData.performances),\n    songsClean\n  )\n  const performedSongs = groupedByPerformedVsTeased[true]\n  const teasedSongs = groupedByPerformedVsTeased[false]\n\n  //const groupedBySuite = groupBy(\n  //  (songData) => songData.suite,\n  //  performedSongs\n  //)\n  //const songsAndSuites = [\n  //  ...groupedBySuite[''],\n  //  {title: 'Terrapin Suite',       sections: groupedBySuite['Terrapin']},\n  //  {title: 'Weather Report Suite', sections: groupedBySuite['Weather Report']},\n  //]\n\n  return <Layout className=\"songs\">\n    <SEO\n      title=\"JRAD — all songs played\"\n      description=\"Almost-complete repertoire of Joe Russo's Almost Dead (JRAD) songs and teases\"\n    />\n    <p><a href=\"#songs__headline--teased\">Jump down to \"Teases Only\"</a></p>\n    <h1>Songs Performed / Jammed</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(performedSongs)\n        .map(songData =>\n          songData.sections\n          ? songData.title\n          : <li>\n            <SongLink data={songData} />\n            <PerformanceCount perfIds={String(songData.performances).split(':')} />\n          </li>\n        )\n      }\n    </ul>\n    <h1 id=\"songs__headline--teased\">Songs Teased</h1>\n    <ul className=\"songs__list\">\n      {sortBy((prop('title')))(teasedSongs)\n        .map(songData =>\n          songData.sections\n          ? songData.title\n          : <li>\n            <SongLink data={songData} />\n            <PerformanceCount text=\"teased\" perfIds={String(songData.performances).split(':')} />\n          </li>)}\n    </ul>\n  </Layout>\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}