{"version":3,"sources":["release-stages.js","pages/error.js","data.js","fetch.js","routes.js","components/song_finder.js","components/shows_list.js","pages/home.js","components/segue.js","components/perf_note.js","components/teases_note.js","components/setlist.js","components/show_paginator.js","pages/show.js","pages/song.js","App.js","serviceWorker.js","index.js"],"names":["STAGES","releaseStage","document","location","hostname","determineRelease","process","GIT_SHA","length","console","log","Error","className","URL_BASE","GUESTS_URL","SEGUES_URL","SETS_URL","SHOWS_URL","SONG_PERFORMANCES_URL","SONGS_URL","TEASES_URL","VENUES_URL","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","fetchWithCache","url","a","localStorage","urlPath","split","slice","join","rawStoredPayload","getItem","fetch","data","ok","text","parseWithCache","callback","papaParseOptions","Papa","parse","dynamicTyping","header","complete","response","errors","route","params","replace","id","anyPath","home","show","song","REGEX_NON_ALNUMSPACE","REGEX_WORD_SEPARATING_PUNCTUATION","sanitizeString","string","toLowerCase","trim","SongFinder","props","useState","songs","setSongs","value","setValue","suggestions","setSuggestions","redirect","setRedirect","useEffect","push","to","highlightFirstSuggestion","onSuggestionsClearRequested","onSuggestionsFetchRequested","searchString","searchRegex","RegExp","filter","title","author","test","getSuggestions","getSuggestionValue","songData","renderSuggestion","inputProps","onChange","_","newValue","placeholder","onSuggestionSelected","suggestion","routes","hasDate","prop","ShowEntry","children","date","event","venue","ShowsList","undefined","shows","setShows","venues","setVenues","showData","venueData","showsByYear","reduce","acc","m","d","y","find","propEq","venue_id","Object","entries","reverse","map","year","showsInYear","key","monthAndDay","Home","Segue","cssClasses","classnames","PerfNote","notes","trigger","aria-label","role","TeasesNote","list","teases","song_name","Setlist","performances","setPerformances","segues","setSegues","setTeases","groupedBySuite","groupWith","b","suite","setlist","perfId","performanceData","Number","song_id","isEncore","which","songOrSuite","displayName","nicknames","teasesArray","segueData","variation","ShowPaginator","prev","next","Show","match","sets","setSets","guests","setGuests","inputId","nextShow","prevShow","findVenue","guestsWithSplitShows","guestData","isInteger","bind","showGuests","where","includes","setlists","setData","concat","encores","guest","flatMap","word","startsWith","href","rel","target","dompurify","sanitize","SET_MAPPING","set1","set2","set3","encore1","encore2","Song","songId","performancesData","performancesComponent","set","toString","whichSet","col_name","teasesData","teasesComponent","teaseData","performance_id","within","authorInfo","App","src","alt","path","exact","component","Boolean","LogRocket","init","Sentry","dsn","environment","release","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.200a000a.chunk.js","sourcesContent":["export const STAGES = {\n  CANARY: 'canary',\n  DEV: 'dev',\n  PROD: 'prod',\n  UNKNOWN: 'unknown',\n}\n\nexport function releaseStage() {\n  if (!document || !document.location || !document.location.hostname)\n    return STAGES.UNKNOWN\n  switch (document.location.hostname) {\n    case 'almost-dead.net':\n      return STAGES.PROD\n    case 'alxndr.github.io':\n      return STAGES.CANARY\n    case 'localhost':\n      return STAGES.DEV\n    default:\n      return STAGES.UNKNOWN\n  }\n}\n\nexport function determineRelease() {\n  if (process.env.GIT_SHA && process.env.GIT_SHA.length) {\n    // TODO this doesn't work when served from gh-pages...\n    return process.env.GIT_SHA\n  }\n  if (process.env.NODE_ENV === 'development') {\n    return 'develop'\n  }\n  return 'unknown'\n}\nconsole.log('release...', determineRelease())\n\n","import React from 'react'\n\nimport './error.css'\n\nexport default function Error() {\n  return <section className=\"errorpage\">\n    <h1>Uh oh! Error</h1>\n  </section>\n}\n","const URL_BASE = 'https://gist.githubusercontent.com/alxndr/5f64cf477d5202c004856772ad2222db/raw/f4aab33aeed059c51e63b9ba1148b8e44c5bed62'\n\nconst GUESTS_URL = `${URL_BASE}/guests.csv`\nconst SEGUES_URL = `${URL_BASE}/segues.csv`\nconst SETS_URL = `${URL_BASE}/sets.csv`\nconst SHOWS_URL = `${URL_BASE}/shows.csv`\nconst SONG_PERFORMANCES_URL = `${URL_BASE}/songperformances.csv`\nconst SONGS_URL = `${URL_BASE}/songs.csv`\nconst TEASES_URL = `${URL_BASE}/teases.csv`\nconst VENUES_URL = `${URL_BASE}/venues.csv`\n\nexport {\n  GUESTS_URL,\n  SEGUES_URL,\n  SETS_URL,\n  SHOWS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n  VENUES_URL,\n}\n","import Papa from 'papaparse'\n\nexport function getCsv(csvUrl, callback, papaParseOptions = {}) {\n  throw new Error('getCsv has been deprecated... check out the new hotness: fetchWithCache')\n}\n\n/**\n * Determine whether localStorage is available and behaves to spec.\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n *\n * @returns {boolean} whether or not the current environment correctly implements localStorage\n */\nfunction storageAvailable(type) {\n  var storage;\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  }\n  catch(e) {\n    return e instanceof DOMException && (\n      // everything except Firefox\n      e.code === 22 ||\n      // Firefox\n      e.code === 1014 ||\n      // test name field too, because code might not be present\n      // everything except Firefox\n      e.name === 'QuotaExceededError' ||\n      // Firefox\n      e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      (storage && storage.length !== 0);\n  }\n}\n\n/**\n * Retrieve data for the given URL, either from localStorage (if available) or the network.\n * TODO:\n * - store & check age of data in localStorage\n * - versioning the data??\n */\nexport async function fetchWithCache(url) {\n  if (!localStorage) {\n    throw new Error(\"Ruh roh, no localStorage\")\n  }\n  if (!storageAvailable('localStorage')) {\n    throw new Error(\"Ruh roh, localStorage doesn't look healthy...\") // ...or return Promise.reject(new Error()) ?\n  }\n  const urlPath = url.split('/').slice(-2).join('/') // assumes the URL is a raw Gist URL\n  const rawStoredPayload = localStorage.getItem(urlPath)\n  if (rawStoredPayload) {\n    return rawStoredPayload\n  }\n  const data = await fetch(url)\n  if (!data.ok) {\n    throw new Error('Uh oh, could not fetch...', {url, data}) // ...or return Promise.reject(new Error()) ?\n  }\n  const text = await data.text()\n  localStorage.setItem(urlPath, text)\n  return text\n}\n\nexport async function parseWithCache(url, callback, papaParseOptions) {\n  const data = await fetchWithCache(url)\n  return Papa.parse(data, {\n    dynamicTyping: true, // TODO remove this... gonna do some conversions ourselves though\n    header: true,\n    complete: (response) => {\n      if (!response)\n        throw new Error('getCsvWithCache: No response when fetching', {url})\n      const {data, errors} = response\n      if (errors.length)\n        throw new Error('getCsvWithCache: Error fetching', {url, response})\n      return callback(data)\n    },\n    ...papaParseOptions,\n  })\n}\n","export const anyPath = `/:path`\nexport const home = `/`\nexport const show = `/show/:id`\nexport const song = `/song/:id`\n\nexport function url(route, params) {\n  // TODO support more than just {id: #}\n  return route.replace(':id', params.id)\n}\n\nexport default {\n  anyPath,\n  home,\n  show,\n  song,\n}\n","import React, {useEffect, useState} from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport Autosuggest from 'react-autosuggest'\n\nimport {\n  SONGS_URL,\n} from '../data'\nimport {parseWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport './song_finder.css'\n\nconst REGEX_NON_ALNUMSPACE = /[^a-z0-9 ]+/g\nconst REGEX_WORD_SEPARATING_PUNCTUATION = /[-—/–+,()[\\]{}…]+/g\nfunction sanitizeString(string) {\n  return string\n    .toLowerCase()\n    .replace(REGEX_WORD_SEPARATING_PUNCTUATION, ' ')\n    .replace(REGEX_NON_ALNUMSPACE, '')\n    .trim()\n}\n\nexport default function SongFinder(props) {\n  const [songs, setSongs] = useState(null)\n  const [value, setValue] = useState('')\n  const [suggestions, setSuggestions] = useState([])\n  const [redirect, setRedirect] = useState(null)\n  useEffect(() => {\n    parseWithCache(SONGS_URL, setSongs)\n  }, [])\n  if (redirect) {\n    return <Redirect push to={redirect} />\n  }\n  if (!songs || !songs.length) {\n    return <p>Loading...</p>\n  }\n  const getSuggestions = (string) => {\n    if (!string) {\n      return []\n    }\n    const searchString = sanitizeString(string)\n    if (!searchString || searchString.length < 2) {\n      return []\n    }\n    const searchRegex = new RegExp(`\\\\b${searchString}`)\n    return songs.filter(({title = '', author = ''}) => {\n      if (title && searchRegex.test(sanitizeString(title))) {\n        return true\n      }\n      if (author && searchRegex.test(sanitizeString(author))) {\n        return true\n      }\n      return false\n    })\n  }\n  const renderSuggestion = (songData) => {\n    const author = songData.author\n      ? <span className=\"songfinder__suggestion--author\">{songData.author}</span>\n      : false\n    return <span className=\"songfinder__suggestion\">\n      {songData.title}\n      {author}\n    </span>\n  }\n  return <div className=\"songfinder\">\n    <Autosuggest\n      suggestions={suggestions}\n      highlightFirstSuggestion={true}\n      onSuggestionsClearRequested={() => setSuggestions([])}\n      onSuggestionsFetchRequested={({value}) => {\n        setValue(value)\n        setSuggestions(getSuggestions(value))\n      }}\n      getSuggestionValue={(songData) => songData.title}\n      renderSuggestion={renderSuggestion}\n      inputProps={{\n        onChange: (_, {newValue}) => setValue(newValue),\n        placeholder: 'type a song name',\n        value,\n      }}\n      onSuggestionSelected={(_, {suggestion}) => {\n        setRedirect(url(routes.song, {id: suggestion.id}))\n      }}\n    />\n  </div>\n}\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { filter, find, prop, propEq } from 'ramda'\n\nimport {parseWithCache} from '../fetch'\nimport routes from '../routes'\n\nimport {\n  SHOWS_URL,\n  VENUES_URL,\n} from '../data'\n\nimport './shows_list.css'\n\nconst hasDate = filter(prop('date'))\n\nfunction ShowEntry({children, show}) {\n  const {date, event, id, venue} = show\n  const title = `#${id}: ${date}${event ? ` ${event}` : ''} @ ${venue.name} (${venue.location})`\n  return <Link to={routes.show.replace(':id', id)} title={title}>{children || date}</Link>\n}\n\nconst UNDEF = undefined\n\nexport default function ShowsList() {\n  const [shows, setShows] = useState(UNDEF)\n  const [venues, setVenues] = useState(UNDEF)\n  useEffect(() => {\n    parseWithCache(SHOWS_URL, (showData) => setShows(hasDate(showData)))\n    parseWithCache(VENUES_URL, (venueData) => setVenues(venueData))\n    // TODO change data stores to be object-based rather than array-based\n  }, [])\n  if (shows === UNDEF || venues === UNDEF) {\n    return <p>Loading...</p>\n  }\n  const showsByYear = shows.reduce((acc, show) => {\n    const [m, d, y] = show.date.split('/') // e.g. === ['1', '26', '2013']\n    if (!acc[y]) acc[y] = {}\n    const venue = find(propEq('id', show.venue_id))(venues)\n    acc[y][`${m}/${d}`] = {\n      ...show,\n      venue\n    }\n    return acc\n  }, {})\n  return <ul className=\"showslist__years\">\n    {Object.entries(showsByYear).reverse().map(([year, showsInYear]) => {\n      return <li className={`showslist__years--${year}`} key={year}>\n        <h3>{year}</h3>\n        <ul className=\"showslist__years__shows\">\n          {Object.entries(showsInYear).map(([monthAndDay, show]) => {\n            return <li className={`showslist__years__shows__${monthAndDay}`} key={monthAndDay}>\n              <ShowEntry key={show.id} show={show}>{monthAndDay}</ShowEntry>\n            </li>\n          })}\n        </ul>\n      </li>\n    })}\n  </ul>\n}\n","import React from 'react'\n\nimport SongFinder from '../components/song_finder'\nimport ShowsList from '../components/shows_list'\n\nimport './home.css'\n\nexport default function Home(props) {\n  return <section className=\"homepage\">\n    <h1>JRAD Setlists</h1>\n    <p>Find a song:</p>\n    <SongFinder />\n    <hr />\n    <p>Find a past show:</p>\n    <ShowsList />\n    <hr />\n    <p>Coming eventually...</p>\n    <ul>\n      <li>easier navigation??</li>\n      <li>teases!</li>\n      <li>the rest of the setlists</li>\n      <li>more links to Archive.org & Youtube</li>\n      <li>fun stats</li>\n    </ul>\n    </section>\n}\n","import React from 'react'\nimport classnames from 'classnames'\n\nimport './segue.css'\n\n/**\n * Show a visual indication of the type of segue.\n * http://beta.phish.net/faq/segues\n */\nexport default function Segue({type}) {\n  const cssClasses = classnames('segue', {\n    'segue--std': type === '>',\n    'segue--smooth': type === '->',\n  })\n  // ripcord... ≯\n  return <span className={cssClasses}>{type}</span>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function PerfNote({notes}) {\n  return <Tooltip title={notes} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songnote\" aria-label=\"notes\" role=\"img\">📓\n      <span className=\"hidden\">{notes}</span>\n    </span>\n  </Tooltip>\n}\n","import React from 'react'\n\nimport {Tooltip} from 'react-tippy'\n\nexport default function TeasesNote({list}) {\n  const teases = list.map(({song_name}) => song_name).join(', ')\n  const text = `${teases} tease${list.length > 1 ? 's' : ''}`\n  return <Tooltip title={text} trigger=\"mouseenter focus click\">\n    <span className=\"setlist__songteases\" aria-label=\"notes\" role=\"img\">🎧\n      <span className=\"hidden\">{text}</span>\n    </span>\n  </Tooltip>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {filter, find, groupWith, propEq} from 'ramda'\n\nimport {\n  SEGUES_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n} from '../data'\nimport {parseWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport Segue from './segue'\nimport PerfNote from './perf_note'\nimport TeasesNote from './teases_note'\n\nimport './setlist.css'\nimport 'react-tippy/dist/tippy.css'\n\nconst findByIntegerId = (id) => find(propEq('id', Number(id)))\n\nexport default function Setlist(props) {\n  const [performances, setPerformances] = useState(null)\n  const [segues, setSegues] = useState(null)\n  const [songs, setSongs] = useState(null)\n  const [teases, setTeases] = useState(null)\n  useEffect(() => {\n    parseWithCache(SONG_PERFORMANCES_URL, setPerformances)\n    parseWithCache(SEGUES_URL, setSegues)\n    parseWithCache(SONGS_URL, setSongs)\n    parseWithCache(TEASES_URL, setTeases)\n  }, [])\n  if (!(performances && songs && segues && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!segues.length) {\n    return <p>Uh oh, no segues found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n  const groupedBySuite = groupWith(\n    (a, b) => a.suite && a.suite === b.suite,\n    props.setlist.map((perfId) => {\n      const performanceData = findByIntegerId(perfId)(performances)\n      const songData = find(propEq('id', performanceData.song_id))(songs)\n      return {\n        suite: songData.suite,\n        songData,\n        performanceData,\n      }\n    })\n  )\n  return <>\n    <p className=\"setlist__label\">\n      {props.isEncore\n        ? `Encore ${props.which > 1 ? props.which : ''}`\n        : `Set ${props.which}`\n      }\n    </p>\n    <ol className=\"setlist\">\n      {groupedBySuite.map((songOrSuite) => {\n        if (songOrSuite.length > 1) {\n          return <li key={songOrSuite[0].performanceData.id} className=\"suite\">\n            {songOrSuite[0].suite} suite:\n            <ul>\n              {songOrSuite.map(({songData, performanceData}) => {\n                const displayName = songData.nicknames\n                  ? songData.nicknames.split(';', 1)\n                  : songData.title\n                const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n                const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n                return <li key={performanceData.id}>\n                  <Link to={url(routes.song, {id: songData.id})}>\n                    {displayName}\n                  </Link>\n                  {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n                  {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n                  {segueData && <Segue {...segueData} />}\n                </li>\n              })}\n            </ul>\n          </li>\n        }\n        // regularly scheduled programming\n        const [{performanceData, songData}] = songOrSuite\n        const segueData = find(propEq('from_perf_id', performanceData.id))(segues)\n        const teasesArray = filter(propEq('performance_id', performanceData.id))(teases)\n        return <li key={performanceData.id}>\n          <Link to={url(routes.song, {id: performanceData.song_id})}>\n            {songData.title}\n          </Link> {performanceData.variation || false}\n          {performanceData.notes && <PerfNote notes={performanceData.notes} />}\n          {teasesArray.length ? <TeasesNote list={teasesArray} /> : false}\n          {segueData && <Segue {...segueData} />}\n          </li>\n      })}\n        </ol>\n    </>\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport routes, {url} from '../routes';\n\nimport './show_paginator.css'\n\nexport default function ShowPaginator({prev, next}) {\n  return <ul className=\"showpaginator\">\n    {prev && prev.date && <li className=\"showpaginator__prev\">\n      <Link to={url(routes.show, {id: prev.id})}>\n        Previous show: {prev.date}\n      </Link>\n    </li>}\n    {next && next.date && <li className=\"showpaginator__next\">\n      <Link to={url(routes.show, {id: next.id})}>\n        Next show: {next.date}\n      </Link>\n    </li>}\n  </ul>\n}\n","import React, {useEffect, useState} from 'react'\nimport {filter, find, includes, propEq, where} from 'ramda'\nimport dompurify from 'dompurify'\n\nimport {\n  GUESTS_URL,\n  SETS_URL,\n  SHOWS_URL,\n  VENUES_URL\n} from '../data'\nimport {parseWithCache} from '../fetch'\n\nimport Setlist from '../components/setlist'\nimport ShowPaginator from '../components/show_paginator'\n\nimport './show.css'\n\nfunction linkShowNotes(text) {\n  return <>{text.split(/\\s/g).flatMap(word => word.startsWith('https://')\n    ? [<a href={word} rel=\"noopener noreferrer\" target=\"_blank\">{dompurify.sanitize(word)}</a>, ' ']\n    : [dompurify.sanitize(word), ' '])\n    }\n  </>\n}\n\nexport default function Show({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [venues, setVenues] = useState(null)\n  const [guests, setGuests] = useState(null)\n  useEffect(() => {\n    parseWithCache(SHOWS_URL, setShows)\n    parseWithCache(SETS_URL, setSets)\n    parseWithCache(VENUES_URL, setVenues)\n    parseWithCache(GUESTS_URL, setGuests)\n  }, [])\n  if (!shows) {\n    return <p>Loading shows...</p>\n  }\n  if (!venues) {\n    return <p>Loading venues...</p>\n  }\n  if (!sets) {\n    return <p>Loading sets...</p>\n  }\n  if (!guests) {\n    return <p>Loading guests...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!venues.length) {\n    return <p>Uh oh, no venues found...</p>\n  }\n  if (!sets.length) {\n    return <p>Uh oh, no sets found...</p>\n  }\n  if (!guests.length) {\n    return <p>Uh oh, no guests found...</p>\n  }\n  const inputId = Number(params.id)\n  const showData = find(propEq('id', inputId))(shows)\n  if (!showData) {\n    return <p>Uh oh, no show data found...</p>\n  }\n  const nextShow = find(propEq('id', inputId + 1))(shows)\n  const prevShow = find(propEq('id', inputId - 1))(shows)\n  const {date, notes, venue_id} = showData\n  const findVenue = find(propEq('id', Number(venue_id)))\n  const venueData = findVenue(venues)\n  if (!venueData) {\n    return <p>Uh oh, no venue data found...</p>\n  }\n  const {name, location} = venueData\n\n  const guestsWithSplitShows = guests.map((guestData) => {\n    if (!guestData) {\n      return null\n    }\n    if (!guestData.shows) {\n      return null\n    }\n    if (Number.isInteger(guestData.shows)) {\n      return {\n        ...guestData,\n        shows: [guestData.shows]\n      }\n    }\n    return {\n      ...guestData,\n      shows: guestData.shows.split(':').map(Number.bind(null))\n    }\n  }).filter((data) => !!data)\n  const showGuests = filter(where({shows: includes(inputId)}))(guestsWithSplitShows)\n\n  const setlists = [1, 2, 3].reduce((setlists, which) => {\n    if (!showData[`set${which}`]) {\n      return setlists\n    }\n    const setData = find(propEq('id', Number(showData[`set${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return setlists.concat([<Setlist isEncore={false} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  const encores = [1, 2].reduce((encores, which) => {\n    if (!showData[`encore${which}`]) {\n      return encores\n    }\n    const setData = find(propEq('id', Number(showData[`encore${which}`])))(sets)\n    const setlist = typeof setData.setlist === \"number\"\n      ? [setData.setlist]\n      : setData.setlist.split(':')\n    return encores.concat([<Setlist isEncore={true} which={which} key={setData.id} setlist={setlist} />])\n  }, [])\n  return <div className=\"showpage\">\n    <section>\n      <h1 className=\"showpage__pagetitle\">\n        <span className=\"showpage__pagetitle--date\">{date}</span>\n        <span className=\"showpage__pagetitle--venue\">{name}, {location}</span>\n        <span className=\"showpage__pagetitle--number\">show #{showData.id}</span>\n      </h1>\n      {showGuests.length\n        ? <p>With {showGuests.map((guest) => guest.name).join(', ')}</p>\n        : false\n      }\n      {setlists.length\n        ? setlists\n        : <p>Uh oh, no sets found.</p>\n      }\n      {encores.length\n        ? encores\n        : <p>(no encore)</p>\n      }\n      {notes && <div className=\"showpage__notes\">{linkShowNotes(notes)}</div>}\n    </section>\n    <ShowPaginator prev={prevShow} next={nextShow} />\n  </div>\n}\n","import React, {useEffect, useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport {filter, find, propEq} from 'ramda'\n\nimport {\n  SHOWS_URL,\n  SETS_URL,\n  SONG_PERFORMANCES_URL,\n  SONGS_URL,\n  TEASES_URL,\n} from '../data'\nimport {parseWithCache} from '../fetch'\nimport routes, {url} from '../routes'\n\nimport './song.css'\n\nfunction authorInfo(author = null) {\n  switch (author) {\n    case null:\n      return <p>(originally by the Grateful Dead)</p>\n    case 'traditional':\n      return <p>(traditional)</p>\n    default:\n      return <p>by {author}</p>\n  }\n}\n\nconst SET_MAPPING = { // 'show table column name' to 'human readable set name'\n  set1: 'set 1',\n  set2: 'set 2',\n  set3: 'set 3',\n  encore1: 'encore',\n  encore2: 'double encore',\n}\n\nexport default function Song({match: {params}}) {\n  const [shows, setShows] = useState(null)\n  const [sets, setSets] = useState(null)\n  const [songs, setSongs] = useState(null)\n  const [performances, setPerformances] = useState(null)\n  const [teases, setTeases] = useState(null)\n  useEffect(() => {\n    parseWithCache(SHOWS_URL, setShows)\n    parseWithCache(SETS_URL, setSets)\n    parseWithCache(SONGS_URL, setSongs)\n    parseWithCache(SONG_PERFORMANCES_URL, setPerformances)\n    parseWithCache(TEASES_URL, setTeases)\n  }, [])\n\n  if (!(songs && performances && shows && teases)) {\n    return <p>Loading...</p>\n  }\n  if (!songs.length) {\n    return <p>Uh oh, no songs found...</p>\n  }\n  if (!performances.length) {\n    return <p>Uh oh, no performances found...</p>\n  }\n  if (!shows.length) {\n    return <p>Uh oh, no shows found...</p>\n  }\n  if (!teases.length) {\n    return <p>Uh oh, no teases found...</p>\n  }\n\n  const songData = find(propEq('id', Number(params.id)))(songs)\n  if (!songData) {\n    return <p>Uh oh, no song data found...</p>\n  }\n  const songId = Number(songData.id)\n\n  const performancesData = filter(propEq('song_id', songId))(performances)\n  const performancesComponent = performancesData.length > 0\n    ?  <>\n      <h2>Performances</h2>\n      <ul>\n        {performancesData\n          .map(performanceData => {\n            // console.groupCollapsed(performanceData.id)\n            // console.log({performanceData})\n            // console.log('looking for set w/perf id =', performanceData.id)\n            const setData = find((set) => set.setlist.toString().split(':').includes(performanceData.id.toString()))(sets)\n            // console.log({setData})\n            // console.log('looking for show w/set id =', setData.id)\n            const showData = find((show) => [show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(shows)\n            // console.log({showData})\n            // console.groupEnd()\n            if (!showData) { // TODO still needed?\n              // console.warn('cant find show for set', setData.id, 'perf', performanceData.id)\n              return false\n            }\n            const whichSet = Object.entries(SET_MAPPING).find(([col_name, readable_name]) => showData[col_name] === setData.id)[1]\n            return <li key={performanceData.id}>\n              <Link to={url(routes.show, {id: showData.id})}>\n                {showData.date} {whichSet}\n              </Link>\n            </li>\n          })}\n      </ul>\n    </>\n    : false\n\n  const teasesData = filter(propEq('song_id', songId))(teases)\n  const teasesComponent = teasesData.length > 0\n    ? <>\n      <h2>Teases</h2>\n      <ul>\n        {teasesData.map(teaseData => {\n          const performanceData = find(propEq('id', Number(teaseData.performance_id)))(performances)\n          const setData = find((set) => set.setlist.toString().split(':').includes(performanceData.id.toString()))(sets)\n          const showData = find((show) => [show.set1, show.set2, show.set3, show.encore1, show.encore2].includes(setData.id))(shows)\n          return <li key={teaseData.id}>\n            within <Link to={url(routes.show, {id: showData.id})}>{teaseData.within} — {showData.date}</Link>\n          </li>\n        })}\n      </ul>\n    </>\n    : false\n\n  return <section className=\"songpage\">\n    <h1 className=\"songpage__name\">{songData.title}</h1>\n    <div className=\"songpage__info\">\n      {authorInfo(songData.author)}\n      {songData.suite && <p>Part of the {songData.suite} suite</p>}\n    </div>\n    <div className=\"songpage__performances\">{performancesComponent}</div>\n    <div className=\"songpage__teases\">{teasesComponent}</div>\n  </section>\n}\n","import React from 'react'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\n\nimport {releaseStage} from './release-stages'\nimport {Error, Home, Show, Song} from './pages'\nimport routes from './routes'\n\nimport './App.css'\n\nfunction App() {\n  return <>\n    <div className={`App ${releaseStage()}`}>\n      <a id=\"logo\" href=\"?#\" title=\"return to home page\"><img src=\"https://i.imgur.com/tvtgYVY.png\" alt=\"Good Ol' Almost Dead\" /></a>\n      <HashRouter>\n        <Switch>\n          <Route path={routes.home} exact component={Home} />\n          <Route path={routes.show}       component={Show} />\n          <Route path={routes.song}       component={Song} />\n          <Route path={routes.anyPath}    component={Error} />\n        </Switch>\n      </HashRouter>\n    </div>\n    <footer id=\"site-footer\">\n      Corrections? Contributions?\n      <br />\n      Contact: <a href=\"https://twitter.com/AlmostDeadNet\" target=\"_new\" rel=\"noopener noreferrer\">@AlmostDeadNet on Twitter</a>\n    </footer>\n  </>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\n// serviceWorker provides hot reloading...\nimport * as serviceWorker from './serviceWorker'\n\nimport {determineRelease, releaseStage} from './release-stages'\nimport * as Sentry from '@sentry/browser'\nimport LogRocket from 'logrocket'\n\nLogRocket.init('wi3hyr/a-dn')\n\nSentry.init({\n  dsn: 'https://174349d7133f4877ba279f589bf54642@o412799.ingest.sentry.io/5293476',\n  environment: releaseStage(),\n  release: determineRelease(),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}